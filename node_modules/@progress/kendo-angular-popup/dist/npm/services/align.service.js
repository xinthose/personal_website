"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var dom_service_1 = require("./dom.service");
var util_1 = require("../util");
/**
 * @hidden
 */
var AlignService = /** @class */ (function () {
    function AlignService(_dom) {
        this._dom = _dom;
    }
    AlignService.prototype.alignElement = function (settings) {
        var anchor = settings.anchor, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, margin = settings.margin, offset = settings.offset, positionMode = settings.positionMode;
        var fixedMode = positionMode === 'fixed' || !this._dom.hasOffsetParent(element);
        var anchorRect = fixedMode ? this.absoluteRect(anchor, element, offset) : this.relativeRect(anchor, element, offset);
        return this._dom.align({
            anchorAlign: anchorAlign,
            anchorRect: anchorRect,
            elementAlign: elementAlign,
            elementRect: this._dom.offset(element),
            margin: margin
        });
    };
    AlignService.prototype.absoluteRect = function (anchor, element, offset) {
        return this._dom.removeScroll(this._dom.addScroll(util_1.removeStackingOffset(util_1.eitherRect(this._dom.offset(anchor), offset), this._dom.stackingElementOffset(element)), this._dom.stackingElementScroll(element)), this.elementScrollPosition(anchor, element));
    };
    AlignService.prototype.elementScrollPosition = function (anchor, element) {
        return anchor ? { x: 0, y: 0 } : this._dom.scrollPosition(element);
    };
    AlignService.prototype.relativeRect = function (anchor, element, offset) {
        return util_1.eitherRect(this._dom.position(anchor, element), offset);
    };
    AlignService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    AlignService.ctorParameters = function () { return [
        { type: dom_service_1.DOMService, },
    ]; };
    return AlignService;
}());
exports.AlignService = AlignService;
