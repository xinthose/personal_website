"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var dom_service_1 = require("./dom.service");
var util_1 = require("../util");
/**
 * @hidden
 */
var PositionService = (function () {
    function PositionService(_dom) {
        this._dom = _dom;
    }
    PositionService.prototype.positionElement = function (settings) {
        var anchor = settings.anchor, currentLocation = settings.currentLocation, positionMode = settings.positionMode, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, collisions = settings.collisions;
        var dom = this._dom;
        var viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);
        var anchorRect = util_1.eitherRect(dom.offset(anchor), currentLocation);
        var initialElementRect = util_1.replaceOffset(dom.staticOffset(element), currentLocation);
        var elementRect = this.elementRect(element, initialElementRect, positionMode);
        var result = dom.restrictToView({
            anchorAlign: anchorAlign,
            anchorRect: anchorRect,
            collisions: collisions,
            elementAlign: elementAlign,
            elementRect: elementRect,
            viewPort: viewPort
        });
        return {
            flipped: result.flipped,
            offset: dom.addOffset(initialElementRect, result.offset)
        };
    };
    PositionService.prototype.elementRect = function (element, rect, mode) {
        if (mode === 'fixed') {
            return rect;
        }
        return this._dom.removeScroll(rect, this._dom.scrollPosition(element));
    };
    return PositionService;
}());
PositionService.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
PositionService.ctorParameters = function () { return [
    { type: dom_service_1.DOMService, },
]; };
exports.PositionService = PositionService;
