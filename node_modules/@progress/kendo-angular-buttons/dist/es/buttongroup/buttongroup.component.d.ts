import { ButtonDirective } from '../button/button.directive';
import { QueryList, OnInit, OnDestroy, AfterContentChecked, AfterViewChecked, AfterContentInit } from '@angular/core';
import { ButtonGroupSelection } from '../button/selection-settings';
import { KendoButtonService } from '../button/button.service';
import { ButtonLook } from '../button-look';
/**
 * Represents the Kendo UI ButtonGroup component for Angular.
 */
export declare class ButtonGroupComponent implements OnInit, OnDestroy, AfterContentChecked, AfterViewChecked, AfterContentInit {
    private service;
    /**
     * By default, the ButtonGroup is enabled.
     * To disable the whole group of buttons, set its `disabled` attribute to `true`.
     *
     * To disable a specific button, set its own `disabled` attribute to `true`
     * and leave the `disabled` attribute of the ButtonGroup undefined.
     * If you define the `disabled` attribute of the ButtonGroup, it will take
     * precedence over the `disabled` attributes of the underlying buttons and they will be ignored.
     *
     * For more information on how to configure the Button, refer to
     * its [API documentation]({% slug api_buttons_buttondirective %}).
     */
    disabled: boolean;
    /**
     * By default, the selection mode of the ButtonGroup is set to `multiple`.
     */
    selection: ButtonGroupSelection;
    /**
     * Sets the width of the ButtonGroup.
     * If the width of the ButtonGroup is set:
     * - The buttons resize automatically to fill the full width of the group wrapper.
     * - The buttons acquire the same width.
     */
    width: string;
    /**
     * Changes the visual appearance by using alternative styling options.
     * The available values are:
     * * `bare`
     * * `flat`
     * * `outline`
     *
     * The `look` property of the ButtonGroup takes precedence over the `look` property
     * of the individual buttons that are part of the group.
     */
    look: ButtonLook;
    buttons: QueryList<ButtonDirective>;
    private direction;
    private subscription;
    readonly wrapperClass: boolean;
    readonly disabledClass: boolean;
    readonly stretchedClass: boolean;
    readonly isBare: boolean;
    readonly isFlat: boolean;
    readonly isOutline: boolean;
    readonly getRole: string;
    readonly dir: string;
    readonly ariaDisabled: boolean;
    readonly wrapperWidth: string;
    /**
     * @hidden
     */
    keydown(event: any): void;
    constructor(service: KendoButtonService, rtl: boolean);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    protected deactivate(buttons: Array<ButtonDirective>): void;
    protected activate(buttons: Array<ButtonDirective>): void;
    private verifySettings();
    private isSelectionSingle();
}
