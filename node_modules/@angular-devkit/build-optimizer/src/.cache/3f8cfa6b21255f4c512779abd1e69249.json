{"remainingRequest":"/home/adam/Documents/workspace/git/personal_website/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/adam/Documents/workspace/git/personal_website/node_modules/@progress/kendo-angular-l10n/dist/es/message.service.js","dependencies":[{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/@progress/kendo-angular-l10n/dist/es/message.service.js","mtime":1522381253064},{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/cache-loader/dist/cjs.js","mtime":1522427415071},{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n/* tslint:disable:max-line-length */\n/**\n * An abstract base class for a service that returns localized messages.\n *\n * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).\n */\nvar MessageService = /*@__PURE__*/ (function () {\n    function MessageService() {\n        /**\n         * @hidden\n         */\n        this.changes = new Subject();\n    }\n    /**\n     * Notifies components that messages has been changed\n     *\n     * @param rtl - (Optional) New value for the [text direction token]({% slug api_l10n_rtl %})\n     */\n    MessageService.prototype.notify = function (rtl) {\n        this.changes.next({ rtl: rtl });\n    };\n    return MessageService;\n}());\nexport { MessageService };\n",null]}