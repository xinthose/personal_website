{"remainingRequest":"/home/adam/Documents/workspace/git/personal_website/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/adam/Documents/workspace/git/personal_website/node_modules/@progress/kendo-angular-buttons/dist/es/navigation/navigation.service.js","dependencies":[{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/@progress/kendo-angular-buttons/dist/es/navigation/navigation.service.js","mtime":1516893312000},{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/cache-loader/dist/cjs.js","mtime":1522427415071},{"path":"/home/adam/Documents/workspace/git/personal_website/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Inject, EventEmitter } from '@angular/core';\nimport { isPresent } from './../util';\nimport { KeyEvents } from './key-events';\nimport { Keys } from './keys';\nimport { NavigationAction } from './navigation-action';\nimport { NAVIGATION_CONFIG } from './navigation-config';\n/**\n * @hidden\n */\nvar NavigationService = /*@__PURE__*/ (function () {\n    function NavigationService(config) {\n        this.navigate = new EventEmitter();\n        this.open = new EventEmitter();\n        this.close = new EventEmitter();\n        this.enter = new EventEmitter();\n        this.enterpress = new EventEmitter();\n        this.enterup = new EventEmitter();\n        this.tab = new EventEmitter();\n        this.esc = new EventEmitter();\n        this.useLeftRightArrows = config.useLeftRightArrows;\n    }\n    NavigationService.prototype.process = function (args) {\n        var keyCode = args.keyCode;\n        var keyEvent = args.keyEvent;\n        var index;\n        var action = NavigationAction.Undefined;\n        if (keyEvent === KeyEvents.keypress) {\n            if (this.isEnter(keyCode)) {\n                action = NavigationAction.EnterPress;\n            }\n        }\n        else if (keyEvent === KeyEvents.keyup) {\n            if (this.isEnter(keyCode)) {\n                action = NavigationAction.EnterUp;\n            }\n        }\n        else {\n            if (args.altKey && keyCode === Keys.down) {\n                action = NavigationAction.Open;\n            }\n            else if (args.altKey && keyCode === Keys.up) {\n                action = NavigationAction.Close;\n            }\n            else if (this.isEnter(keyCode)) {\n                action = NavigationAction.Enter;\n            }\n            else if (keyCode === Keys.esc) {\n                action = NavigationAction.Esc;\n            }\n            else if (keyCode === Keys.tab) {\n                action = NavigationAction.Tab;\n            }\n            else if (keyCode === Keys.up || (this.useLeftRightArrows && keyCode === Keys.left)) {\n                index = this.next({\n                    current: args.current,\n                    start: args.max,\n                    end: args.min,\n                    step: -1\n                });\n                action = NavigationAction.Navigate;\n            }\n            else if (keyCode === Keys.down || (this.useLeftRightArrows && keyCode === Keys.right)) {\n                index = this.next({\n                    current: args.current,\n                    start: args.min,\n                    end: args.max,\n                    step: 1\n                });\n                action = NavigationAction.Navigate;\n            }\n        }\n        if (action !== NavigationAction.Undefined) {\n            this[NavigationAction[action].toLowerCase()].emit(index);\n        }\n        return action;\n    };\n    NavigationService.prototype.isEnter = function (keyCode) {\n        return keyCode === Keys.enter || keyCode === Keys.space;\n    };\n    NavigationService.prototype.next = function (args) {\n        if (!isPresent(args.current)) {\n            return args.start;\n        }\n        else {\n            return args.current !== args.end ? args.current + args.step : args.end;\n        }\n    };\n    return NavigationService;\n}());\nexport { NavigationService };\n",null]}