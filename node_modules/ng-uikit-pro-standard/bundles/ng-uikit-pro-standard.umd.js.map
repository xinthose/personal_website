{"version":3,"file":"ng-uikit-pro-standard.umd.js","sources":["../../../build/ng-uikit-pro-standard/mdb.module.ts","../../../build/ng-uikit-pro-standard/pro/mdb-pro.module.ts","../../../build/ng-uikit-pro-standard/free/mdb-free.module.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/bs-component-ref.class.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.module.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.directive.ts","../../../build/ng-uikit-pro-standard/free/utils/decorators.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.component.ts","../../../build/ng-uikit-pro-standard/free/tooltip/tooltip.service.ts","../../../build/ng-uikit-pro-standard/free/tables/tables.module.ts","../../../build/ng-uikit-pro-standard/free/tables/directives/mdb-table.directive.ts","../../../build/ng-uikit-pro-standard/free/tables/directives/mdb-table-sort.directive.ts","../../../build/ng-uikit-pro-standard/free/tables/directives/mdb-table-scroll.directive.ts","../../../build/ng-uikit-pro-standard/free/tables/directives/mdb-table-row.directive.ts","../../../build/ng-uikit-pro-standard/free/tables/components/mdb-table-pagination.component.ts","../../../build/ng-uikit-pro-standard/free/tables/services/mdb-table.service.ts","../../../build/ng-uikit-pro-standard/free/waves/waves.module.ts","../../../build/ng-uikit-pro-standard/free/ripple/ripple.module.ts","../../../build/ng-uikit-pro-standard/free/ripple/ripple-effect.directive.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.module.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.directive.ts","../../../build/ng-uikit-pro-standard/free/popover/popover-container.component.ts","../../../build/ng-uikit-pro-standard/free/popover/popover.config.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.module.ts","../../../build/ng-uikit-pro-standard/free/navbars/navlinks.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/logo.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/links.component.ts","../../../build/ng-uikit-pro-standard/free/navbars/navbar.service.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.module.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.service.ts","../../../build/ng-uikit-pro-standard/free/modals/modalContainer.component.ts","../../../build/ng-uikit-pro-standard/free/modals/modalService.config.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.directive.ts","../../../build/ng-uikit-pro-standard/free/modals/modalBackdrop.component.ts","../../../build/ng-uikit-pro-standard/free/modals/modal.options.ts","../../../build/ng-uikit-pro-standard/free/utils/utils.class.ts","../../../build/ng-uikit-pro-standard/free/inputs/inputs.module.ts","../../../build/ng-uikit-pro-standard/free/inputs/equal-validator.directive.ts","../../../build/ng-uikit-pro-standard/free/inputs/mdb-input.directive.ts","../../../build/ng-uikit-pro-standard/free/icons/icon.module.ts","../../../build/ng-uikit-pro-standard/free/icons/icon.component.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.module.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.directive.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/component-loader.factory.ts","../../../build/ng-uikit-pro-standard/free/utils/positioning/positioning.service.ts","../../../build/ng-uikit-pro-standard/free/utils/positioning/ng-positioning.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/component-loader.class.ts","../../../build/ng-uikit-pro-standard/free/utils/component-loader/content-ref.class.ts","../../../build/ng-uikit-pro-standard/free/utils/triggers.ts","../../../build/ng-uikit-pro-standard/free/utils/trigger.class.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.config.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-toggle.directive.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-menu.directive.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown-container.component.ts","../../../build/ng-uikit-pro-standard/free/dropdown/dropdown.state.ts","../../../build/ng-uikit-pro-standard/free/collapse/collapse.module.ts","../../../build/ng-uikit-pro-standard/free/collapse/collapse.component.ts","../../../build/ng-uikit-pro-standard/free/checkbox/checkbox.module.ts","../../../build/ng-uikit-pro-standard/free/checkbox/checkbox.component.ts","../../../build/ng-uikit-pro-standard/free/charts/chart.module.ts","../../../build/ng-uikit-pro-standard/free/charts/chart.directive.ts","../../../build/ng-uikit-pro-standard/free/cards/cards.module.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-header.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-image.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-body.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-text.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-title.component.ts","../../../build/ng-uikit-pro-standard/free/cards/mdb-card-footer.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.module.ts","../../../build/ng-uikit-pro-standard/free/carousel/slide.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.component.ts","../../../build/ng-uikit-pro-standard/free/carousel/carousel.config.ts","../../../build/ng-uikit-pro-standard/free/utils/linked-list.class.ts","../../../build/ng-uikit-pro-standard/free/utils/ng2-bootstrap-config.ts","../../../build/ng-uikit-pro-standard/free/breadcrumbs/breadcrumb.module.ts","../../../build/ng-uikit-pro-standard/free/breadcrumbs/mdb-breadcrumb-item.component.ts","../../../build/ng-uikit-pro-standard/free/breadcrumbs/mdb-breadcrumb.component.ts","../../../build/ng-uikit-pro-standard/free/badge/badge.module.ts","../../../build/ng-uikit-pro-standard/free/badge/mdb-badge.component.ts","../../../build/ng-uikit-pro-standard/free/buttons/buttons.module.ts","../../../build/ng-uikit-pro-standard/free/buttons/radio.directive.ts","../../../build/ng-uikit-pro-standard/free/buttons/checkbox.directive.ts","../../../build/ng-uikit-pro-standard/free/buttons/buttons.directive.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy.module.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy-element.directive.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy-window.directive.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy.directive.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy.service.ts","../../../build/ng-uikit-pro-standard/pro/scroll-spy/scroll-spy-link.directive.ts","../../../build/ng-uikit-pro-standard/pro/time-picker/timepicker.module.ts","../../../build/ng-uikit-pro-standard/pro/time-picker/timepicker.component.ts","../../../build/ng-uikit-pro-standard/pro/tags/chips.module.ts","../../../build/ng-uikit-pro-standard/pro/tags/chips.component.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.module.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/transclude.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tab-heading.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tab.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.component.ts","../../../build/ng-uikit-pro-standard/free/waves/waves-effect.directive.ts","../../../build/ng-uikit-pro-standard/pro/tabs-pills/tabset.config.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/sticky-content.module.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/sticky-content.directive.ts","../../../build/ng-uikit-pro-standard/pro/sticky-content/computed.style.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.module.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.directive.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.instance.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.service.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll.config.ts","../../../build/ng-uikit-pro-standard/pro/smoothscroll/mdb-page-scroll-util.service.ts","../../../build/ng-uikit-pro-standard/pro/sidenav/sidenav.module.ts","../../../build/ng-uikit-pro-standard/pro/sidenav/sidenav.component.ts","../../../build/ng-uikit-pro-standard/pro/range/range.module.ts","../../../build/ng-uikit-pro-standard/pro/range/mdb-range.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-bars-module/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner-module/index.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.module.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progressbar.config.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/bar.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress.directive.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-spinner-module/progress-spinner.component.ts","../../../build/ng-uikit-pro-standard/pro/progressbars/progress-bars-module/progressbar.component.ts","../../../build/ng-uikit-pro-standard/pro/preloader/preloader.service.ts","../../../build/ng-uikit-pro-standard/pro/preloader/preloader.constants.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select.module.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select.component.ts","../../../build/ng-uikit-pro-standard/pro/material-select/select-dropdown.component.ts","../../../build/ng-uikit-pro-standard/pro/material-select/option-list.ts","../../../build/ng-uikit-pro-standard/pro/material-select/option.ts","../../../build/ng-uikit-pro-standard/pro/material-select/diacritics.ts","../../../build/ng-uikit-pro-standard/pro/lightbox/light-box.module.ts","../../../build/ng-uikit-pro-standard/pro/lightbox/image-popup.ts","../../../build/ng-uikit-pro-standard/pro/inputs/char-counter.module.ts","../../../build/ng-uikit-pro-standard/pro/inputs/char-counter.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/module/mdb-uploader.module.ts","../../../build/ng-uikit-pro-standard/pro/file-input/directives/mdb-file-select.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/directives/mdb-file-drop.directive.ts","../../../build/ng-uikit-pro-standard/pro/file-input/classes/mdb-uploader.class.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-simple.module.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-smallpie.component.ts","../../../build/ng-uikit-pro-standard/pro/easy-charts/chart-simple.component.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/datepicker.module.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/datepicker.component.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/services/datepickerUtil.service.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/directives/datepickerFocus.directive.ts","../../../build/ng-uikit-pro-standard/pro/date-picker/directives/datepickerAutofill.directive.ts","../../../build/ng-uikit-pro-standard/pro/auto-format/auto-format.module.ts","../../../build/ng-uikit-pro-standard/pro/auto-format/mdb-cvv.directive.ts","../../../build/ng-uikit-pro-standard/pro/auto-format/mdb-credit-card.directive.ts","../../../build/ng-uikit-pro-standard/pro/auto-format/mdb-date-format.directive.ts","../../../build/ng-uikit-pro-standard/pro/cards/cards.module.ts","../../../build/ng-uikit-pro-standard/pro/cards/card-rotating.component.ts","../../../build/ng-uikit-pro-standard/pro/cards/card-reveal.component.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/ng2-completer.module.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/data-factory.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/row.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/list-context.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/input.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/dropdown.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/components/completer.component.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/completer.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/remote-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/local-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/services/base-data.service.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/globals.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/directives/completer.directive.ts","../../../build/ng-uikit-pro-standard/pro/autocomplete/components/completer-list-item.component.ts","../../../build/ng-uikit-pro-standard/pro/animations/animations.component.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.module.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.service.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.token.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.injector.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.directive.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.component.ts","../../../build/ng-uikit-pro-standard/pro/alerts/toast/toast.config.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay.ts","../../../build/ng-uikit-pro-standard/pro/alerts/portal/dom-portal-host.ts","../../../build/ng-uikit-pro-standard/pro/alerts/portal/portal.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay-ref.ts","../../../build/ng-uikit-pro-standard/pro/alerts/overlay/overlay-container.ts","../../../build/ng-uikit-pro-standard/pro/accordion/index.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/squeezebox.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.head.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb.config.ts","../../../build/ng-uikit-pro-standard/pro/accordion/components/sb-item.body.ts","../../../build/ng-uikit-pro-standard/free/utils/facade/browser.ts"],"sourcesContent":["import { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { MDBBootstrapModule } from './free/mdb-free.module';\nimport { MDBBootstrapModulePro } from './pro/mdb-pro.module';\n\nexport {\n  MDBBootstrapModule\n} from './free/mdb-free.module';\n\nexport {\n  MDBBootstrapModulePro\n} from './pro/mdb-pro.module';\n\nconst MODULES = [\n  MDBBootstrapModule,\n  MDBBootstrapModulePro\n];\n\n@NgModule({\n  imports: [\n    MDBBootstrapModule.forRoot(),\n    MDBBootstrapModulePro.forRoot(),\n  ],\n  exports: MODULES,\n  providers: [\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class MDBRootModules {\n}\n\n@NgModule({exports: MODULES})\nexport class MDBBootstrapModulesPro {\n  public static forRoot(): ModuleWithProviders {\n  return {ngModule: MDBRootModules};\n  }\n}\n","import { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { AutocompleteModule } from './autocomplete/ng2-completer.module';\nimport { CardsModule } from './cards/cards.module';\nimport { FileInputModule } from './file-input/module/mdb-uploader.module';\nimport { MaterialChipsModule } from './tags/chips.module';\nimport { ProgressBars } from './progressbars/index';\nimport { TabsModule } from './tabs-pills/tabset.module';\nimport { SelectModule } from './material-select/select.module';\nimport { DatepickerModule } from './date-picker/datepicker.module';\nimport { TimePickerModule } from './time-picker/timepicker.module';\nimport { LightBoxModule } from './lightbox/light-box.module';\nimport { SidenavModule } from './sidenav/sidenav.module';\nimport { ChartSimpleModule } from './easy-charts/chart-simple.module';\nimport { AccordionModule } from './accordion/index';\nimport { StickyContentModule } from './sticky-content/sticky-content.module';\nimport { SmoothscrollModule } from './smoothscroll/index';\nimport { CharCounterModule } from './inputs/char-counter.module';\nimport { ScrollSpyModule } from './scroll-spy/scroll-spy.module';\nimport { AutoFormatModule } from './auto-format/auto-format.module';\nimport { RangeModule } from './range/range.module';\n\nexport {\n  RangeModule, MdbRangeInputComponent\n} from './range/index';\n\nexport {\n  AutoFormatModule, MdbDateFormatDirective, MdbCreditCardDirective, MdbCvvDirective\n} from './auto-format/index';\n\nexport {\n  ScrollSpyModule, ScrollSpyDirective, ScrollSpyWindowDirective, ScrollSpyElementDirective, ScrollSpyLinkDirective, ScrollSpyService\n} from './scroll-spy/index';\n\nexport {\n  AutocompleteModule, CompleterComponent, CompleterListItemComponent, CompleterService, LocalDataFactoryProvider,\n  RemoteDataFactoryProvider, MdbCompleterDirective, MdbDropdownDirective, MdbInputCompleteDirective, MdbListDirective, MdbRowDirective\n} from './autocomplete/index';\n\n\nexport {\n  CardsModule, CardRotatingComponent, CardRevealComponent\n} from './cards/index';\n\nexport {\n  ProgressbarComponent, ProgressbarConfigComponent, ProgressbarModule, ProgressBars, ProgressDirective,\n  ProgressSpinnerComponent, BarComponent\n} from './progressbars/index';\n\nexport {\n  MaterialChipsComponent, MaterialChipsModule\n} from './tags/index';\n\nexport {\n  TabDirective, TabHeadingDirective, TabsetComponent, TabsetConfig, TabsModule, NgTranscludeDirective\n} from './tabs-pills/index';\n\nexport {\n  MDBSpinningPreloader\n} from './preloader/preloader.service';\n\nexport {\n  SelectModule, Diacritics, Option, OptionList, IOption, SELECT_VALUE_ACCESSOR, SelectComponent, SelectDropdownComponent\n} from './material-select/index';\n\nexport {\n  MDBDatePickerComponent, DatepickerModule, IMyCalendarDay, IMyCalendarViewChanged, IMyDate, IMyDateModel, IMyDateRange,\n  IMyDayLabels, IMyInputAutoFill, IMyInputFieldChanged, IMyInputFocusBlur, IMyLocales, IMyMarkedDate, IMyMarkedDates,\n  IMyMonth, IMyMonthLabels, IMyOptions, IMyWeek, IMyWeekday, InputAutoFillDirective, MYDP_VALUE_ACCESSOR, UtilService,\n  LocaleService, FocusDirective\n} from './date-picker/index';\n\nexport {\n  TimePickerModule, ClockPickerComponent\n} from './time-picker/index';\n\nexport { LightBoxModule, ImageModalComponent } from './lightbox/index';\n\nexport {\n  SidenavComponent, SidenavModule\n} from './sidenav/index';\n\nexport {\n  ChartSimpleModule, EasyPieChartComponent, SimpleChartComponent\n} from './easy-charts/index';\n\nexport {\n  SBItemComponent, SBItemBodyComponent, SBItemHeadComponent, SqueezeBoxComponent, AccordionModule\n} from './accordion/index';\n\nexport {\n  MdbStickyDirective, StickyContentModule\n} from './sticky-content/index';\n\nexport {\n  SmoothscrollModule, PageScrollDirective, PageScrollConfig, PageScrollingViews, PageScrollInstance, PageScrollService,\n  PageScrollTarget, PageScrollUtilService, EasingLogic\n} from './smoothscroll/index';\n\nexport {\n  CharCounterDirective, CharCounterModule\n} from './inputs/index';\n\nexport {\n  MDBFileDropDirective, MDBFileSelectDirective, FileInputModule, MDBUploaderService, UploadFile, UploadOutput,\n  UploadInput, humanizeBytes\n} from './file-input/index';\n\nconst MODULES = [\n  AutocompleteModule,\n  CardsModule,\n  FileInputModule,\n  MaterialChipsModule,\n  ProgressBars,\n  TabsModule,\n  SelectModule,\n  DatepickerModule,\n  TimePickerModule,\n  LightBoxModule,\n  SidenavModule,\n  ChartSimpleModule,\n  AccordionModule,\n  StickyContentModule,\n  SmoothscrollModule,\n  CharCounterModule,\n  ScrollSpyModule,\n  AutoFormatModule,\n  RangeModule\n];\n\n@NgModule({\n  imports: [\n    AutocompleteModule,\n    CardsModule.forRoot(),\n    MaterialChipsModule,\n    ProgressBars.forRoot(),\n    TabsModule.forRoot(),\n    SelectModule,\n    DatepickerModule,\n    TimePickerModule,\n    LightBoxModule,\n    SidenavModule,\n    ChartSimpleModule,\n    AccordionModule,\n    StickyContentModule,\n    SmoothscrollModule.forRoot(),\n    CharCounterModule.forRoot(),\n    ScrollSpyModule,\n    AutoFormatModule,\n    RangeModule\n  ],\n  exports: [MODULES],\n  providers: [\n  ],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class MDBRootModulePro {\n}\n\n@NgModule({ exports: [MODULES] })\nexport class MDBBootstrapModulePro {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: MDBRootModulePro };\n  }\n}\n","\n\n// free\nimport { ModuleWithProviders, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { CardsFreeModule } from './cards/cards.module';\nimport { ButtonsModule } from './buttons/buttons.module';\nimport { RippleModule } from './ripple/ripple.module';\nimport { NavbarModule } from './navbars/navbar.module';\nimport { DropdownModule } from './dropdown/dropdown.module';\nimport { CarouselModule } from './carousel/carousel.module';\nimport { ChartsModule } from './charts/chart.module';\nimport { CollapseModule } from './collapse/collapse.module';\nimport { ModalModule } from './modals/modal.module';\nimport { TooltipModule } from './tooltip/tooltip.module';\nimport { PopoverModule } from './popover/popover.module';\nimport { InputsModule } from './inputs/inputs.module';\nimport { WavesModule } from './waves/waves.module';\nimport { IconsModule } from './icons/icon.module';\nimport { CheckboxModule } from './checkbox/checkbox.module';\nimport { TableModule } from './tables/tables.module';\nimport { BadgeModule } from './badge/badge.module';\nimport { BreadcrumbModule } from './breadcrumbs/breadcrumb.module';\n\nexport {\n  MdbBreadcrumbComponent, MdbBreadcrumbItemComponent, BreadcrumbModule\n} from './breadcrumbs/index';\n\nexport {\n  MDBBadgeComponent, BadgeModule\n} from './badge/index';\n\nexport {\n  MdbTablePaginationComponent, MdbTableRowDirective, MdbTableScrollDirective,\n  MdbTableSortDirective, MdbTableDirective, MdbTableService, TableModule\n} from './tables/index';\n\nexport {\n  CHECKBOX_VALUE_ACCESSOR, CheckboxComponent, CheckboxModule\n} from './checkbox/index';\n\nexport {\n  ButtonsModule, ButtonRadioDirective, ButtonCheckboxDirective, MdbBtnDirective\n} from './buttons/index';\n\nexport {\n  CardsFreeModule,\n  MdbCardComponent,\n  MdbCardBodyComponent,\n  MdbCardImageComponent,\n  MdbCardTextComponent,\n  MdbCardTitleComponent,\n  MdbCardFooterComponent,\n  MdbCardHeaderComponent\n} from './cards/index';\n\nexport {\n  RippleModule, RippleDirective\n} from './ripple/index';\n\nexport {\n  WavesModule, WavesDirective\n} from './waves/index';\n\nexport {\n  InputsModule, MdbInputDirective\n} from './inputs/index';\n\nexport {\n  NavbarModule\n} from './navbars/index';\n\nexport {\n  BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective,\n  DropdownModule, BsDropdownState, BsDropdownToggleDirective\n} from './dropdown/index';\n\nexport {\n  CarouselComponent, CarouselConfig, CarouselModule\n} from './carousel/index';\n\nexport {\n  ChartsModule, BaseChartDirective\n} from './charts/index';\n\nexport {\n  CollapseComponent, CollapseModule\n} from './collapse/index';\n\nexport {\n  ModalBackdropComponent, ModalBackdropOptions, ModalDirective, ModalModule, ModalOptions, MDBModalService,\n  ModalContainerComponent, MDBModalRef\n} from './modals/index';\n\nexport {\n  TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule\n} from './tooltip/index';\n\nexport {\n  PopoverConfig, PopoverContainerComponent, PopoverModule, PopoverDirective\n} from './popover/index';\n\nexport {\n  IconsModule, MdbIconComponent\n} from './icons/index';\n\n\n\nconst MODULES = [\n  ButtonsModule,\n  CardsFreeModule,\n  RippleModule,\n  WavesModule,\n  InputsModule,\n  NavbarModule,\n  DropdownModule,\n  CarouselModule,\n  ChartsModule,\n  CollapseModule,\n  ModalModule,\n  TooltipModule,\n  PopoverModule,\n  IconsModule,\n  CheckboxModule,\n  TableModule,\n  BadgeModule,\n  BreadcrumbModule\n];\n\n@NgModule({\n  imports: [\n    ButtonsModule,\n    RippleModule.forRoot(),\n    WavesModule.forRoot(),\n    InputsModule.forRoot(),\n    NavbarModule,\n    DropdownModule.forRoot(),\n    CarouselModule.forRoot(),\n    ChartsModule,\n    CollapseModule.forRoot(),\n    ModalModule.forRoot(),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    IconsModule,\n    CardsFreeModule.forRoot(),\n    CheckboxModule,\n    TableModule,\n    BadgeModule,\n    BreadcrumbModule\n  ],\n  exports: MODULES,\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class MDBRootModule {\n}\n\n@NgModule({ exports: MODULES })\nexport class MDBBootstrapModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: MDBRootModule };\n  }\n}\n","import { TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class BsComponentRef<T> {\n  templateRef: TemplateRef<T>;\n  viewContainer: ViewContainerRef;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipConfig } from './tooltip.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { PositioningService } from '../utils/positioning/positioning.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n})\nexport class TooltipModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TooltipModule,\n      providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n","import {\n  Directive, Input, TemplateRef, ViewContainerRef, Output, EventEmitter,\n  Renderer2, ElementRef, OnInit, OnDestroy, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip.component';\nimport { TooltipConfig } from './tooltip.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { OnChange } from '../utils/decorators';\n\n@Directive({\n  selector: '[mdbTooltip]',\n  exportAs: 'mdb-tooltip'\n})\nexport class TooltipDirective implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  @Input() public mdbTooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  @Output() public tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() public placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() public triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() public container: string;\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  @Input()\n  public get isOpen(): boolean { return this._tooltip.isShown; }\n\n  public set isOpen(value: boolean) {\n    if (value) { this.show(); } else { this.hide(); }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n  @Input() public isDisabled: boolean;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() public onShown: EventEmitter<any>;\n  @Output() public shown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() public onHidden: EventEmitter<any>;\n  @Output() public hidden: EventEmitter<any>;\n\n  @Input() public delay = 0;\n\n  @Input() public fadeDuration = 150;\n\n  protected _delayTimeoutId: any;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n\n  public constructor(_viewContainerRef: ViewContainerRef,\n    _renderer: Renderer2,\n    _elementRef: ElementRef,\n    cis: ComponentLoaderFactory,\n    config: TooltipConfig) {\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(_elementRef, _viewContainerRef, _renderer)\n      .provide({ provide: TooltipConfig, useValue: config });\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.shown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n    this.hidden = this._tooltip.onHidden;\n  }\n\n  public ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes['mdbTooltip'].isFirstChange()) {\n      this.tooltipChange.emit(this.mdbTooltip);\n    }\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public show(): void {\n    if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.mdbTooltip) {\n      return;\n    }\n\n    const showTooltip = () => this._tooltip\n      .attach(TooltipContainerComponent)\n      .to(this.container)\n      .position({ attachment: this.placement })\n      .show({\n        content: this.mdbTooltip,\n        placement: this.placement\n      });\n\n    if (this.delay) {\n      this._delayTimeoutId = setTimeout(() => { showTooltip(); }, this.delay);\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  public hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this.fadeDuration);\n  }\n\n  public dispose() {\n    this._tooltip.dispose();\n  }\n\n  public ngOnDestroy(): void {\n    this._tooltip.dispose();\n  }\n}\n","/*tslint:disable:no-invalid-this */\nexport function OnChange(): any {\n  const sufix = 'Change';\n  return function OnChangeHandler(target: any, propertyKey: string): void {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get(): any { return this[_key]; },\n      set(value: any): void {\n        const prevValue = this[_key];\n        this[_key] = value;\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n    });\n  };\n}\n/* tslint:enable */\n","import { AfterViewInit, Component, ChangeDetectionStrategy, HostBinding, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { TooltipConfig } from './tooltip.service';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Component({\n  selector: 'mdb-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]': '\"tooltip-fadeIn tooltip in tooltip-\" + placement'\n  },\n  template: `\n  <div #tooltipArrow class=\"tooltip-arrow\" [ngClass]=\"{'left': placement == 'left', 'right': placement == 'right', 'top': placement == 'top'}\"></div>\n  <div #tooltipInner class=\"tooltip-inner\"><ng-content></ng-content></div>\n  `\n})\nexport class TooltipContainerComponent implements AfterViewInit {\n  public classMap: any;\n  public placement: string;\n  public popupClass: string;\n  public animation: boolean;\n  @ViewChild('tooltipInner') tooltipInner: ElementRef;\n  @ViewChild('tooltipArrow') tooltipArrow: ElementRef;\n  @HostBinding('class.show') show = !this.isBs3;\n\n  public get isBs3(): boolean {\n    return isBs3();\n  }\n\n  public constructor(config: TooltipConfig, private r: Renderer2) {\n    Object.assign(this, config);\n  }\n\n  public ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap['tooltip-' + this.placement] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.popupClass) {\n      this.classMap[this.popupClass] = true;\n    }\n    setTimeout(() => {\n      const arrowClassList = this.tooltipArrow.nativeElement.classList;\n      const tooltipHeight = this.tooltipInner.nativeElement.clientHeight;\n      if (arrowClassList.contains('top')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top', tooltipHeight + 6 + 'px');\n      } else if (arrowClassList.contains('left')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top',  (tooltipHeight / 2) + 'px');\n      } else if (arrowClassList.contains('right')) {\n        this.r.setStyle(this.tooltipArrow.nativeElement, 'top',  (tooltipHeight / 2) + 'px');\n      }\n    }, 0);\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n@Injectable()\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  public placement = 'top';\n  /** array of event names which triggers tooltip opening */\n  public triggers = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  public container: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MdbTableDirective } from './directives/mdb-table.directive';\nimport { MdbTableSortDirective } from './directives/mdb-table-sort.directive';\nimport { MdbTableScrollDirective } from './directives/mdb-table-scroll.directive';\nimport { MdbTableRowDirective } from './directives/mdb-table-row.directive';\nimport { MdbTableService } from './services/mdb-table.service';\nimport { MdbTablePaginationComponent } from './components/mdb-table-pagination.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        MdbTablePaginationComponent,\n        MdbTableRowDirective,\n        MdbTableScrollDirective,\n        MdbTableSortDirective,\n        MdbTableDirective\n    ],\n    exports: [\n        MdbTablePaginationComponent,\n        MdbTableRowDirective,\n        MdbTableScrollDirective,\n        MdbTableSortDirective,\n        MdbTableDirective\n    ],\n    entryComponents: [MdbTablePaginationComponent],\n    providers: [MdbTableService]\n})\n\nexport class TableModule { }\n","import { Directive, OnInit, Renderer2, ElementRef, Input, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[mdbTable]'\n})\nexport class MdbTableDirective implements OnInit {\n  @Input()\n  @HostBinding('class.table-striped') striped: boolean;\n\n  @Input()\n  @HostBinding('class.table-bordered') bordered: boolean;\n\n  @Input()\n  @HostBinding('class.table-borderless') borderless: boolean;\n\n  @Input()\n  @HostBinding('class.table-hover') hover: boolean;\n\n  @Input()\n  @HostBinding('class.table-sm') small: boolean;\n\n  @Input()\n  @HostBinding('class.table-responsive') responsive: boolean;\n\n  @Input() stickyHeader: boolean = false;\n  @Input() stickyHeaderBgColor: string = '';\n  @Input() stickyHeaderTextColor: string = '';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, 'table');\n\n    if (this.stickyHeader) {\n      const tableHead = this.el.nativeElement.querySelector('thead');\n      this.renderer.addClass(tableHead, 'sticky-top');\n      if (this.stickyHeaderBgColor) {\n        this.renderer.setStyle(tableHead, 'background-color', this.stickyHeaderBgColor);\n      } else {\n        this.renderer.setStyle(tableHead, 'background-color', '#f2f2f2');\n      }\n      if (this.stickyHeaderTextColor) {\n        this.renderer.setStyle(tableHead, 'color', this.stickyHeaderTextColor);\n      } else {\n        this.renderer.setStyle(tableHead, 'color', '#000000');\n      }\n    }\n  }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[mdbTableSort]'\n})\nexport class MdbTableSortDirective {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('mdbTableSort') dataSource: Array<any> = [];\n\n  @Input() sortBy: string;\n\n  sorted = false;\n\n  @HostListener('click') onclick() {\n    this.sortDataBy(this.sortBy.toLowerCase());\n  }\n  constructor() { }\n\n  sortDataBy(key: string | any): void {\n\n    this.dataSource.sort((a: any, b: any) => {\n      if (a[key] < b[key]) {\n        return this.sorted ? 1 : -1;\n      }\n      if (a[key] > b[key]) {\n        return this.sorted ? -1 : 1;\n      }\n      return 0;\n    });\n\n    this.sorted = !this.sorted;\n  }\n}\n","import { Directive, ElementRef, Renderer2, OnInit, Input } from '@angular/core';\n\n@Directive({\n  selector: '[mdbTableScroll]'\n})\nexport class MdbTableScrollDirective implements OnInit {\n  @Input() scrollY: boolean = false;\n  @Input() maxHeight: any = null;\n\n  @Input() scrollX = false;\n  @Input() maxWidth: any = null;\n\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n  wrapTableWithVerticalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-y', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  wrapTableWithHorizontalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper: ElementRef) {\n    this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight + 'px');\n    this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth + 'px');\n    this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n    this.renderer.setStyle(tableWrapper, 'display', 'block');\n  }\n\n  ngOnInit() {\n    const parent = this.el.nativeElement.parentNode;\n    const tableWrapper = this.renderer.createElement('div');\n\n    if (this.scrollY && this.scrollX && this.maxHeight && this.maxWidth) {\n      this.wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper);\n    }\n\n    if (this.scrollY && this.maxHeight) {\n      this.wrapTableWithVerticalScrollingWrapper(tableWrapper);\n    }\n\n    if (this.scrollX && this.maxWidth) {\n      this.wrapTableWithHorizontalScrollingWrapper(tableWrapper);\n    }\n\n    this.renderer.insertBefore(parent, tableWrapper, this.el.nativeElement);\n    this.renderer.removeChild(parent, this.el.nativeElement);\n    this.renderer.appendChild(tableWrapper, this.el.nativeElement);\n  }\n}\n","import { Directive, Output, EventEmitter, OnInit, OnDestroy, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[mdbTableRow]'\n})\nexport class MdbTableRowDirective implements OnInit, OnDestroy {\n\n  @Output() rowCreated = new EventEmitter<any>();\n  @Output() rowRemoved = new EventEmitter<any>();\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.rowCreated.emit({ created: true, el: this.el.nativeElement });\n  }\n\n  ngOnDestroy() {\n    this.rowRemoved.emit({ removed: true });\n  }\n\n}\n","import {\n  Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, OnChanges,\n  SimpleChanges,\n  AfterViewChecked\n} from '@angular/core';\nimport { MdbTableService } from '../services/mdb-table.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'mdb-table-pagination',\n  template: \"<!--Pagination --> <nav> <ul class=\\\"pagination pagination-circle pg-blue d-flex flex-center\\\" [ngClass]=\\\"{ 'justify-content-end': paginationAlign =='end', 'justify-content-start': paginationAlign =='start' }\\\"> <p *ngIf=\\\"!hideDescription\\\">{{firstItemIndex}} - {{lastVisibleItemIndex}} of {{allItemsLength}}</p> <!--Arrow left--> <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled': checkIfPreviousShouldBeDisabled()}\\\"> <a class=\\\"page-link\\\" mdbWavesEffect aria-label=\\\"Previous\\\" (click)=\\\"previousPage()\\\"> <span aria-hidden=\\\"true\\\">«</span> </a> </li> <!--Arrow right--> <li class=\\\"page-item\\\" [ngClass]=\\\"{'disabled': checkIfNextShouldBeDisabled()}\\\"> <a class=\\\"page-link\\\" mdbWavesEffect aria-label=\\\"Next\\\" (click)=\\\"nextPage()\\\"> <span aria-hidden=\\\"true\\\">»</span> </a> </li> </ul> </nav> <!--/Pagination --> \"\n})\nexport class MdbTablePaginationComponent implements OnInit, OnChanges, AfterViewChecked {\n  @Input() searchPagination: boolean = false;\n  @Input() searchDataSource: any = null;\n\n  @Input() paginationAlign: string = '';\n  @Input() hideDescription: boolean = false;\n\n  maxVisibleItems: number = 10;\n\n  firstItemIndex: number = 0;\n  lastItemIndex: number = this.maxVisibleItems;\n  lastVisibleItemIndex: number = 5;\n\n  activePageNumber: number = 1;\n\n  allItemsLength: number = 0;\n\n  nextShouldBeDisabled: boolean = false;\n  previousShouldBeDisabled: boolean = true;\n\n  searchText: string = '';\n  @Output() nextPageClick = new EventEmitter<any>();\n  @Output() previousPageClick = new EventEmitter<any>();\n\n  constructor(private tableService: MdbTableService,\n    private cdRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.allItemsLength = this.tableService.getDataSource().length;\n  }\n\n  ngAfterViewChecked() {\n    this.tableService.dataSourceChange().subscribe((data: any) => {\n      this.allItemsLength = data.length;\n      this.lastVisibleItemIndex = data.length;\n      this.calculateFirstItemIndex();\n      this.calculateLastItemIndex();\n      this.disableNextButton(data);\n      this.cdRef.detectChanges();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const searchDataSource = changes['searchDataSource'];\n    if (searchDataSource.currentValue.length !== 0) {\n      this.allItemsLength = searchDataSource.currentValue.length;\n    }\n\n    if (this.lastVisibleItemIndex > this.allItemsLength) {\n      this.lastVisibleItemIndex = this.allItemsLength;\n    }\n\n    if (searchDataSource.currentValue.length === 0) {\n      this.firstItemIndex = 0;\n      this.lastItemIndex = 0;\n      this.lastVisibleItemIndex = 0;\n      this.allItemsLength = 0;\n    } else {\n      this.lastVisibleItemIndex = this.maxVisibleItems;\n    }\n\n    if (searchDataSource.currentValue.length <= this.maxVisibleItems) {\n      this.nextShouldBeDisabled = true;\n      this.lastVisibleItemIndex = searchDataSource.currentValue.length;\n    } else {\n      this.nextShouldBeDisabled = false;\n    }\n\n  }\n\n  setMaxVisibleItemsNumberTo(value: number) {\n    this.lastItemIndex = value;\n    this.lastVisibleItemIndex = value;\n    this.maxVisibleItems = value;\n    if (this.maxVisibleItems > this.allItemsLength) {\n      this.maxVisibleItems = this.allItemsLength;\n    }\n    this.cdRef.detectChanges();\n  }\n\n  searchTextObs(): Observable<any> {\n    const observable = Observable.create((observer: any) => {\n      observer.next(this.searchText);\n    });\n    return observable;\n  }\n\n  disableNextButton(data: any) {\n    if (data.length <= this.maxVisibleItems) {\n      this.nextShouldBeDisabled = true;\n    } else {\n      this.nextShouldBeDisabled = false;\n    }\n  }\n\n  calculateFirstItemIndex() {\n    this.firstItemIndex = this.activePageNumber * this.maxVisibleItems - this.maxVisibleItems + 1;\n  }\n\n  calculateLastItemIndex() {\n    this.lastItemIndex = this.activePageNumber * this.maxVisibleItems;\n    this.lastVisibleItemIndex = this.lastItemIndex;\n\n    if (this.searchDataSource && (this.lastItemIndex > this.searchDataSource.length)) {\n      this.lastVisibleItemIndex = this.searchDataSource.length;\n    } else if (!this.searchDataSource) {\n      this.lastVisibleItemIndex = this.lastItemIndex;\n    }\n\n    if (this.lastItemIndex > this.tableService.getDataSource().length) {\n      this.lastItemIndex = this.tableService.getDataSource().length;\n    }\n  }\n\n  calculateHowManyPagesShouldBe() {\n    return Math.ceil(this.tableService.getDataSource().length / this.maxVisibleItems);\n  }\n\n  previousPage() {\n    this.activePageNumber--;\n    this.calculateFirstItemIndex();\n    this.calculateLastItemIndex();\n    this.previousPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });\n  }\n\n  nextPage() {\n    this.activePageNumber++;\n    this.calculateFirstItemIndex();\n    this.calculateLastItemIndex();\n\n    if (this.lastItemIndex > this.tableService.getDataSource().length) {\n      this.lastItemIndex = this.tableService.getDataSource().length;\n    }\n\n    if (this.lastVisibleItemIndex > this.allItemsLength) {\n      this.lastVisibleItemIndex = this.allItemsLength;\n    }\n\n    this.nextPageClick.emit({ first: this.firstItemIndex, last: this.lastItemIndex });\n  }\n\n  nextPageObservable(): Observable<any> {\n    const obs = Observable.create((observer: any) => {\n      observer.next(this.firstItemIndex);\n    });\n    return obs;\n  }\n\n  previousPageObservable(): Observable<any> {\n    const obs = Observable.create((observer: any) => {\n      observer.next(this.lastVisibleItemIndex);\n    });\n    return obs;\n  }\n\n  checkIfNextShouldBeDisabled() {\n    if (this.searchDataSource && (this.lastVisibleItemIndex === this.searchDataSource.length)) {\n      return true;\n    }\n\n    if (this.activePageNumber >= this.calculateHowManyPagesShouldBe()) {\n      return true;\n    }\n\n    if (this.nextShouldBeDisabled) {\n      return this.nextShouldBeDisabled;\n    }\n  }\n\n  checkIfPreviousShouldBeDisabled() {\n    if (this.activePageNumber === 1) {\n      return true;\n    }\n  }\n\n}\n","\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MdbTableService {\n  private _dataSource: any = [];\n\n  constructor() { }\n\n  addRow(newRow: any) {\n    this.getDataSource().push(newRow);\n  }\n\n  addRowAfter(index: number, row: any) {\n    this.getDataSource().splice(index, 0, row);\n  }\n\n  removeRow(index: number) {\n    this.getDataSource().splice(index, 1);\n  }\n\n  rowRemoved(): Observable<boolean> {\n    const rowRemoved = Observable.create((observer: any) => {\n      observer.next(true);\n    });\n    return rowRemoved;\n  }\n\n  removeLastRow() {\n    this.getDataSource().pop();\n  }\n\n  setDataSource(data: any) {\n    this._dataSource = data;\n  }\n\n  getDataSource() {\n    return this._dataSource;\n  }\n\n  dataSourceChange(): Observable<any> {\n    const dataSourceChanged = Observable.create((observer: any) => {\n      observer.next(this.getDataSource());\n    });\n    return dataSourceChanged;\n  }\n\n  filterLocalDataBy(searchKey: any) {\n    return this.getDataSource().filter((obj: Array<any>) => {\n      return Object.keys(obj).some((key: any) => {\n        return (obj[key].toLowerCase()).includes(searchKey);\n      });\n    });\n  }\n\n  searchLocalDataBy(searchKey: any) {\n    if (!searchKey) {\n      return this.getDataSource();\n    }\n\n    if (searchKey) {\n      return this.filterLocalDataBy(searchKey);\n    }\n  }\n\n  searchDataObservable(searchKey: any): Observable<any> {\n    const observable = Observable.create((observer: any) => {\n      observer.next(this.searchLocalDataBy(searchKey));\n    });\n    return observable;\n  }\n\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { WavesDirective } from './waves-effect.directive';\n\n@NgModule({\n  declarations: [WavesDirective],\n  exports: [WavesDirective]\n})\n\nexport class WavesModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: WavesModule, providers: []};\n  }\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { RippleDirective } from './ripple-effect.directive';\n\n@NgModule({\n  declarations: [RippleDirective],\n  exports: [RippleDirective]\n})\n\nexport class RippleModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: RippleModule, providers: []};\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[mdbRippleRadius]'\n})\nexport class RippleDirective {\n  el: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.el = el;\n  }\n\n  @HostListener('click', ['$event'])\n  public click(event: any) {\n    // event.stopPropagation();\n\n    if (!this.el.nativeElement.classList.contains('disabled')) {\n\n      const button = this.el.nativeElement;\n      if (!button.classList.contains('waves-effect')) {\n        button.className += ' waves-effect';\n      }\n\n      const xPos = event.clientX - button.getBoundingClientRect().left;\n      const yPos = event.clientY - button.getBoundingClientRect().top;\n\n\n      const tmp = document.createElement('div');\n      tmp.className += 'waves-ripple waves-rippling';\n      const ripple = button.appendChild(tmp);\n\n      const top = yPos + 'px';\n      const left = xPos + 'px';\n\n      tmp.style.top = top;\n      tmp.style.left = left;\n\n      const scale = 'scale(' + ((button.clientWidth / 100) * 3) + ') translate(0,0)';\n\n      tmp.style.webkitTransform = scale;\n      tmp.style.transform = scale;\n      tmp.style.opacity = '1';\n\n      const duration = 750;\n\n      tmp.style.webkitTransitionDuration = duration + 'ms';\n      tmp.style.transitionDuration = duration + 'ms';\n\n\n      this.removeRipple(button, ripple);\n    }\n  }\n\n  removeRipple(button: any, ripple: any) {\n    ripple.classList.remove('waves-rippling');\n\n    setTimeout(() => {\n      ripple.style.opacity = '0';\n\n      setTimeout(() => {\n        button.removeChild(ripple);\n      }, 750);\n    }, 200);\n\n\n\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n","import { Directive, Input, Output, EventEmitter, OnInit, OnDestroy, Renderer2, ElementRef, TemplateRef,\n  ViewContainerRef } from '@angular/core';\n  import { PopoverConfig } from './popover.config';\n  import { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n  import { ComponentLoader } from '../utils/component-loader/component-loader.class';\n  import { PopoverContainerComponent } from './popover-container.component';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n @Directive({selector: '[mdbPopover]', exportAs: 'bs-mdbPopover'})\n export class PopoverDirective implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n   @Input() public mdbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover.\n   */\n   @Input() public mdbPopoverHeader: string;\n   @Input() public popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   @Input() public placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   @Input() public triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   @Input() public container: string;\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n   @Input()\n   public get isOpen(): boolean { return this._popover.isShown; }\n\n   public set isOpen(value: boolean) {\n     if (value) {this.show(); } else {this.hide(); }\n   }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   @Output() public onShown: EventEmitter<any>;\n   @Output() public shown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   @Output() public onHidden: EventEmitter<any>;\n   @Output() public hidden: EventEmitter<any>;\n\n   private _popover: ComponentLoader<PopoverContainerComponent>;\n\n   public constructor(_elementRef: ElementRef,\n     _renderer: Renderer2,\n     _viewContainerRef: ViewContainerRef,\n     _config: PopoverConfig,\n     cis: ComponentLoaderFactory) {\n     this._popover = cis\n     .createLoader<PopoverContainerComponent>(_elementRef, _viewContainerRef, _renderer)\n     .provide({provide: PopoverConfig, useValue: _config});\n     Object.assign(this, _config);\n     this.onShown = this._popover.onShown;\n     this.shown = this._popover.onShown;\n     this.onHidden = this._popover.onHidden;\n     this.hidden = this._popover.onHidden;\n   }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public show(): void | any {\n     if (this._popover.isShown) {\n       return;\n     }\n\n     this._popover\n     .attach(PopoverContainerComponent)\n     .to(this.container)\n     .position({attachment: this.placement})\n     .show({\n       content: this.mdbPopover,\n       placement: this.placement,\n       title: this.mdbPopoverHeader || this.popoverTitle\n     });\n     this.isOpen = true;\n   }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public hide(): void {\n     if (this.isOpen) {\n       this._popover.hide();\n       this.isOpen = false;\n     }\n   }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n   public toggle(): void {\n     if (this.isOpen) {\n       return this.hide();\n     }\n\n     this.show();\n   }\n\n   public ngOnInit(): any {\n     this._popover.listen({\n       triggers: this.triggers,\n       show: () => this.show()\n     });\n   }\n\n   public dispose() {\n     this._popover.dispose();\n   }\n\n   public ngOnDestroy(): any {\n     this._popover.dispose();\n   }\n }\n","import { ChangeDetectionStrategy, Input, Component, HostBinding, OnInit } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Component({\n selector: 'mdb-popover-container',\n changeDetection: ChangeDetectionStrategy.OnPush,\n template: `\n <h3 class=\"popover-header\" *ngIf=\"title\">{{title}}</h3>\n <div class=\"popover-body\">\n <ng-content></ng-content>\n </div>`\n})\nexport class PopoverContainerComponent implements OnInit {\n\n@Input() public placement: string;\n @Input() public title: string;\n\n@HostBinding('class.show') show = '!isBs3';\n @HostBinding('attr.role') role = 'tooltip';\n//  @HostBinding('class') class;\n@HostBinding('class') class: any;\n\n\n\npublic get isBs3(): boolean {\n return isBs3();\n }\n\npublic constructor(config: PopoverConfig) {\n Object.assign(this, config);\n }\n\nngOnInit() {\n this.class = 'popover-fadeIn popover in popover-' + this.placement + ' ' + this.placement + ' bs-popover-' + this.placement;\n }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n @Injectable()\n export class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   public placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   public triggers = 'click';\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   public container: string;\n }\n","import { LinksComponent } from './links.component';\nimport { LogoComponent } from './logo.component';\nimport { NavbarService } from './navbar.service';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {NavbarComponent} from './navbar.component';\nimport { NavlinksComponent } from './navlinks.component';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NavbarComponent, LinksComponent, LogoComponent, NavlinksComponent],\n  exports: [NavbarComponent, LinksComponent , LogoComponent, NavlinksComponent],\n  providers: [NavbarService]\n})\nexport class NavbarModule {}\n","import { NavbarService } from './navbar.service';\nimport { AfterContentInit, Component, ContentChildren, ElementRef, QueryList, EventEmitter, Output } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\n@Component({\n  selector: 'navlinks',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class NavlinksComponent implements AfterViewInit, AfterContentInit {\n  @ContentChildren(RouterLinkWithHref, { read: ElementRef, descendants: true })\n  links: QueryList<ElementRef>;\n\n  @Output() linkClick = new EventEmitter<any>();\n  constructor( private _navbarService: NavbarService) { }\n\n  ngAfterContentInit() {\n    const that = this;\n\n\n\n    setTimeout(function () {\n      that.links.forEach(function (element) {\n        element.nativeElement.onclick = function () {\n          that._navbarService.setNavbarLinkClicks();\n        };\n      });\n\n    }, 0);\n  }\n  ngAfterViewInit() {\n\n  }\n}\n","import { NavbarService } from './navbar.service';\nimport { Component, ElementRef, ViewChild, Input, Renderer2, AfterViewInit, HostListener, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mdb-navbar',\n  template: \"<nav class=\\\"{{SideClass}}\\\" #nav> <div [ngClass]=\\\"{'container': containerInside}\\\" [ngStyle]=\\\"{'display': displayStyle}\\\" #container> <ng-content select=\\\"mdb-navbar-brand\\\"></ng-content> <ng-content select=\\\"logo\\\"></ng-content> <ng-content *ngIf=\\\"this.doubleNav == true\\\" select=\\\"navlinks\\\"></ng-content> <div *ngIf=\\\"this.doubleNav == false\\\"> <button #toggler class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggle(); $event.preventDefault()\\\" mdbWavesEffect *ngIf=\\\"this.el.nativeElement.children.length !== 0\\\"> <span class=\\\"navbar-toggler-icon\\\"> </span> </button> </div> <div #navbar [style.height]=\\\"height\\\" class=\\\"navbar-collapse collapse\\\" [ngClass]=\\\"{'collapse': collapse, 'show': showClass, 'collapsing': collapsing}\\\"> <ng-content select=\\\"links\\\"></ng-content> </div> </div> </nav>\",\n})\n\nexport class NavbarComponent implements AfterViewInit, OnInit {\n  @Input() iconBackground: string | string[];\n  @Input() SideClass: string;\n  @Input() containerInside = true;\n  subscription: Subscription;\n  navbarLinkClicks: any;\n  shown = false;\n\n  public doubleNav: boolean;\n  public height: number;\n  public duration = 350; // ms\n\n  public collapse = false;\n  public showClass = false;\n  public collapsing = false;\n  @ViewChild('navbar') el: ElementRef;\n  @ViewChild('mobile') mobile: ElementRef;\n  @ViewChild('nav') navbar: ElementRef;\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('toggler') toggler: ElementRef;\n\n  constructor(public renderer: Renderer2, private _navbarService: NavbarService) {\n    // tslint:disable-next-line:max-line-length\n    this.subscription = this._navbarService.getNavbarLinkClicks().subscribe(navbarLinkClicks => { this.closeNavbarOnClick(navbarLinkClicks); });\n  }\n\n  closeNavbarOnClick(navbarLinkClicks: any) {\n    this.navbarLinkClicks = navbarLinkClicks;\n    if (this.showClass) {\n      this.hide();\n    }\n  }\n\n  addTogglerIconClasses() {\n    if (this.iconBackground) {\n      if (Array.isArray(this.iconBackground)) {\n        this.iconBackground.forEach((iconClass) => {\n          this.renderer.addClass(this.toggler.nativeElement, iconClass);\n        });\n      } else {\n        this.renderer.addClass(this.toggler.nativeElement, this.iconBackground);\n      }\n    }\n  }\n\n  ngOnInit() {\n    const isDoubleNav = this.SideClass.split(' ');\n    if (isDoubleNav.indexOf('double-nav') !== -1) {\n      this.doubleNav = true;\n    } else {\n      this.doubleNav = false;\n    }\n  }\n\n\n  ngAfterViewInit() {\n    /* bugfix - bez tego sypie ExpressionChangedAfterItHasBeenCheckedError -\n    https://github.com/angular/angular/issues/6005#issuecomment-165951692 */\n    setTimeout(() => {\n      this.height = this.el.nativeElement.scrollHeight;\n      this.collapse = true;\n\n      if (!this.containerInside) {\n        const childrens = Array.from(this.container.nativeElement.children);\n        childrens.forEach(child => {\n          // this.navbar.nativeElement.append(child);\n          this.renderer.appendChild(this.navbar.nativeElement, child);\n\n          this.container.nativeElement.remove();\n        });\n\n      }\n      if (this.el.nativeElement.children.length === 0) {\n        this.el.nativeElement.remove();\n      }\n    });\n\n    this.addTogglerIconClasses();\n  }\n\n  toggle() {\n    if (!this.collapsing) {\n      if (this.shown) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n  }\n\n  show() {\n    this.shown = true;\n    this.collapse = false;\n    this.collapsing = true;\n    setTimeout(() => {\n      this.renderer.setStyle(this.el.nativeElement, 'height', this.height + 'px');\n    }, 10);\n\n\n    setTimeout(() => {\n      this.collapsing = false;\n      this.collapse = true;\n      this.showClass = true;\n    }, this.duration);\n  }\n\n  hide() {\n    this.shown = false;\n    this.collapse = false;\n    this.showClass = false;\n    this.collapsing = true;\n    setTimeout(() => {\n      this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n    }, 10);\n\n\n    setTimeout(() => {\n      this.collapsing = false;\n      this.collapse = true;\n    }, this.duration);\n  }\n\n  get displayStyle() {\n     if (!this.containerInside) {\n      return 'flex';\n     } else {\n    return '';\n     }\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(event: any) {\n    let breakpoit = 0;\n\n    if (this.SideClass.includes('navbar-expand-xl')) {\n      breakpoit = 1200;\n    } else if (this.SideClass.includes('navbar-expand-lg')) {\n      breakpoit = 992;\n    } else if (this.SideClass.includes('navbar-expand-md')) {\n      breakpoit = 768;\n    } else if (this.SideClass.includes('navbar-expand-sm')) {\n      breakpoit = 576;\n    } else {\n      breakpoit = event.target.innerWidth + 1;\n    }\n\n    if (event.target.innerWidth < breakpoit) {\n      if (!this.shown) {\n        this.collapse = false;\n        this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n        this.renderer.setStyle(this.el.nativeElement, 'opacity', '0');\n        setTimeout(() => {\n          this.height = this.el.nativeElement.scrollHeight;\n          this.collapse = true;\n          this.renderer.setStyle(this.el.nativeElement, 'opacity', '');\n        }, 4);\n      }\n    } else {\n      this.collapsing = false;\n      this.shown = false;\n      this.showClass = false;\n      this.collapse = true;\n      this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    }\n  }\n\n  @HostListener('document:scroll') onScroll() {\n    if (this.navbar.nativeElement.classList.contains('scrolling-navbar')) {\n      if (window.pageYOffset > 120) {\n        this.renderer.addClass(this.navbar.nativeElement, 'top-nav-collapse');\n      } else {\n        this.renderer.removeClass(this.navbar.nativeElement, 'top-nav-collapse');\n      }\n    }\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'logo, mdb-navbar-brand',\n  template: `\n  <ng-content></ng-content>\n  `\n})\nexport class LogoComponent {\n\n}\n","import { NavbarService } from './navbar.service';\nimport { AfterContentInit, Component, ContentChildren, ElementRef, QueryList, EventEmitter, Output } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\n@Component({\n  selector: 'links',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class LinksComponent implements AfterViewInit, AfterContentInit {\n  @ContentChildren(RouterLinkWithHref, { read: ElementRef, descendants: true })\n  links: QueryList<ElementRef>;\n\n  @Output() linkClick = new EventEmitter<any>();\n  constructor( private _navbarService: NavbarService) { }\n\n  ngAfterContentInit() {\n    const that = this;\n\n\n\n    setTimeout(function () {\n      that.links.forEach(function (element) {\n        element.nativeElement.onclick = function () {\n          that._navbarService.setNavbarLinkClicks();\n        };\n      });\n\n    }, 0);\n  }\n  ngAfterViewInit() {\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport { Subject ,  Observable } from 'rxjs';\n\n@Injectable()\nexport class NavbarService {\n\n    private navbarLinkClicks = new Subject<any>();\n\n\n    getNavbarLinkClicks(): Observable<any> {\n        return this.navbarLinkClicks.asObservable();\n    }\n\n    setNavbarLinkClicks() {\n        this.navbarLinkClicks.next();\n    }\n}\n","import { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ModalContainerComponent } from './modalContainer.component';\nimport { MDBModalService } from './modal.service';\n\n@NgModule({\n  declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class ModalModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ModalModule, providers: [MDBModalService, ComponentLoaderFactory, PositioningService]};\n  }\n}\n","import { ComponentRef, Injectable, TemplateRef, EventEmitter, Renderer2, ViewContainerRef, ElementRef } from '@angular/core';\n\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ModalContainerComponent } from './modalContainer.component';\nimport { MDBModalRef, ClassName, modalConfigDefaults, ModalOptions, TransitionDurations } from './modal.options';\nimport { msConfig } from './modalService.config';\n\n\n@Injectable()\nexport class MDBModalService {\n  // constructor props\n  public config: ModalOptions = modalConfigDefaults;\n\n  public onShow: EventEmitter<any> = new EventEmitter();\n  public onShown: EventEmitter<any> = new EventEmitter();\n  public onHide: EventEmitter<any> = new EventEmitter();\n  public onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  // protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  protected backdropRef: ComponentRef<ModalBackdropComponent> | any;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  // private lastDismissReason = '';\n  private lastDismissReason: any = '';\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n  // public constructor(private clf: ComponentLoaderFactory) {\n    public constructor(private clf: ComponentLoaderFactory, private el: ElementRef, private v: ViewContainerRef, private r: Renderer2) {\n  //   this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(null, null, null);\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(this.el, this.v, this.r);\n    msConfig.serviceInstance = this;\n  }\n\n  /** Shows a modal */\n  show(content: string | TemplateRef<any> | any, config?: any): MDBModalRef {\n    this.modalsCount++;\n    this._createLoaders();\n    this.config = Object.assign({}, modalConfigDefaults, config);\n    this._showBackdrop();\n    this.lastDismissReason = null;\n    return this._showModal(content);\n  }\n\n  hide(level: number) {\n    if (this.modalsCount === 1) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(level);\n      this.removeLoaders(level);\n    }, this.config.animated ? TransitionDurations.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({isAnimated: this.config.animated});\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TransitionDurations.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n\n  _showModal(content: any): MDBModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    const mdbModalRef = new MDBModalRef();\n    const modalContainerRef = modalLoader\n    .provide({provide: ModalOptions, useValue: this.config})\n    .provide({provide: MDBModalRef, useValue: mdbModalRef})\n    .attach(ModalContainerComponent)\n    .to('body')\n    .show({content, isAnimated: this.config.animated});\n    modalContainerRef.instance.level = this.getModalsCount();\n    mdbModalRef.hide = () => {\n      modalContainerRef.instance.hide();\n    };\n    mdbModalRef.content = modalLoader.getInnerComponent() || null;\n    return mdbModalRef;\n  }\n\n  _hideModal(level: number): void {\n    const modalLoader = this.loaders[level - 1];\n    if (modalLoader) {\n      modalLoader.hide();\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  protected removeBackdrop(): void {\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE*/\n  /** Scroll bar tricks */\n  /** @internal */\n  public checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  public setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || '0', 10);\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = this.originalBodyPadding + 'px';\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n\n  }\n\n  private _createLoaders(): void {\n    // const loader = this.clf.createLoader<ModalContainerComponent>(null, null, null);\n    const loader = this.clf.createLoader<ModalContainerComponent>(this.el, this.v, this.r);\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(level: number): void {\n    this.loaders.splice(level - 1, 1);\n    this.loaders.forEach((loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n      loader.instance.level = i + 1;\n    });\n  }\n\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe(() => {\n      to.emit(this.lastDismissReason);\n    });\n  }\n}\n","import { Component, ElementRef, HostListener, OnDestroy, OnInit, Renderer2, HostBinding } from '@angular/core';\nimport { ClassName, DISMISS_REASONS, ModalOptions, TransitionDurations } from './modal.options';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { msConfig } from './modalService.config';\n\n@Component({\n  selector: 'mdb-modal-container',\n  template: `\n  <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n  <div class=\"modal-content\"><ng-content></ng-content></div>\n</div>`\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  @HostBinding('tabindex') tabindex = -1;\n  @HostBinding('role') role = 'dialog';\n  @HostBinding('class.modal') modla = true;\n\n  private mdbModalService: any;\n\n  public config: ModalOptions;\n  public isShown = false;\n  public level: number;\n  public isAnimated: boolean;\n  protected _element: ElementRef;\n  private isModalHiding = false;\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n      return;\n    }\n    this.mdbModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n  @HostListener('window:keydown.esc')\n  public onEsc(): void {\n    if (this.config.keyboard && this.level === this.mdbModalService.getModalsCount()) {\n      this.mdbModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  public constructor(options: ModalOptions, _element: ElementRef, private _renderer: Renderer2) {\n    this.mdbModalService = msConfig.serviceInstance;\n\n    this._element = _element;\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(this._element.nativeElement, ClassName.FADE);\n    }\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW);\n    }, this.isAnimated ? TransitionDurations.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.mdbModalService.getModalsCount() === 1) {\n        this.mdbModalService.checkScrollbar();\n        this.mdbModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, ClassName.OPEN);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW);\n\n    setTimeout(() => {\n      this.isShown = false;\n      if (document && document.body && this.mdbModalService.getModalsCount() === 1) {\n        this._renderer.removeClass(document.body, ClassName.OPEN);\n      }\n      this.mdbModalService.hide(this.level);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TransitionDurations.MODAL : 0);\n  }\n}\n","export const msConfig = {\n    serviceInstance: new Object()\n};\n","import {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2, ViewContainerRef\n} from '@angular/core';\n\nimport { document } from '../utils/facade/browser';\n\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\nimport { ModalBackdropComponent } from './modalBackdrop.component';\nimport { ClassName, modalConfigDefaults, ModalOptions, DISMISS_REASONS } from './modal.options';\n\nimport { window } from '../utils/facade/browser';\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[mdbModal]',\n  exportAs: 'mdb-modal, mdbModal'\n})\nexport class ModalDirective implements AfterViewInit, OnDestroy {\n  /** allows to set modal configuration via element property */\n  @Input()\n  // public set config(conf: ModalOptions) {\n  public set config(conf: ModalOptions | any) {\n    this._config = this.getConfig(conf);\n  }\n\n  // public get config(): ModalOptions {\n  public get config(): ModalOptions | any {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output() public onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  @Output() public open: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete) */\n  @Output() public onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  @Output() public opened: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when the hide instance method has been called. */\n  @Output() public onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  @Output() public close: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). */\n  @Output() public onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  @Output() public closed: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  // seems like an Options\n  public isAnimated = true;\n  /** This field contains last dismiss reason.\n  Possible values: `backdrop-click`, `esc` and `null` (if modal was closed by direct call of `.hide()`). */\n  public dismissReason: string | any;\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions | any;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal: any = 0;\n  protected timerRmBackDrop: any = 0;\n\n  // constructor props\n  protected _element: ElementRef;\n  protected _renderer: Renderer2;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n  // todo: implement _dialog\n  _dialog: any;\n\n  isNested = false;\n\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc')\n  public onEsc(): void {\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  public constructor(_element: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2, clf: ComponentLoaderFactory) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(_element, _viewContainerRef, _renderer);\n  }\n\n  public ngOnDestroy(): any {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  public ngAfterViewInit(): any {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  public toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  public show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    this.open.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(ClassName.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, ClassName.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  public hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n    this.close.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, ClassName.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, ClassName.SHOW);\n    }\n\n    if (this.isAnimated) {\n      this.timerHideModal = setTimeout(() => this.hideModal(), TRANSITION_DURATION);\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, modalConfigDefaults, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (!this._element.nativeElement.parentNode ||\n      (this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE)) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n\n    if (this.isAnimated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    this._renderer.addClass(this._element.nativeElement, ClassName.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, ClassName.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n      this.opened.emit(this);\n    };\n\n    if (this.isAnimated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, ClassName.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n      this.closed.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({ isAnimated: this.isAnimated });\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this.isAnimated) {\n        callback();\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n\n  protected focusOtherModal() {\n    try {\n      const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[mdbModal]');\n      if (!otherOpenedModals.length) {\n        return;\n      }\n      //  this._renderer.invokeElementMethod(otherOpenedModals[otherOpenedModals.length - 1], 'focus');\n      otherOpenedModals[otherOpenedModals.length - 1].nativeElement.focus();\n    } catch (error) { }\n\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n    this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || 0, 10);\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = this.originalBodyPadding;\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div', void 0);\n    this._renderer.appendChild(document.body, scrollDiv);\n    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2, HostBinding } from '@angular/core';\n\nimport { ClassName } from './modal.options';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { Utils } from '../utils/utils.class';\n\nexport class ModalBackdropOptions {\n  public animate = true;\n\n  public constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'mdb-modal-backdrop',\n  template: ``,\n})\nexport class ModalBackdropComponent implements OnInit {\n  @HostBinding('class.modal-backdrop') public classNameBackDrop = true;\n\n  public get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  public set isAnimated(value: boolean) {\n    this._isAnimated = value;\n  }\n\n  public get isShown(): boolean {\n    return this._isShown;\n  }\n\n  public set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, `${ClassName.IN}`);\n\n      if (!isBs3()) {\n        this.renderer.removeClass(this.element.nativeElement, `${ClassName.SHOW}`);\n      }\n    }\n  }\n\n  public element: ElementRef;\n  public renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  public constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    } else {\n      this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ModalOptions {\n  /**\n   *  Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.\n   */\n  //  backdrop?: boolean | 'static';\n  backdrop?: boolean | 'static' | any;\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n   keyboard?: boolean;\n\n   focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n   show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n   ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n   class?: string;\n  /**\n   * Toggle animation\n   */\n   animated?: boolean;\n }\n\n @Injectable()\n export class MDBModalRef {\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n   content?: any | null;\n  /**\n   * Hides the modal\n   */\n   hide(): void {}\n }\n\n export const modalConfigDefaults: ModalOptions = {\n   backdrop: true,\n   keyboard: true,\n   focus: true,\n   show: false,\n   ignoreBackdropClick: false,\n   class: '',\n   animated: true\n };\n\n export const ClassName: any = {\n   SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n   BACKDROP: 'modal-backdrop',\n   OPEN: 'modal-open',\n   FADE: 'fade',\n   IN: 'in',     // bs3\n   SHOW: 'show'  // bs4\n };\n\n export const Selector: any = {\n   DIALOG: '.modal-dialog',\n   DATA_TOGGLE: '[data-toggle=\"modal\"]',\n   DATA_DISMISS: '[data-dismiss=\"modal\"]',\n   FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n };\n\n export const TransitionDurations: any = {\n   MODAL: 300,\n   BACKDROP: 150\n };\n\n export const DISMISS_REASONS = {\n   BACKRDOP: 'backdrop-click',\n   ESC: 'esc'\n };\n","import { window } from './facade/browser';\n\nexport class Utils {\n  public static reflow(element: any): void {\n    ((bs: any): void => bs)(element.offsetHeight);\n  }\n\n  // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n  public static getStyles(elem: any): any {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n}\n","import { MdbInputDirective } from './mdb-input.directive';\nimport { NgModule, ModuleWithProviders, NO_ERRORS_SCHEMA} from '@angular/core';\nimport { EqualValidatorDirective } from './equal-validator.directive';\n\n@NgModule({\n  declarations: [MdbInputDirective, EqualValidatorDirective],\n  exports: [MdbInputDirective, EqualValidatorDirective],\n  schemas: [NO_ERRORS_SCHEMA],\n})\n\nexport class InputsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: InputsModule, providers: [] };\n  }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[mdb-validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n  providers: [\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidatorDirective), multi: true }\n  ]\n})\n\nexport class EqualValidatorDirective implements Validator {\n  constructor( @Attribute('validateEqual') public validateEqual: string,\n    @Attribute('reverse') public reverse: string) {\n\n  }\n\n  private get isReverse() {\n    if (!this.reverse) {\n      return false;\n    }\n    return this.reverse === 'true' ? true : false;\n  }\n\n  validate(c: AbstractControl): { [key: string]: any } {\n    const setToNullValue: any = null;\n    // self value (e.g. retype password)\n    const v = c.value;\n\n    // control value (e.g. password)\n    // const e: any = c.root.get(this.validateEqual);\n    const e: any = c.root.get(this.validateEqual);\n\n    // value not equal\n    if (e && v !== e.value) {\n      return { validateEqual: false };\n    }\n\n    // value equal and reverse\n    if (e && v === e.value && this.isReverse) {\n      delete e.errors['validateEqual'];\n      if (!Object.keys(e.errors).length) {\n        e.setErrors(null);\n      }\n    }\n\n    // value not equal and reverse\n    if (e && v !== e.value && this.isReverse) {\n      e.setErrors({\n        validateEqual: false\n      });\n    }\n\n    // return null;\n    return setToNullValue;\n  }\n}\n\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Renderer2,\n  Input,\n  AfterViewInit,\n  HostListener,\n  PLATFORM_ID,\n  Inject,\n  AfterViewChecked,\n  OnInit,\n  DoCheck,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\n@Directive({\n  selector: '[mdbInputDirective]'\n})\nexport class MdbInputDirective implements AfterViewChecked, OnInit, AfterViewInit, DoCheck, OnChanges {\n  public wrongTextContainer: any;\n  public rightTextContainer: any;\n  public el: ElementRef | any = null;\n  public elLabel: ElementRef | any = null;\n  public elIcon: Element | any = null;\n  element: any = null;\n  @Input('mdbInputDirective') mdbInputDirective: MdbInputDirective;\n  @Input('placeholder') public placeholder: string;\n  @Input('customRegex') customRegex: any;\n  @Input('mdbValidate') mdbValidate = true;\n  @Input('validateSuccess') validateSuccess = true;\n  @Input('validateError') validateError = true;\n  @Input('focusCheckbox') focusCheckbox = true;\n  @Input('focusRadio') focusRadio = true;\n  @Input() errorMessage: string;\n  @Input() successMessage: string;\n\n  isBrowser: any = false;\n  isClicked = false;\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2, @Inject(PLATFORM_ID) platformId: string) {\n    this.el = _elRef;\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  @HostListener('focus') onfocus() {\n    try {\n      this._renderer.addClass(this.elLabel, 'active');\n      this.isClicked = true;\n    } catch (error) {\n\n    }\n  }\n\n  @HostListener('blur') onblur() {\n    this.validationFunction();\n    try {\n      if (this.el.nativeElement.value === '') {\n        this._renderer.removeClass(this.elLabel, 'active');\n      }\n      this.isClicked = false;\n    } catch (error) {\n\n    }\n\n  }\n\n  @HostListener('change') onchange() {\n    try {\n      this.checkValue();\n    } catch (error) {\n\n    }\n  }\n\n  @HostListener('input') oniput() {\n    this.validationFunction();\n  }\n\n  @HostListener('keydown', ['$event']) onkeydown(event: any) {\n    try {\n      if (event.target.type === 'number') {\n        if (event.shiftKey) {\n          switch (event.keyCode) {\n            case 38:\n              event.target.value = +event.target.value + 10;\n              break;\n            case 40:\n              event.target.value = +event.target.value - 10;\n              break;\n          }\n        }\n        if (event.altKey) {\n          switch (event.keyCode) {\n            case 38:\n              event.target.value = +event.target.value + 0.1;\n              break;\n            case 40:\n              event.target.value = +event.target.value - 0.1;\n              break;\n          }\n        }\n      }\n    } catch (error) { }\n    this.delayedResize();\n  }\n  @HostListener('cut') oncut() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n  @HostListener('paste') onpaste() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n  @HostListener('drop') ondrop() {\n    try {\n      setTimeout(() => {\n        this.delayedResize();\n      }, 0);\n    } catch (error) { }\n  }\n\n  updateErrorMsg(value: string) {\n    if (this.wrongTextContainer) {\n      this.wrongTextContainer.innerHTML = value;\n    }\n  }\n\n  updateSuccessMsg(value: string) {\n    if (this.rightTextContainer) {\n      this.rightTextContainer.innerHTML = value;\n    }\n  }\n\n  ngOnInit() {\n    // Inititalise a new <span> wrong/right elements and render it below the host component.\n    if (this.mdbValidate) {\n      this.wrongTextContainer = this._renderer.createElement('span');\n      this._renderer.addClass(this.wrongTextContainer, 'inputVal');\n      this._renderer.addClass(this.wrongTextContainer, 'text-danger');\n      this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.wrongTextContainer);\n      const textWrong = this._elRef.nativeElement.getAttribute('data-error');\n      this.wrongTextContainer.innerHTML = (textWrong ? textWrong : 'wrong');\n      if (!textWrong && this.errorMessage !== undefined) {\n        this.wrongTextContainer.innerHTML = this.errorMessage;\n      }\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n\n      this.rightTextContainer = this._renderer.createElement('span');\n      this._renderer.addClass(this.rightTextContainer, 'inputVal');\n      this._renderer.addClass(this.rightTextContainer, 'text-success');\n      this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.rightTextContainer);\n      const textSuccess = this._elRef.nativeElement.getAttribute('data-success');\n      this.rightTextContainer.innerHTML = (textSuccess ? textSuccess : 'success');\n      if (!textSuccess && this.successMessage !== undefined) {\n        this.rightTextContainer.innerHTML = this.successMessage;\n      }\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('errorMessage')) {\n      const newErrorMsg = changes.errorMessage.currentValue;\n      this.updateErrorMsg(newErrorMsg);\n    }\n\n    if (changes.hasOwnProperty('successMessage')) {\n      const newSuccessMsg = changes.successMessage.currentValue;\n      this.updateSuccessMsg(newSuccessMsg);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.mdbValidate &&\n      this._elRef.nativeElement.classList.contains('ng-valid') &&\n      this._elRef.nativeElement.classList.contains('ng-dirty') &&\n      !this._elRef.nativeElement.classList.contains('counter-success')) {\n      this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n      this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n    }\n    if (this.mdbValidate &&\n      this._elRef.nativeElement.classList.contains('ng-invalid') &&\n      this._elRef.nativeElement.classList.contains('ng-dirty') &&\n      !this._elRef.nativeElement.classList.contains('counter-danger')) {\n      this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n      this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n      this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n      this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n    }\n    if (this._elRef.nativeElement.classList.contains('ng-invalid') &&\n      this._elRef.nativeElement.classList.contains('ng-pristine') &&\n      this._elRef.nativeElement.classList.contains('ng-untouched') || this._elRef.nativeElement.disabled) {\n      if (this._elRef.nativeElement.classList.contains('counter-success')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n        this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n      } else if (this._elRef.nativeElement.classList.contains('counter-danger')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n        this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n      }\n    }\n    if (!this.validateSuccess) {\n      this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n      this._renderer.setStyle(this.rightTextContainer, 'display', 'none');\n      if (this._elRef.nativeElement.classList.contains('ng-valid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      }\n    }\n\n    if (!this.validateError) {\n      this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      this._renderer.setStyle(this.wrongTextContainer, 'display', 'none');\n      if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n      }\n    }\n  }\n\n  validationFunction() {\n    setTimeout(() => {\n      if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n      }\n      if (this._elRef.nativeElement.classList.contains('ng-touched') &&\n        this._elRef.nativeElement.classList.contains('ng-invalid')) {\n        if (this.mdbValidate) {\n          this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n          this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n          this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n          this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n        }\n      } else if (this._elRef.nativeElement.classList.contains('ng-touched') &&\n        this._elRef.nativeElement.classList.contains('ng-valid')) {\n        if (this.mdbValidate) {\n          this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n          this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n          this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n          this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n        }\n      }\n    }, 0);\n  }\n  ngAfterViewInit() {\n    if (this.isBrowser) {\n      try {\n        this.element = document.querySelector('.md-textarea-auto');\n      } catch (error) { }\n\n    }\n    const type = this.el.nativeElement.type;\n    if (this.focusCheckbox && type === 'checkbox') {\n      this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n    }\n    if (this.focusRadio && type === 'radio') {\n      this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.initComponent();\n    this.checkValue();\n    // tslint:disable-next-line:max-line-length\n    /* if (this.el.nativeElement.tagName === 'MDB-COMPLETER' && this.el.nativeElement.getAttribute('ng-reflect-model') == null && !this.isClicked) {\n        this._renderer.removeClass(this.elLabel, 'active');\n    } */\n  }\n\n  resize() {\n      if (this.el.nativeElement.classList.contains('md-textarea-auto')) {\n        this._renderer.setStyle(this.el.nativeElement, 'height', 'auto');\n        this._renderer.setStyle(this.el.nativeElement, 'height', this.el.nativeElement.scrollHeight + 'px');\n      }\n\n  }\n\n  delayedResize() {\n    setTimeout(() => {\n      this.resize();\n    }, 0);\n  }\n\n  public initComponent(): void {\n    let inputId;\n    let inputP;\n    if (this.isBrowser) {\n      try {\n        inputId = this.el.nativeElement.id;\n      } catch (err) { }\n\n      try {\n        inputP = this.el.nativeElement.parentNode;\n      } catch (err) { }\n\n      this.elLabel = inputP.querySelector('label[for=\"' + inputId + '\"]') || inputP.querySelector('label');\n      if (this.elLabel && this.el.nativeElement.value !== '') {\n        this._renderer.addClass(this.elLabel, 'active');\n      }\n      this.elIcon = inputP.querySelector('i') || false;\n\n      if (this.elIcon) {\n        this._renderer.addClass(this.elIcon, 'active');\n      }\n    }\n  }\n\n  private checkValue(): void {\n    let value = '';\n    if (this.elLabel != null) {\n      value = this.el.nativeElement.value || '';\n      if (value === '') {\n        this._renderer.removeClass(this.elLabel, 'active');\n        if (this.elIcon) {\n          this._renderer.removeClass(this.elIcon, 'active');\n        }\n        // tslint:disable-next-line:max-line-length\n      } if (value === '' && this.isClicked ||\n        value === '' && this.el.nativeElement.placeholder ||\n        value === '' && this.el.nativeElement.attributes.placeholder\n      ) {\n        this._renderer.addClass(this.elLabel, 'active');\n      }\n      if (this.el.nativeElement.getAttribute('ng-reflect-model') != null) {\n        // tslint:disable-next-line:max-line-length\n        /* if (this.el.nativeElement.tagName === 'MDB-COMPLETER' && this.el.nativeElement.getAttribute('ng-reflect-model').length !== 0) {\n            this._renderer.addClass(this.elLabel, 'active');\n        } */\n      }\n    }\n  }\n}\n","import { MdbIconComponent } from './icon.component';\nimport { NgModule } from '@angular/core';\n\n\n@NgModule({\n  declarations: [MdbIconComponent],\n  exports: [MdbIconComponent]\n})\n\nexport class IconsModule {\n\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\n\n@Component({\n    selector: 'mdb-icon',\n    template: \"<i class=\\\"fa fa-{{icon}} fa-{{size}} {{class}} prefix\\\"></i>\"\n})\nexport class MdbIconComponent {\n    @ViewChild('iconEl') iconEl: ElementRef;\n    @Input() icon: string;\n    @Input() size: string;\n    @Input() class: string;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\n\nimport { PositioningService } from '../utils/positioning/positioning.service';\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\nimport { BsDropdownMenuDirective } from './dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './dropdown-toggle.directive';\nimport { BsDropdownConfig } from './dropdown.config';\n\nimport { BsDropdownDirective } from './dropdown.directive';\nimport { BsDropdownState } from './dropdown.state';\n\n@NgModule({\n  declarations: [\n  BsDropdownMenuDirective,\n  BsDropdownToggleDirective,\n  BsDropdownContainerComponent,\n  BsDropdownDirective\n  ],\n  exports: [\n  BsDropdownMenuDirective,\n  BsDropdownToggleDirective,\n  BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n})\nexport class DropdownModule {\n  public static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: DropdownModule, providers: [\n      ComponentLoaderFactory,\n      PositioningService,\n      BsDropdownState,\n      {provide: BsDropdownConfig, useValue: config ? config : {autoClose: true}}\n      ]\n    };\n  }\n}\n","import {\n  Directive, ElementRef, EmbeddedViewRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, Renderer2,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\nimport { BsDropdownConfig } from './dropdown.config';\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\nimport { BsDropdownState } from './dropdown.state';\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\nimport { BsDropdownMenuDirective } from './dropdown-menu.directive';\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\n\n@Directive({\n  selector: '[mdbDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState]\n})\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n  @HostBinding('class.dropup')\n  @Input() dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  @Input() set autoClose(value: boolean) {\n    if (typeof value === 'boolean') {\n      this._state.autoClose = value;\n    }\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  @Input() set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean { return this._isDisabled; }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @HostBinding('class.open')\n  @HostBinding('class.show')\n  @Input() get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n  @Output() isOpenChange: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<any>;\n  @Output() shown: EventEmitter<any>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<any>;\n  @Output() hidden: EventEmitter<any>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n  // todo: move to component loader\n  _isInlineOpen = false;\n  _showInline: boolean;\n  _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n\n  _isDisabled: boolean;\n  _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n  _subscriptions: Subscription[] = [];\n  _isInited = false;\n\n  constructor(private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _viewContainerRef: ViewContainerRef,\n    private _cis: ComponentLoaderFactory,\n    private _config: BsDropdownConfig,\n    private _state: BsDropdownState) {\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(this._elementRef, this._viewContainerRef, this._renderer)\n      .provide({ provide: BsDropdownState, useValue: this._state });\n\n    this.onShown = this._dropdown.onShown;\n    this.shown = this._dropdown.shown;\n    this.onHidden = this._dropdown.onHidden;\n    this.hidden = this._dropdown.hidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) { return; }\n    this._isInited = true;\n\n    this._showInline = !this.container;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(this._state\n      .toggleClick.subscribe((value: boolean) => this.toggle(value)));\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(this._state\n      .isDisabledChange\n      .subscribe((element: any) => {\n        if (element === true) {\n          this.hide();\n        }\n      }\n      ));\n\n    // attach dropdown menu inside of dropdown\n    if (this._showInline) {\n      this._state.dropdownMenu\n        .then((dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n          this._inlinedMenu = dropdownMenu.viewContainer.createEmbeddedView(dropdownMenu.templateRef);\n        });\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    // material and dropup dropdown animation\n    // const parent = this._elementRef.nativeElement.classList;\n    const container = this._elementRef.nativeElement.lastElementChild;\n\n    setTimeout(() => { container.classList.add('fadeInDropdown'); }, 200);\n\n    if (this._showInline) {\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this.shown.emit(true);\n      this._state.isOpenChange.emit(true);\n      return;\n    }\n    this._state.dropdownMenu\n      .then((dropdownMenu) => {\n        // check direction in which dropdown should be opened\n        const _dropup = this.dropup === true ||\n          (typeof this.dropup !== 'undefined' && this.dropup !== false);\n        this._state.direction = _dropup ? 'up' : 'down';\n        const _placement = this.placement ||\n          (_dropup ? 'top left' : 'bottom left');\n\n        // show dropdown\n        this._dropdown\n          .attach(BsDropdownContainerComponent)\n          .to(this.container)\n          .position({ attachment: _placement })\n          .show({\n            content: dropdownMenu.templateRef,\n            placement: _placement\n          });\n\n        this._state.isOpenChange.emit(true);\n\n      });\n\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    const parent = this._elementRef.nativeElement.classList;\n    const container = this._elementRef.nativeElement.lastElementChild;\n\n\n    if ((parent.value === 'dropdown open show') || (parent.value === 'btn-group dropup open show')) {\n      container.classList.remove('fadeInDropdown');\n\n      setTimeout(() => {\n\n        if (this._showInline) {\n          this._isInlineOpen = false;\n          this.onHidden.emit(true);\n          this.hidden.emit(true);\n        } else {\n          this._dropdown.hide();\n        }\n\n        this._state.isOpenChange.emit(false);\n\n      }, 560);\n\n    } else {\n\n      if (this._showInline) {\n        this._isInlineOpen = false;\n        this.onHidden.emit(true);\n        this.hidden.emit(true);\n      } else {\n        this._dropdown.hide();\n      }\n\n      this._state.isOpenChange.emit(false);\n\n    }\n\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || value === false) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n}\n","import {\n  Injectable, NgZone, ViewContainerRef, ComponentFactoryResolver, Injector,\n  Renderer2, ElementRef, ApplicationRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/positioning.service';\n\n@Injectable()\nexport class ComponentLoaderFactory {\n\n  public constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n    private _ngZone: NgZone,\n    private _injector: Injector,\n    private _posService: PositioningService,\n    private _applicationRef: ApplicationRef) {\n  }\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer2\n   */\n   public createLoader<T>(_elementRef: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2): ComponentLoader<T> {\n     return new ComponentLoader<T>(_viewContainerRef, _renderer, _elementRef,\n       this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef,\n       this._posService);\n   }\n }\n","import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n    /**\n     * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n     * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n     * not yet supported:\n     * - vert-attachment can be any of 'top', 'middle', 'bottom'\n     * - horiz-attachment can be any of 'left', 'center', 'right'\n     */\n    //  attachment?: string;\n    attachment?: string | any;\n\n    /** A string similar to `attachment`. The one difference is that, if it's not provided,\n    `targetAttachment` will assume the mirror image of `attachment`. */\n    targetAttachment?: string;\n\n    /** A string of the form 'vert-offset horiz-offset'\n     * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n     */\n     offset?: string;\n\n     /** A string similar to `offset`, but referring to the offset of the target */\n     targetOffset?: string;\n\n     /** If true component will be attached to body */\n     appendToBody?: boolean;\n   }\n\n   @Injectable()\n   export class PositioningService {\n    //  public position(options: PositioningOptions): void {\n      public position(options: PositioningOptions | any): void {\n       const {element, target, attachment, appendToBody} = options;\n       positionElements(\n         this._getHtmlElement(target),\n         this._getHtmlElement(element),\n         attachment,\n         appendToBody);\n     }\n\n     private _getHtmlElement(element: HTMLElement | ElementRef | string): HTMLElement {\n       // it means that we got a selector\n       if (typeof element === 'string') {\n         return document.querySelector(element) as HTMLElement;\n       }\n\n       if (element instanceof ElementRef) {\n         return element.nativeElement;\n       }\n\n       return element as HTMLElement;\n     }\n   }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n // previous version:\n // https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n // tslint:disable\n export class Positioning {\n   public position(element: HTMLElement, round = true): ClientRect {\n     let elPosition: ClientRect;\n     let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n     if (this.getStyle(element, 'position') === 'fixed') {\n       const bcRect = element.getBoundingClientRect();\n       elPosition = {\n         width: bcRect.width,\n         height: bcRect.height,\n         top: bcRect.top,\n         bottom: bcRect.bottom,\n         left: bcRect.left,\n         right: bcRect.right\n       };\n     } else {\n       const offsetParentEl = this.offsetParent(element);\n\n       elPosition = this.offset(element, false);\n\n       if (offsetParentEl !== document.documentElement) {\n         parentOffset = this.offset(offsetParentEl, false);\n       }\n\n       parentOffset.top += offsetParentEl.clientTop;\n       parentOffset.left += offsetParentEl.clientLeft;\n     }\n\n     elPosition.top -= parentOffset.top;\n     elPosition.bottom -= parentOffset.top;\n     elPosition.left -= parentOffset.left;\n     elPosition.right -= parentOffset.left;\n\n     if (round) {\n       elPosition.top = Math.round(elPosition.top);\n       elPosition.bottom = Math.round(elPosition.bottom);\n       elPosition.left = Math.round(elPosition.left);\n       elPosition.right = Math.round(elPosition.right);\n     }\n\n     return elPosition;\n   }\n\n   public offset(element: HTMLElement, round = true): ClientRect {\n     const elBcr = element.getBoundingClientRect();\n     const viewportOffset = {\n       top: window.pageYOffset - (document.documentElement as any).clientTop,\n       left: window.pageXOffset - (document.documentElement as any).clientLeft\n     };\n\n     let elOffset = {\n       height: elBcr.height || element.offsetHeight,\n       width: elBcr.width || element.offsetWidth,\n       top: elBcr.top + viewportOffset.top,\n       bottom: elBcr.bottom + viewportOffset.top,\n       left: elBcr.left + viewportOffset.left,\n       right: elBcr.right + viewportOffset.left\n     };\n\n     if (round) {\n       elOffset.height = Math.round(elOffset.height);\n       elOffset.width = Math.round(elOffset.width);\n       elOffset.top = Math.round(elOffset.top);\n       elOffset.bottom = Math.round(elOffset.bottom);\n       elOffset.left = Math.round(elOffset.left);\n       elOffset.right = Math.round(elOffset.right);\n     }\n\n     return elOffset;\n   }\n\n   public positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n   ClientRect {\n     const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n     const shiftWidth: any = {\n       left: hostElPosition.left,\n       center: hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2,\n       right: hostElPosition.left + hostElPosition.width\n     };\n     const shiftHeight: any = {\n       top: hostElPosition.top,\n       center: hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2,\n       bottom: hostElPosition.top + hostElPosition.height\n     };\n     const targetElBCR = targetElement.getBoundingClientRect();\n     const placementPrimary = placement.split(' ')[0] || 'top';\n     const placementSecondary = placement.split(' ')[1] || 'center';\n\n     let targetElPosition: ClientRect = {\n       height: targetElBCR.height || targetElement.offsetHeight,\n       width: targetElBCR.width || targetElement.offsetWidth,\n       top: 0,\n       bottom: targetElBCR.height || targetElement.offsetHeight,\n       left: 0,\n       right: targetElBCR.width || targetElement.offsetWidth\n     };\n\n     switch (placementPrimary) {\n       case 'top':\n       targetElPosition.top = hostElPosition.top - targetElement.offsetHeight;\n       targetElPosition.bottom += hostElPosition.top - targetElement.offsetHeight;\n       targetElPosition.left = shiftWidth[placementSecondary];\n       targetElPosition.right += shiftWidth[placementSecondary];\n       break;\n       case 'bottom':\n       targetElPosition.top = shiftHeight[placementPrimary];\n       targetElPosition.bottom += shiftHeight[placementPrimary];\n       targetElPosition.left = shiftWidth[placementSecondary];\n       targetElPosition.right += shiftWidth[placementSecondary];\n       break;\n       case 'left':\n       targetElPosition.top = shiftHeight[placementSecondary];\n       targetElPosition.bottom += shiftHeight[placementSecondary];\n       targetElPosition.left = hostElPosition.left - targetElement.offsetWidth;\n       targetElPosition.right += hostElPosition.left - targetElement.offsetWidth;\n       break;\n       case 'right':\n       targetElPosition.top = shiftHeight[placementSecondary];\n       targetElPosition.bottom += shiftHeight[placementSecondary];\n       targetElPosition.left = shiftWidth[placementPrimary];\n       targetElPosition.right += shiftWidth[placementPrimary];\n       break;\n     }\n\n     targetElPosition.top = Math.round(targetElPosition.top);\n     targetElPosition.bottom = Math.round(targetElPosition.bottom);\n     targetElPosition.left = Math.round(targetElPosition.left);\n     targetElPosition.right = Math.round(targetElPosition.right);\n\n     return targetElPosition;\n   }\n\n   private getStyle(element: HTMLElement, prop: string): string { return (window.getComputedStyle(element) as any)[prop]; }\n\n   private isStaticPositioned(element: HTMLElement): boolean {\n     return (this.getStyle(element, 'position') || 'static') === 'static';\n   }\n\n   private offsetParent(element: HTMLElement): HTMLElement {\n     let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n     while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n       offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n     }\n\n     return offsetParentEl || document.documentElement;\n   }\n }\n\n const positionService = new Positioning();\n\n export function positionElements(\n   hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean): void {\n   const pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n\n   targetElement.style.top = `${pos.top}px`;\n   targetElement.style.left = `${pos.left}px`;\n }\n","// todo: add delay support\n// todo: merge events onShow, onShown, etc...\n// todo: add global positioning configuration?\nimport {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  NgZone,\n  Provider,\n  ReflectiveInjector,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { PositioningOptions, PositioningService } from '../positioning/positioning.service';\nimport { listenToTriggers } from '../triggers';\nimport { ContentRef } from './content-ref.class';\n\nexport interface ListenOptions {\n  target?: ElementRef;\n  triggers?: string;\n  // show?: Function;\n  show?: Function | any;\n  // hide?: Function;\n  hide?: Function | any;\n  toggle?: Function;\n}\n\nexport class ComponentLoader<T> {\n  public onBeforeShow: EventEmitter<any> = new EventEmitter();\n  public onShown: EventEmitter<any> = new EventEmitter();\n  public shown: EventEmitter<any> = new EventEmitter();\n  public onBeforeHide: EventEmitter<any> = new EventEmitter();\n  public onHidden: EventEmitter<any> = new EventEmitter();\n  public hidden: EventEmitter<any> = new EventEmitter();\n\n  public instance: T;\n  // public _componentRef: ComponentRef<T>;\n  public _componentRef: ComponentRef<T> | any;\n\n  private _providers: Provider[] = [];\n  private _componentFactory: ComponentFactory<T>;\n  private _zoneSubscription: any;\n  // private _contentRef: ContentRef;\n  private _contentRef: ContentRef | any;\n  // private _innerComponent: ComponentRef<T>;\n  private _innerComponent: ComponentRef<T> | any ;\n\n  private _unregisterListenersFn: Function;\n\n  public get isShown(): boolean {\n    return !!this._componentRef;\n  }\n\n    /**\n     * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n     private attachment: string;\n\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * Currently only supports \"body\".\n     */\n     private container: string | ElementRef | any;\n\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n     private triggers: string;\n\n    /**\n     * Do not use this directly, it should be instanced via\n     * `ComponentLoadFactory.attach`\n     * @internal\n     */\n     // tslint:disable-next-line\n     public constructor(private _viewContainerRef: ViewContainerRef,\n       private _renderer: Renderer2,\n       private _elementRef: ElementRef,\n       private _injector: Injector,\n       private _componentFactoryResolver: ComponentFactoryResolver,\n       private _ngZone: NgZone,\n       private _applicationRef: ApplicationRef,\n       private _posService: PositioningService) {\n     }\n\n     public attach(compType: Type<T>): ComponentLoader<T> {\n       this._componentFactory = this._componentFactoryResolver\n       .resolveComponentFactory<T>(compType);\n       return this;\n     }\n\n     // todo: add behaviour: to target element, `body`, custom element\n     public to(container?: string): ComponentLoader<T> {\n       this.container = container || this.container;\n       return this;\n     }\n\n     public position(opts?: PositioningOptions | any): ComponentLoader<T> {\n       this.attachment = opts.attachment || this.attachment;\n       this._elementRef = opts.target as ElementRef || this._elementRef;\n       return this;\n     }\n\n     public provide(provider: Provider): ComponentLoader<T> {\n       this._providers.push(provider);\n       return this;\n     }\n\n     // todo: appendChild to element or document.querySelector(this.container)\n     public show(opts: { content?: string | TemplateRef<any>, [key: string]: any } = {}): ComponentRef<T> {\n       this._subscribePositioning();\n       this._innerComponent = null;\n\n       if (!this._componentRef) {\n         this.onBeforeShow.emit();\n         this._contentRef = this._getContentRef(opts.content);\n         const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\n\n         this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n         this._applicationRef.attachView(this._componentRef.hostView);\n         // this._componentRef = this._viewContainerRef\n         //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n         this.instance = this._componentRef.instance;\n\n         Object.assign(this._componentRef.instance, opts);\n\n         if (this.container instanceof ElementRef) {\n           this.container.nativeElement\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         if (this.container === 'body' && typeof document !== 'undefined') {\n          //  document.querySelector(this.container as string)\n          document.querySelector(this.container as string | any)\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n           this._elementRef.nativeElement.parentElement\n           .appendChild(this._componentRef.location.nativeElement);\n         }\n\n         // we need to manually invoke change detection since events registered\n         // via\n         // Renderer::listen() are not picked up by change detection with the\n         // OnPush strategy\n         if (this._contentRef.componentRef) {\n           this._innerComponent = this._contentRef.componentRef.instance;\n           this._contentRef.componentRef.changeDetectorRef.markForCheck();\n           this._contentRef.componentRef.changeDetectorRef.detectChanges();\n         }\n         this._componentRef.changeDetectorRef.markForCheck();\n         this._componentRef.changeDetectorRef.detectChanges();\n         this.onShown.emit(this._componentRef.instance);\n       }\n       return this._componentRef;\n     }\n\n     public hide(): ComponentLoader<T> {\n       if (!this._componentRef) {\n         return this;\n       }\n\n       this.onBeforeHide.emit(this._componentRef.instance);\n\n       const componentEl = this._componentRef.location.nativeElement;\n       componentEl.parentNode.removeChild(componentEl);\n       if (this._contentRef.componentRef) {\n         this._contentRef.componentRef.destroy();\n       }\n       this._componentRef.destroy();\n       if (this._viewContainerRef && this._contentRef.viewRef) {\n         this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n       }\n       // this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\n       //\n       // if (this._contentRef.viewRef && this._viewContainerRef.indexOf(this._contentRef.viewRef) !== -1) {\n         //   this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n         // }\n\n         this._contentRef = null;\n         this._componentRef = null;\n\n         this.onHidden.emit();\n         return this;\n       }\n\n       public toggle(): void | any {\n         if (this.isShown) {\n           this.hide();\n           return;\n         }\n\n         this.show();\n       }\n\n       public dispose(): void {\n         if (this.isShown) {\n           this.hide();\n         }\n\n         this._unsubscribePositioning();\n\n         if (this._unregisterListenersFn) {\n           this._unregisterListenersFn();\n         }\n       }\n\n       public listen(listenOpts: ListenOptions): ComponentLoader<T> {\n         this.triggers = listenOpts.triggers || this.triggers;\n\n         listenOpts.target = listenOpts.target || this._elementRef;\n         listenOpts.show = listenOpts.show || (() => this.show());\n         listenOpts.hide = listenOpts.hide || (() => this.hide());\n         listenOpts.toggle = listenOpts.toggle || (() => this.isShown\n           ? listenOpts.hide()\n           : listenOpts.show());\n\n         this._unregisterListenersFn = listenToTriggers(\n           this._renderer,\n           listenOpts.target.nativeElement,\n           this.triggers,\n           listenOpts.show,\n           listenOpts.hide,\n           listenOpts.toggle);\n\n         return this;\n       }\n\n       public getInnerComponent(): ComponentRef<T> {\n         return this._innerComponent;\n       }\n\n       private _subscribePositioning(): void | any {\n         if (this._zoneSubscription || !this.attachment) {\n           return;\n         }\n\n         this._zoneSubscription = this._ngZone\n         .onStable.subscribe(() => {\n           if (!this._componentRef) {\n             return;\n           }\n           this._posService.position({\n             element: this._componentRef.location,\n             target: this._elementRef,\n             attachment: this.attachment,\n             appendToBody: this.container === 'body'\n           });\n         });\n       }\n\n       private _unsubscribePositioning(): void | any {\n         if (!this._zoneSubscription) {\n           return;\n         }\n         this._zoneSubscription.unsubscribe();\n         this._zoneSubscription = null;\n       }\n\n       private _getContentRef(content: string | TemplateRef<any> | any): ContentRef {\n         if (!content) {\n           return new ContentRef([]);\n         }\n\n         if (content instanceof TemplateRef) {\n           if (this._viewContainerRef) {\n             const viewRef = this._viewContainerRef.createEmbeddedView<TemplateRef<T>>(content);\n             return new ContentRef([viewRef.rootNodes], viewRef);\n           }\n           const viewRef = content.createEmbeddedView({});\n           this._applicationRef.attachView(viewRef);\n           return new ContentRef([viewRef.rootNodes], viewRef);\n         }\n\n         if (typeof content === 'function') {\n           const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n           const modalContentInjector = ReflectiveInjector.resolveAndCreate([...this._providers, content], this._injector);\n           const componentRef = contentCmptFactory.create(modalContentInjector);\n           this._applicationRef.attachView(componentRef.hostView);\n           return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n         }\n         return new ContentRef([[this._renderer.createText(`${content}`)]]);\n       }\n     }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n import { ComponentRef, ViewRef } from '@angular/core';\n\n export class ContentRef {\n   public nodes: any[];\n   public viewRef?: ViewRef;\n   public componentRef?: ComponentRef<any>;\n\n   public constructor( nodes: any[],  viewRef?: ViewRef,  componentRef?: ComponentRef<any>) {\n     this.nodes = nodes;\n     this.viewRef = viewRef;\n     this.componentRef = componentRef;\n   }\n }\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nimport { Renderer2 } from '@angular/core';\nimport { Trigger } from './trigger.class';\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/)\n    .map((trigger: string) => trigger.split(':'))\n    .map((triggerPair: string[]) => {\n      const alias = aliases[triggerPair[0]] || triggerPair;\n      return new Trigger(alias[0], alias[1]);\n    });\n\n  const manualTriggers = parsedTriggers\n    .filter((triggerPair: Trigger) => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nexport function listenToTriggers(renderer: Renderer2, target: any, triggers: string,\n  showFn: Function, hideFn: Function, toggleFn: Function): Function {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners: any[] = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  //  parsedTriggers.forEach((trigger: Trigger) => {\n  parsedTriggers.forEach((trigger: Trigger | any) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, () => {\n        toggleFn();\n      }));\n      // listeners.push(renderer.listen(target, trigger.open, toggleFn));\n      return;\n    }\n\n    listeners.push(\n      renderer.listen(target, trigger.open, () => {\n        showFn();\n       }),\n      // renderer.listen(target, trigger.open, showFn),\n      renderer.listen(target, trigger.close, () => {\n        hideFn();\n      }));\n      // renderer.listen(target, trigger.close, hideFn));\n  });\n\n  return () => { listeners.forEach((unsubscribeFn: Function) => unsubscribeFn()); };\n}\n","/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\n export class Trigger {\n   public open: string;\n   public close?: string;\n\n   public constructor(open: string, close?: string) {\n     this.open = open;\n     this.close = close || open;\n   }\n\n   public isManual(): boolean { return this.open === 'manual' || this.close === 'manual'; }\n }\n","import { Injectable } from '@angular/core';\n\n/** Default dropdown configuration */\n@Injectable()\nexport class BsDropdownConfig {\n  /** default dropdown auto closing behavior */\n  autoClose = true;\n}\n","import { Directive, ElementRef, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { BsDropdownState } from './dropdown.state';\n\n@Directive({\n  selector: '[mdbDropdownToggle],[dropdownToggle]',\n  exportAs: 'bs-dropdown-toggle'\n})\nexport class BsDropdownToggleDirective implements OnDestroy {\n  private _subscriptions: Subscription[] = [];\n\n  @HostBinding('attr.aria-haspopup') ariaHaspopup = true;\n  // @HostBinding('attr.disabled') isDisabled: boolean = null;\n  @HostBinding('attr.disabled') isDisabled: boolean | any = null;\n\n  // @HostBinding('class.active')\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n    this._state.toggleClick.emit();\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: any): void {\n    if (this._state.autoClose && event.button !== 2 &&\n      !this._element.nativeElement.contains(event.target)) {\n      this._state.toggleClick.emit(false);\n  }\n}\n\n@HostListener('keyup.esc')\nonEsc(): void {\n  if (this._state.autoClose) {\n    this._state.toggleClick.emit(false);\n  }\n}\n\nconstructor(private _state: BsDropdownState,\n  private _element: ElementRef) {\n  // sync is open value with state\n  this._subscriptions.push(this._state\n    .isOpenChange.subscribe((value: boolean) => this.isOpen = value));\n  // populate disabled state\n  this._subscriptions.push(this._state\n    .isDisabledChange\n    // .subscribe((value: boolean) => this.isDisabled = value || null));\n    .subscribe((value: boolean | any) => this.isDisabled = value || null));\n}\n\nngOnDestroy(): void {\n  for (const sub of this._subscriptions) {\n    sub.unsubscribe();\n  }\n}\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BsDropdownState } from './dropdown.state';\n\n@Directive({\n  selector: '[mdbDropdownMenu],[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n})\nexport class BsDropdownMenuDirective {\n  constructor(_state: BsDropdownState,\n    _viewContainer: ViewContainerRef,\n    _templateRef: TemplateRef<any>) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, HostBinding } from '@angular/core';\nimport { BsDropdownState } from './dropdown.state';\n\n@Component({\n  selector: 'mdb-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <div [class.dropup]=\"direction === 'up'\"\n  [class.dropdown]=\"direction === 'down'\"\n  [class.show]=\"isOpen\"\n  [class.open]=\"isOpen\">\n    <ng-content></ng-content>\n  </div>\n  `\n})\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  @HostBinding('style.display') display = 'block';\n  @HostBinding('style.position') position = 'absolute';\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(private _state: BsDropdownState) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from '../utils/component-loader/bs-component-ref.class';\n\n@Injectable()\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n   dropdownMenu: Promise<BsComponentRef<any>>;\n   resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n   constructor() {\n     this.dropdownMenu = new Promise((resolve) => {\n       this.resolveDropdownMenu = resolve;\n     });\n   }\n }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CollapseComponent } from './collapse.component';\n\n@NgModule({\n  declarations: [CollapseComponent],\n  exports: [CollapseComponent]\n})\nexport class CollapseModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CollapseModule, providers: []};\n  }\n}\n","\nimport { Component, OnInit, HostBinding, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { state, style, trigger, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: '[mdbCollapse]',\n  exportAs: 'bs-collapse',\n  template: '<ng-content></ng-content>',\n  animations: [\n    trigger('expandBody', [\n      state('collapsed', style({height: '0px', visibility: 'hidden', overflow: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible', overflow: 'visible'})),\n      transition('expanded <=> collapsed', animate('500ms ease')),\n    ])\n  ],\n})\nexport class CollapseComponent implements OnInit {\n  @Input() isCollapsed = true;\n\n  @Output() showBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() shownBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() hideBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() hiddenBsCollapse: EventEmitter<any> = new EventEmitter();\n  @Output() collapsed: EventEmitter<any> = new EventEmitter();\n  @Output() expanded: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  @HostBinding('@expandBody') expandAnimationState: string;\n  @HostBinding('style.overflow')\n  overflow = 'hidden';\n\n  @HostListener('@expandBody.done', ['$event'])\n  onExpandBodyDone(event: any) {\n    if (event.toState === 'expanded') {\n      this.shownBsCollapse.emit(this);\n      this.expanded.emit(this);\n    } else {\n      this.hiddenBsCollapse.emit(this);\n      this.collapsed.emit(this);\n    }\n  }\n\n  toggle() {\n    this.isCollapsed ? this.show() : this.hide();\n  }\n\n  show() {\n    this.expandAnimationState = 'expanded';\n    this.isCollapsed = false;\n\n    this.showBsCollapse.emit(this);\n  }\n\n  hide() {\n    this.expandAnimationState = 'collapsed';\n    this.isCollapsed = true;\n\n    this.hideBsCollapse.emit(this);\n  }\n\n  initializeCollapseState() {\n    this.isCollapsed ? this.hide() : this.show();\n  }\n\n  ngOnInit() {\n    this.initializeCollapseState();\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox.component';\n\nexport { CHECKBOX_VALUE_ACCESSOR, CheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  declarations: [\n    CheckboxComponent\n  ],\n  exports: [\n    CheckboxComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class CheckboxModule { }\n","import { Component, OnInit, forwardRef, ViewChild, Input, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxComponent),\n  multi: true\n};\n\nlet defaultIdNumber = 0;\n\nexport class MdbCheckboxChange {\n  element: CheckboxComponent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'mdb-checkbox',\n  template: \"<div [ngClass]=\\\"{  'custom-control custom-checkbox': default, 'form-check': !default, 'custom-control-inline': inline, 'form-check-inline': inline && !default }\\\"> <input  #input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [ngClass]=\\\"{  'filled-in': filledIn || rounded, 'custom-control-input': default, 'form-check-input': !default }\\\" [id]=\\\"id\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [required]=\\\"required\\\" [indeterminate]=\\\"indeterminate\\\" [attr.name]=\\\"name\\\" [attr.value]=\\\"value\\\" [tabIndex]=\\\"tabIndex\\\" (click)=\\\"onCheckboxClick($event)\\\" (change)=\\\"onCheckboxChange($event)\\\" > <label [ngClass]=\\\"{  'custom-control-label': default, 'form-check-label': !default, 'label-before': checkboxPosition === 'right',  'checkbox-rounded': rounded, 'disabled': disabled }\\\" [attr.for]=\\\"id\\\"> <ng-content></ng-content> </label> </div>\",\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n})\nexport class CheckboxComponent implements OnInit, OnChanges {\n  @ViewChild('input') inputEl: any;\n\n  private defaultId = `mdb-checkbox-${++defaultIdNumber}`;\n\n  @Input() class: string;\n  @Input() id: string = this.defaultId;\n  @Input() required: boolean;\n  @Input() name: string;\n  @Input() value: string;\n  @Input() checked = false;\n  @Input() filledIn = false;\n  @Input() indeterminate = false;\n  @Input() disabled: boolean;\n  @Input() rounded = false;\n  @Input() checkboxPosition = 'left';\n  @Input() default = false;\n  @Input() inline = false;\n  @Input() tabIndex: number;\n\n  @Output() change: EventEmitter<MdbCheckboxChange> = new EventEmitter<MdbCheckboxChange>();\n\n\n  constructor() { }\n\n\n  ngOnInit() {\n    if (this.indeterminate && !this.filledIn && !this.rounded) {\n      this.inputEl.indeterminate = true;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('checked')) {\n      this.checked = changes.checked.currentValue;\n    }\n  }\n\n  get changeEvent() {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n\n  toggle() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checked = !this.checked;\n    this.indeterminate = false;\n    this.onChange(this.checked);\n  }\n\n  onCheckboxClick(event: any) {\n    event.stopPropagation();\n    this.toggle();\n  }\n\n  onCheckboxChange(event: any) {\n    event.stopPropagation();\n    this.change.emit(this.changeEvent);\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  writeValue(value: any) {\n    this.value = value;\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { BaseChartDirective } from './chart.directive';\n\n@NgModule({\n  declarations: [\n  BaseChartDirective\n  ],\n  exports: [\n  BaseChartDirective\n  ],\n  imports: []\n})\nexport class ChartsModule {\n}\n","import {\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Output,\n  SimpleChanges,\n  Directive\n} from '@angular/core';\n\nimport { Color } from './color.service';\nimport { Colors } from './colors.service';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport * as Chart from 'chart.js';\n\n@Directive({ selector: 'canvas[mdbChart]', exportAs: 'mdb-base-chart' })\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, Colors {\n  public static defaultColors: Array<number[]> = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n  ];\n\n  @Input() public data: number[] | any[];\n  @Input() public datasets: any[];\n  @Input() public labels: Array<any> = [];\n  @Input() public options: any = {\n    legend: { display: false }\n  };\n  @Input() public chartType: string;\n  @Input() public colors: Array<any>;\n  @Input() public legend = false;\n\n  @Output() public chartClick: EventEmitter<any> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<any> = new EventEmitter();\n\n  public ctx: any;\n  public chart: any;\n  cvs: any;\n  initFlag = false;\n\n  element: ElementRef;\n  isBrowser: any = false;\n  public constructor(element: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n    this.element = element;\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  public ngOnInit(): any {\n    if (this.isBrowser) {\n      this.ctx = this.element.nativeElement.getContext('2d');\n      this.cvs = this.element.nativeElement;\n      this.initFlag = true;\n      if (this.data || this.datasets) {\n        this.refresh();\n      }\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.initFlag) {\n      // Check if the changes are in the data or datasets\n      if ((changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) && !changes.hasOwnProperty('labels')) {\n        if (changes['data']) {\n          this.updateChartData(changes['data'].currentValue);\n        } else {\n          this.updateChartData(changes['datasets'].currentValue);\n        }\n\n        this.chart.update();\n      } else {\n        // otherwise rebuild the chart\n        this.refresh();\n      }\n    }\n  }\n\n  public ngOnDestroy(): any {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n  }\n\n  public getChartBuilder(ctx: any/*, data:Array<any>, options:any*/): any {\n    const datasets: any = this.getDatasets();\n\n    const options: any = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = { display: false };\n    }\n    // hock for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: any, active: Array<any>) => {\n        if (active && active.length) {\n          this.chartHover.emit({ event, active });\n        }\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event: any, active: Array<any>) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const opts = {\n      type: this.chartType,\n      data: {\n        labels: this.labels,\n        datasets: datasets\n      },\n      options: options\n    };\n\n    return new Chart(ctx, opts);\n  }\n\n  private updateChartData(newDataValues: number[] | any[]): void {\n    if (Array.isArray(newDataValues[0].data)) {\n      this.chart.data.datasets.forEach((dataset: any, i: number) => {\n        dataset.data = newDataValues[i].data;\n\n        if (newDataValues[i].label) {\n          dataset.label = newDataValues[i].label;\n        }\n      });\n    } else {\n      this.chart.data.datasets[0].data = newDataValues;\n    }\n  }\n\n  private getDatasets(): any {\n    let datasets: any = void 0;\n    // in case if datasets is not provided, but data is present\n    if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n      if (Array.isArray(this.data[0])) {\n        datasets = (this.data as Array<number[]>).map((data: number[], index: number) => {\n          return { data, label: this.labels[index] || `Label ${index}` };\n        });\n      } else {\n        datasets = [{ data: this.data, label: `Label 0` }];\n      }\n    }\n\n    if (this.datasets && this.datasets.length ||\n      (datasets && datasets.length)) {\n      datasets = (this.datasets || datasets)\n        .map((elm: number, index: number) => {\n          const newElm: any = Object.assign({}, elm);\n          if (this.colors && this.colors.length) {\n            Object.assign(newElm, this.colors[index]);\n          } else {\n            Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n          }\n          return newElm;\n        });\n    }\n\n    if (!datasets) {\n      throw new Error(`ng-charts configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n    }\n\n    return datasets;\n  }\n\n  private refresh(): any {\n    this.ngOnDestroy();\n    this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n  }\n}\n\nfunction rgba(colour: Array<number>, alpha: number): string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors: Array<number[]>): any {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor(): number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n */\nfunction generateColor(index: number): number[] {\n  return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n */\nfunction generateColors(count: number): Array<number[]> {\n  const colorsArr: Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n\n/**\n * Generate colors by chart type\n */\nfunction getColors(chartType: string, index: number, count: number): any {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n  return generateColor(index);\n}\n\n\n","import { MdbCardFooterComponent } from './mdb-card-footer.component';\nimport { MdbCardTitleComponent } from './mdb-card-title.component';\nimport { MdbCardTextComponent } from './mdb-card-text.component';\nimport { MdbCardBodyComponent } from './mdb-card-body.component';\nimport { MdbCardComponent } from './mdb-card.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MdbCardImageComponent } from './mdb-card-image.component';\nimport { MdbCardHeaderComponent } from './mdb-card-header.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        MdbCardComponent,\n        MdbCardBodyComponent,\n        MdbCardImageComponent,\n        MdbCardTextComponent,\n        MdbCardTitleComponent,\n        MdbCardFooterComponent,\n        MdbCardHeaderComponent\n    ],\n    exports: [\n        MdbCardComponent,\n        MdbCardBodyComponent,\n        MdbCardImageComponent,\n        MdbCardTextComponent,\n        MdbCardTitleComponent,\n        MdbCardFooterComponent,\n        MdbCardHeaderComponent\n    ]\n})\nexport class CardsFreeModule {\n    public static forRoot(): ModuleWithProviders {\n        return { ngModule: CardsFreeModule, providers: [] };\n    }\n}\n","import { Component, Input, OnInit, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-header',\n    template: \"<ng-content></ng-content>\",\n})\n\nexport class MdbCardHeaderComponent implements OnInit {\n    @Input() class: string;\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-header');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-img',\n    template: \"<img class=\\\"img-fluid\\\" [src]=\\\"src\\\" [alt]=\\\"alt\\\">\",\n})\n\nexport class MdbCardImageComponent {\n\n    @Input() src: string;\n    @Input() alt: string;\n\n}\n","\nimport { Component, Input, ElementRef, Renderer2, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card',\n    template: \"<div class=\\\"card\\\" [ngClass]=\\\"{'card-cascade': cascade, 'wider': wider}\\\" #card> <ng-content></ng-content> </div>\",\n})\n\nexport class MdbCardComponent implements OnInit {\n    @Input() class: string;\n    @Input() cascade: boolean;\n    @Input() wider: boolean;\n\n    @ViewChild('card') card: ElementRef;\n\n\n    @Input() set narrower(narrower: boolean) {\n        if (narrower) {\n            this._r.addClass(this._el.nativeElement, 'narrower');\n        }\n    }\n\n    @Input() set reverse(reverse: boolean) {\n        if (reverse) {\n            this._r.addClass(this._el.nativeElement, 'reverse');\n        }\n    }\n\n    @Input() set dark(dark: boolean) {\n        if (dark) {\n            this._r.addClass(this._el.nativeElement, 'card-dark');\n        }\n    }\n\n    @Input() set bgColor(color: string) {\n        if (color) {\n            this._r.addClass(this.card.nativeElement, color);\n        }\n    }\n\n    @Input() set borderColor(color: string) {\n        if (color) {\n            this._r.addClass(this.card.nativeElement, color);\n        }\n    }\n\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card');\n        if (this.cascade) {\n            this._r.addClass(this._el.nativeElement, 'card-cascade');\n        }\n        if (this.wider) {\n            this._r.addClass(this._el.nativeElement, 'wider');\n        }\n        if (this.narrower) {\n            this._r.addClass(this._el.nativeElement, 'narrower');\n        }\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n        if (this._el.nativeElement.parentElement.classList.contains('card-deck')) {\n            this._r.addClass(this.card.nativeElement, 'w-100');\n            this._r.addClass(this.card.nativeElement, 'mx-0');\n        }\n    }\n}\n","\nimport { Component, Input, ElementRef, Renderer2, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-body',\n    template: \" <ng-content></ng-content> \",\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class MdbCardBodyComponent implements OnInit {\n    @Input() class: string;\n\n    @Input() set cascade(cascade: boolean) {\n        if (cascade) {\n            this._r.addClass(this._el.nativeElement, 'card-body-cascade');\n        }\n    }\n\n    constructor(private _el: ElementRef, private _r: Renderer2) {\n\n    }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-body');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","\nimport { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-text',\n    template: \"<p class=\\\"card-text {{class}} \\\"> <ng-content></ng-content> </p>\",\n})\n\nexport class MdbCardTextComponent {\n\n    @Input() class: string;\n}\n","\nimport { Component, OnInit, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-title',\n    template: \"<ng-content></ng-content>\",\n})\n\nexport class MdbCardTitleComponent implements OnInit {\n\n    constructor(private _el: ElementRef, private _r: Renderer2) {\n        \n    }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-title');\n    }\n}\n","import { Component, Input, ElementRef, Renderer2, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mdb-card-footer',\n    template: \"<ng-content></ng-content> \",\n})\n\nexport class MdbCardFooterComponent implements OnInit {\n    @Input() class: string;\n    constructor(private _el: ElementRef, private _r: Renderer2) { }\n\n    ngOnInit() {\n        this._r.addClass(this._el.nativeElement, 'card-footer');\n        if (this.class) {\n            this.class.split(' ').forEach((element: any) => {\n                this._r.addClass(this._el.nativeElement, element);\n            });\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SlideComponent, CarouselComponent],\n  exports: [SlideComponent, CarouselComponent],\n  providers: [CarouselConfig]\n})\nexport class CarouselModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CarouselModule, providers: []};\n  }\n}\n","import { Component, HostBinding, OnDestroy, Input, OnInit, ElementRef } from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\n\n@Component({\n  selector: 'mdb-slide, mdb-carousel-item',\n  template: `\n  <ng-content></ng-content>\n  `\n})\nexport class SlideComponent implements OnInit, OnDestroy {\n\n  /** Is current slide active */\n  @HostBinding('class.active')\n  @Input() public active: boolean;\n  @HostBinding('class.animated') animated = false;\n  @HostBinding('class.carousel-item-next') directionNext = false;\n  @HostBinding('class.carousel-item-left') directionLeft = false;\n  @HostBinding('class.carousel-item-prev') directionPrev = false;\n  @HostBinding('class.carousel-item-right') directionRight = false;\n  /** Wraps element by appropriate CSS classes */\n  @HostBinding('class.carousel-item')\n\n\n  /** Link to Parent(container-collection) component */\n  // public carousel: CarouselComponent;\n  // public el: ElementRef = null;\n  public el: ElementRef | any = null;\n\n  public constructor(public carousel: CarouselComponent, el: ElementRef) {\n    // this.carousel = carousel;\n    this.el = el;\n  }\n\n  /** Fires changes in container collection after adding a new slide instance */\n  public ngOnInit(): void {\n    this.carousel.addSlide(this);\n  }\n\n  /** Fires changes in container collection after removing of this slide instance */\n  public ngOnDestroy(): void {\n    this.carousel.removeSlide(this);\n  }\n}\n","\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  AfterViewInit\n} from '@angular/core';\n\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\nimport { LinkedList } from '../utils/linked-list.class';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport enum Direction { UNKNOWN, NEXT, PREV }\n\n/**\n* Base element to create carousel\n*/\n@Component({\n  selector: 'mdb-carousel',\n  template: \"<div tabindex=\\\"0\\\" (swipeleft)=\\\"swipe($event.type)\\\" (swiperight)=\\\"swipe($event.type)\\\" (mouseenter)=\\\"pause()\\\" (mouseleave)=\\\"play()\\\" (mouseup)=\\\"play()\\\" class=\\\"carousel {{ class }} {{ type }}\\\"> <div class=\\\"controls-top\\\" *ngIf=\\\"slides.length > 1 && !checkNavigation() && isControls\\\"> <a class=\\\"btn-floating\\\" [class.disabled]=\\\"activeSlide===0&&noWrap\\\" (click)=\\\"previousSlide()\\\"><i class=\\\"fa fa-chevron-left\\\"></i></a> <a class=\\\"btn-floating\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\"><i class=\\\"fa fa-chevron-right\\\"></i></a> </div> <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"slides.length > 1 && checkDots() && isControls\\\"> <li *ngFor=\\\"let slidez of slides; let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"></li> </ol> <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"slides.length > 1 && !checkDots() && isControls\\\"> <li *ngFor=\\\"let slidez of slides; let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"> <img class=\\\"img-fluid\\\" src=\\\"{{ getImg(slidez) }}\\\"> </li> </ol> <div class=\\\"carousel-inner\\\"><ng-content></ng-content></div> <a class=\\\"carousel-control-prev\\\" [class.disabled]=\\\"activeSlide === 0 && noWrap\\\" (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1 && checkNavigation() && isControls\\\"> <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span> <span  class=\\\"sr-only\\\">Previous</span> </a> <a class=\\\"carousel-control-next\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\" *ngIf=\\\"slides.length > 1 && checkNavigation() && isControls\\\"> <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Next</span> </a> </div>\",\n})\n\nexport class CarouselComponent implements OnDestroy, AfterViewInit {\n  SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n\n  protected _slides: LinkedList<SlideComponent> = new LinkedList<SlideComponent>();\n  public get slides(): SlideComponent[] {\n    return this._slides.toArray();\n  }\n\n  protected currentInterval: any;\n  protected isPlaying: boolean;\n  protected destroyed = false;\n  // protected el: ElementRef = null;\n  protected el: ElementRef | any = null;\n  protected animationEnd = true;\n  isBrowser: any = false;\n  /** If `true` — carousel will not cycle continuously and will have hard stops (prevent looping) */\n  @Input() public noWrap: boolean;\n  /**  If `true` — will disable pausing on carousel mouse hover */\n  @Input() public noPause: boolean;\n\n  @Input('isControls') public isControls = true;\n  @Input() public keyboard: boolean;\n\n  @Input('class') public class: String = '';\n  @Input('type') public type: String = '';\n  @Input('animation') public animation: String = '';\n  @Input() activeSlideIndex: number;\n\n  // protected _currentActiveSlide: number;\n  protected _currentActiveSlide: number | any;\n\n  /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */\n  @Output() public activeSlideChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /** Index of currently displayed slide(started for 0) */\n  @Input()\n  public set activeSlide(index: number) {\n    if (this._slides.length && index !== this._currentActiveSlide) {\n      this._select(index);\n    }\n  }\n\n  public get activeSlide(): number {\n    return this._currentActiveSlide;\n  }\n\n\n\n  protected _interval: number;\n\n  public checkNavigation() {\n    if (this.type === 'carousel-multi-item') {\n      return false;\n    }\n    return true;\n\n  }\n\n  public checkDots() {\n    if (this.type === 'carousel-thumbnails') {\n      return false;\n    }\n\n\n    return true;\n  }\n\n  getImg(slide: any) {\n    return slide.el.nativeElement.querySelector('img').src;\n  }\n\n  /**\n   * Delay of item cycling in milliseconds. If false, carousel won't cycle automatically.\n   */\n  @Input()\n  public get interval(): number {\n    return this._interval;\n  }\n  public set interval(value: number) {\n    this._interval = value;\n    this.restartTimer();\n  }\n\n  public get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  public constructor(config: CarouselConfig, el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    Object.assign(this, config);\n    this.el = el;\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  /**\n   * Adds new slide. If this slide is first in collection - set it as active and starts auto changing\n   * @param slide\n   */\n  public addSlide(slide: SlideComponent): void {\n    this._slides.add(slide);\n    if (this._slides.length === 1) {\n      this._currentActiveSlide = void 0;\n      this.activeSlide = 0;\n      this.play();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Setting first visible slide\n    if (this.activeSlideIndex) {\n      setTimeout(() => {\n        this._select(this.activeSlideIndex);\n        this.activeSlideChange.emit({'relatedTarget': this.activeSlide });\n      }, 0);\n    }\n  }\n\n  /**\n   * Removes specified slide. If this slide is active - will roll to another slide\n   * @param slide\n   */\n  public removeSlide(slide: SlideComponent): void {\n    const remIndex = this._slides.indexOf(slide);\n\n    if (this._currentActiveSlide === remIndex) {\n\n      // removing of active slide\n      //  let nextSlideIndex: number = void 0;\n      let nextSlideIndex: number | any = void 0;\n      if (this._slides.length > 1) {\n        // if this slide last - will roll to first slide, if noWrap flag is FALSE or to previous, if noWrap is TRUE\n        // in case, if this slide in middle of collection, index of next slide is same to removed\n        nextSlideIndex = !this.isLast(remIndex) ? remIndex :\n          this.noWrap ? remIndex - 1 : 0;\n      }\n      this._slides.remove(remIndex);\n\n      // prevents exception with changing some value after checking\n      setTimeout(() => {\n        this._select(nextSlideIndex);\n      }, 0);\n    } else {\n      this._slides.remove(remIndex);\n      const currentSlideIndex = this.getCurrentSlideIndex();\n      setTimeout(() => {\n        // after removing, need to actualize index of current active slide\n        this._currentActiveSlide = currentSlideIndex;\n        this.activeSlideChange.emit(this._currentActiveSlide);\n      }, 0);\n\n    }\n  }\n  // Fixed problem while cannot swipe next / previous image while using HammerJS.\n  swipe(action = this.SWIPE_ACTION.RIGHT) {\n    if (action === this.SWIPE_ACTION.RIGHT) {\n      this.previousSlide();\n    }\n\n    if (action === this.SWIPE_ACTION.LEFT) {\n      this.nextSlide();\n    }\n  }\n\n\n  /**\n   * Rolling to next slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  public nextSlide(force: boolean = false) {\n    if (this.animation === 'slide') {\n      this.pause();\n      const direction = Direction.NEXT;\n      this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\n    } else if (this.animation === 'fade') {\n      this.pause();\n      this.fadeAnimation(this.findNextSlideIndex(Direction.NEXT, force));\n    } else {\n      this.activeSlide = this.findNextSlideIndex(Direction.NEXT, force);\n    }\n    if (!this.animation) {\n      this.activeSlideChange.emit({ 'direction': 'Next', 'relatedTarget': this.activeSlide });\n    }\n  }\n\n  /**\n   * Rolling to previous slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  public previousSlide(force: boolean = false): void {\n    if (this.animation === 'slide') {\n      this.pause();\n      const direction = Direction.PREV;\n      this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\n    } else if (this.animation === 'fade') {\n      this.pause();\n      this.fadeAnimation(this.findNextSlideIndex(Direction.PREV, force));\n    } else {\n      this.activeSlide = this.findNextSlideIndex(Direction.PREV, force);\n    }\n    if (!this.animation) {\n      this.activeSlideChange.emit({ 'direction': 'Prev', 'relatedTarget': this.activeSlide });\n    }\n  }\n\n  protected fadeAnimation(goToIndex: number) {\n    // const currentSlide = this._slides.get(this._currentActiveSlide);\n    const goToSlide = this._slides.get(goToIndex);\n\n    if (this.animationEnd) {\n      this.animationEnd = false;\n\n      goToSlide.directionNext = true;\n      if (this.isBrowser) {\n        setTimeout(() => {\n          goToSlide.directionNext = false;\n          this.animationEnd = true;\n\n          this.activeSlide = goToIndex;\n          this.activeSlideChange.emit({ 'direction': 'Next', 'relatedTarget': this.activeSlide });\n          this.play();\n        }, 100);\n      }\n    }\n  }\n\n  protected slideAnimation(goToIndex: number, direction: any) {\n\n    const currentSlide = this._slides.get(this._currentActiveSlide);\n    const goToSlide = this._slides.get(goToIndex);\n\n    if (this.animationEnd) {\n      if (direction === Direction.NEXT) {\n        this.animationEnd = false;\n        goToSlide.directionNext = true;\n        if (this.isBrowser) {\n          setTimeout(() => {\n            goToSlide.directionLeft = true;\n            currentSlide.directionLeft = true;\n          }, 100);\n        }\n      }\n\n      if (direction === Direction.PREV) {\n        this.animationEnd = false;\n\n        goToSlide.directionPrev = true;\n        if (this.isBrowser) {\n          setTimeout(() => {\n            goToSlide.directionRight = true;\n            currentSlide.directionRight = true;\n          }, 100);\n        }\n      }\n\n      if (this.isBrowser) {\n        setTimeout(() => {\n          goToSlide.directionLeft = false;\n          goToSlide.directionNext = false;\n          currentSlide.directionLeft = false;\n          currentSlide.directionNext = false;\n          goToSlide.directionRight = false;\n          goToSlide.directionPrev = false;\n          currentSlide.directionRight = false;\n          currentSlide.directionPrev = false;\n\n          this.animationEnd = true;\n\n          this.activeSlide = goToIndex;\n\n          let directionName;\n          if (direction === Direction.NEXT) {\n            directionName = 'Next';\n          } else if (direction === Direction.PREV) {\n            directionName = 'Prev';\n          }\n\n          this.activeSlideChange.emit({ 'direction': directionName, 'relatedTarget': this.activeSlide });\n          this.play();\n        }, 700);\n      }\n    }\n  }\n\n\n\n  /**\n   * Rolling to specified slide\n   * @param index: {number} index of slide, which must be shown\n   */\n  public selectSlide(index: number): void {\n    this.pause();\n    if (this.animation === 'slide') {\n\n      if (this.activeSlide < index) {\n        this.slideAnimation(index, Direction.NEXT);\n      } else if (this.activeSlide > index) {\n        this.slideAnimation(index, Direction.PREV);\n      }\n    } else if (this.animation === 'fade') {\n      if (index !== this.activeSlide) {\n        this.fadeAnimation(index);\n      }\n    }\n    this.play();\n  }\n\n  /**\n   * Starts a auto changing of slides\n   */\n  @HostListener('mouseleave') play() {\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      this.restartTimer();\n    }\n  }\n\n  /**\n   * Stops a auto changing of slides\n   */\n  @HostListener('mouseenter') pause() {\n    if (!this.noPause) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n\n  /**\n   * Finds and returns index of currently displayed slide\n   */\n  public getCurrentSlideIndex(): number {\n    return this._slides.findIndex((slide: SlideComponent) => slide.active);\n  }\n\n  /**\n   * Defines, whether the specified index is last in collection\n   */\n  public isLast(index: number): boolean {\n    return index + 1 >= this._slides.length;\n  }\n\n  /**\n   * Defines next slide index, depending of direction\n   * @param direction: Direction(UNKNOWN|PREV|NEXT)\n   * @param force: {boolean} if TRUE - will ignore noWrap flag, else will return undefined if next slide require wrapping\n\n   */\n  private findNextSlideIndex(direction: Direction, force: boolean): any {\n    let nextSlideIndex = 0;\n\n    if (!force && (this.isLast(this.activeSlide) && direction !== Direction.PREV && this.noWrap)) {\n      return void 0;\n    }\n\n    switch (direction) {\n      case Direction.NEXT:\n        // if this is last slide, not force, looping is disabled and need to going forward - select current slide, as a next\n        nextSlideIndex = (!this.isLast(this._currentActiveSlide)) ? this._currentActiveSlide + 1 :\n          (!force && this.noWrap) ? this._currentActiveSlide : 0;\n        break;\n      case Direction.PREV:\n        // if this is first slide, not force, looping is disabled and need to going backward - select current slide, as a next\n        nextSlideIndex = (this._currentActiveSlide > 0) ? this._currentActiveSlide - 1 :\n          (!force && this.noWrap) ? this._currentActiveSlide : this._slides.length - 1;\n        break;\n      default:\n        throw new Error('Unknown direction');\n    }\n    return nextSlideIndex;\n  }\n\n  /**\n   * Sets a slide, which specified through index, as active\n   * @param index\n   */\n  private _select(index: number): void {\n    if (isNaN(index)) {\n      this.pause();\n      return;\n    }\n    const currentSlide = this._slides.get(this._currentActiveSlide);\n    if (currentSlide) {\n      currentSlide.active = false;\n    }\n    const nextSlide = this._slides.get(index);\n    if (nextSlide) {\n      this._currentActiveSlide = index;\n      nextSlide.active = true;\n      this.activeSlide = index;\n      // this.activeSlideChange.emit(index);\n    }\n  }\n\n  /**\n   * Starts loop of auto changing of slides\n   */\n  private restartTimer(): any {\n    this.resetTimer();\n    if (this.isBrowser) {\n      const interval = +this.interval;\n      if (!isNaN(interval) && interval > 0) {\n        this.currentInterval = setInterval(\n          () => {\n            const nInterval = +this.interval;\n            if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {\n              this.nextSlide();\n            } else {\n              this.pause();\n            }\n          },\n          interval);\n      }\n    }\n  }\n\n  /**\n   * Stops loop of auto changing of slides\n   */\n  private resetTimer(): void {\n    if (this.isBrowser) {\n      if (this.currentInterval) {\n        clearInterval(this.currentInterval);\n        this.currentInterval = void 0;\n      }\n    }\n\n  }\n\n  protected hasClass(el: any, className: any) {\n    if (el.classList) {\n      return el.classList.contains(className);\n    } else {\n      return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n    }\n  }\n\n  protected classAdd(el: any, className: any) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else if (!this.hasClass(el, className)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  protected removeClass(el: any, className: any) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else if (this.hasClass(el, className)) {\n      const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n      el.className = el.className.replace(reg, ' ');\n    }\n  }\n\n  @HostListener('keyup', ['$event']) keyboardControl(event: KeyboardEvent) {\n    if (this.keyboard) {\n      if (event.keyCode === 39) {\n        this.nextSlide();\n      }\n\n      if (event.keyCode === 37) {\n        this.previousSlide();\n      }\n    }\n\n  }\n  @HostListener('click') focus() {\n    this.el.nativeElement.focus();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CarouselConfig {\n  /** Default interval of auto changing of slides */\n  public interval = 5000;\n\n  /** Is loop of auto changing of slides can be paused */\n  public noPause = false;\n\n  /** Is slides can wrap from the last to the first slide */\n  public noWrap = false;\n\n  public keyboard = false;\n}\n","export class LinkedList <T> {\n\n  // public length: = 0;\n  public length: any = 0;\n  protected head: any;\n  protected tail: any;\n  protected current: any;\n  protected asArray: T[] = [];\n\n  protected getNode(position: number): any {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n    return current;\n  }\n\n  protected createInternalArrayRepresentation(): void {\n    const outArray: any[] = [];\n    let current = this.head;\n\n    while (current) {\n      outArray.push(current.value);\n      current = current.next;\n    }\n    this.asArray = outArray;\n  }\n\n  // public get(position: number): T {\n    public get(position: number): T | any {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      return void 0;\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n    return current.value;\n  }\n\n  public add(value: T, position: number = this.length): void {\n    if (position < 0 || position > this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = {\n      value: value as any,\n      next: undefined as any,\n      previous: undefined as any\n    };\n\n    if (this.length === 0) {\n      this.head = node;\n      this.tail = node;\n      this.current = node;\n    } else {\n      if (position === 0) {\n        // first node\n        node.next = this.head;\n        this.head.previous = node;\n        this.head = node;\n      } else if (position === this.length) {\n        // last node\n        this.tail.next = node;\n        node.previous = this.tail;\n        this.tail = node;\n      } else {\n        // node in middle\n        const currentPreviousNode = this.getNode(position - 1);\n        const currentNextNode = currentPreviousNode.next;\n\n        currentPreviousNode.next = node;\n        currentNextNode.previous = node;\n\n        node.previous = currentPreviousNode;\n        node.next = currentNextNode;\n      }\n\n    }\n    this.length++;\n    this.createInternalArrayRepresentation();\n  }\n\n  public remove(position: number = 0): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    if (position === 0) {\n      // first node\n      this.head = this.head.next;\n\n      if (this.head) {\n        // there is no second node\n        this.head.previous = undefined;\n      } else {\n        // there is no second node\n        this.tail = undefined;\n      }\n    } else if (position === this.length - 1) {\n      // last node\n      this.tail = this.tail.previous;\n      this.tail.next = undefined;\n    } else {\n      // middle node\n      const removedNode = this.getNode(position);\n      removedNode.next.previous = removedNode.previous;\n      removedNode.previous.next = removedNode.next;\n    }\n\n    this.length--;\n    this.createInternalArrayRepresentation();\n  }\n\n  public set(position: number, value: T): void {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = this.getNode(position);\n    node.value = value;\n    this.createInternalArrayRepresentation();\n  }\n\n  public toArray(): T[] {\n    return this.asArray;\n  }\n\n  public findAll(fn: any): any[] {\n    let current = this.head;\n    const result: any[] = [];\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result.push({index, value: current.value});\n      }\n      current = current.next;\n    }\n    return result;\n  }\n  // Array methods overriding start\n  public push(...args: T[]): number {\n    args.forEach((arg: any) => {\n      this.add(arg);\n    });\n    return this.length;\n  }\n\n  // public pop(): T {\n    public pop(): T | any {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const last = this.tail;\n    this.remove(this.length - 1);\n    return last.value;\n  }\n\n  public unshift(...args: T[]): number {\n    args.reverse();\n    args.forEach((arg: any) => {\n      this.add(arg, 0);\n    });\n    return this.length;\n  }\n\n  // public shift(): T {\n    public shift(): T | any {\n    if (this.length === 0) {\n      return undefined;\n    }\n    const lastItem = this.head.value;\n    this.remove();\n    return lastItem;\n  }\n\n  public forEach(fn: any): void {\n    let current = this.head;\n    for (let index = 0; index < this.length; index++) {\n      fn(current.value, index);\n      current = current.next;\n    }\n  }\n\n  public indexOf(value: T): number {\n    let current = this.head;\n    let position = 0;\n\n    for (let index = 0; index < this.length; index++) {\n      if (current.value === value) {\n\n        position = index;\n        break;\n      }\n      current = current.next;\n    }\n    return position;\n  }\n\n  public some(fn: any): boolean {\n    let current = this.head;\n    let result  = false;\n    while (current && !result) {\n      if (fn(current.value)) {\n        result = true;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public every(fn: any): boolean {\n    let current = this.head;\n    let result  = true;\n    while (current && result)  {\n      if (!fn(current.value)) {\n        result = false;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public toString(): string {\n    return '[Linked List]';\n  }\n\n  // public find(fn: any): T {\n    public find(fn: any): T | any {\n    let current = this.head;\n    // let result: T;\n    let result: T | any;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = current.value;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  public findIndex(fn: any): number {\n    let current = this.head;\n    // let result: number;\n    let result: number | any;\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = index;\n        break;\n      }\n      current = current.next;\n    }\n    return result;\n  }\n\n  // Array methods overriding END\n}\n","import { window } from './facade/browser';\n\nexport function isBs3(): boolean {\n  return window.__theme === 'bs4';\n}\n","import { CommonModule } from '@angular/common';\nimport { MdbBreadcrumbComponent } from './mdb-breadcrumb.component';\nimport { MdbBreadcrumbItemComponent } from './mdb-breadcrumb-item.component';\nimport { NgModule } from '@angular/core';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent],\n    exports: [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent]\n})\n\nexport class BreadcrumbModule {\n\n}\n","import { Component, ElementRef, Renderer2, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'mdb-breadcrumb-item',\n    template: \"<li class=\\\"list-inline-item breadcrumb-item font-weight-{{fontWeight}}\\\"> <ng-content></ng-content> </li> \"\n})\nexport class MdbBreadcrumbItemComponent implements OnInit {\n    @Input() fontWeight: string;\n\n    constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n    ngOnInit() {\n      this._renderer.addClass(this._el.nativeElement, 'breadcrumb-item');\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mdb-breadcrumb',\n  template: \"<ol class=\\\"breadcrumb list-inline list-unstyled {{customClass}} text-{{textTransform}}\\\"> <ng-content></ng-content> </ol> \"\n})\nexport class MdbBreadcrumbComponent {\n  @Input() customClass: string;\n  @Input() textTransform: string;\n}\n","import { MDBBadgeComponent } from './mdb-badge.component';\nimport { NgModule } from '@angular/core';\n\n\n@NgModule({\n  declarations: [MDBBadgeComponent],\n  exports: [MDBBadgeComponent]\n})\n\nexport class BadgeModule {\n\n}\n","import { Component, OnInit, ElementRef, Renderer2, Input, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'mdb-badge',\n    template: \"<span [attr.class]=\\\"class\\\"> <ng-content></ng-content> </span> \"\n})\nexport class MDBBadgeComponent implements OnInit {\n    @Input() @HostBinding('class.badge-default') default: boolean;\n    @Input() @HostBinding('class.badge-primary') primary: boolean;\n    @Input() @HostBinding('class.badge-success') success: boolean;\n    @Input() @HostBinding('class.badge-info') info: boolean;\n    @Input() @HostBinding('class.badge-warning') warning: boolean;\n    @Input() @HostBinding('class.badge-danger') danger: boolean;\n\n    @Input() @HostBinding('class.badge-pill') pill: boolean;\n\n    @Input() color: string;\n    @Input() class: string;\n    constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n    ngOnInit() {\n        this._renderer.addClass(this._el.nativeElement, 'badge');\n        if (this.color) {\n            const customClassArr = this.color.split(' ');\n\n            customClassArr.forEach((el: string) => {\n                this._renderer.addClass(this._el.nativeElement, el);\n            });\n        }\n\n    }\n\n}\n","import { MdbBtnDirective } from './buttons.directive';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './checkbox.directive';\nimport { ButtonRadioDirective } from './radio.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective]\n})\nexport class ButtonsModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ButtonsModule, providers: []};\n  }\n}\n","import { Directive, ElementRef, HostBinding, forwardRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n* Create radio buttons or groups of buttons.\n* A value of a selected button is bound to a variable specified via ngModel.\n*/\n@Directive({ selector: '[mdbRadio]', providers: [RADIO_CONTROL_VALUE_ACCESSOR] })\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  public onChange: any = Function.prototype;\n  public onTouched: any = Function.prototype;\n\n  radioElementsArray: Array<any> = [];\n  /** Radio button value, will be set to `ngModel` */\n  @Input() public mdbRadio: any;\n  /** If `true` — radio button can be unchecked */\n  @Input() public uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input() public value: any;\n\n  protected el: ElementRef;\n\n  @HostBinding('class.active')\n  public get isActive(): boolean {\n    return this.mdbRadio === this.value;\n  }\n\n  // @HostBinding('class.active')\n  @HostListener('click', ['$event'])\n  public onClick(event?: any): void {\n    try {\n      this.el.nativeElement.parentElement.childNodes.forEach((element: any) => {\n        this.radioElementsArray.push(element);\n      });\n      this.radioElementsArray.forEach(element => {\n        this.renderer.removeClass(element, 'active');\n      });\n      this.renderer.addClass(event.target, 'active');\n    } catch (error) {\n\n    }\n    if (this.el.nativeElement.attributes.disabled) {\n      return;\n    }\n\n    if (this.uncheckable && this.mdbRadio === this.value) {\n      this.value = undefined;\n    } else {\n      this.value = this.mdbRadio;\n    }\n\n    this.onTouched();\n    this.onChange(this.value);\n  }\n\n  public constructor(el: ElementRef, private renderer: Renderer2) {\n    this.el = el;\n  }\n\n  public ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  public onBlur(): void {\n    this.onTouched();\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  public writeValue(value: any): void {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","import { Directive, HostBinding, HostListener, Input, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n* Add checkbox functionality to any element\n*/\n@Directive({selector: '[mdbCheckbox]', providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() public btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() public btnCheckboxFalse: any = false;\n\n  @HostBinding('class.active') public state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  public onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  public ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n    ? this.btnCheckboxTrue\n    : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n    ? this.btnCheckboxFalse\n    : false;\n  }\n\n  public toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  public writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  public registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import { Directive, Renderer2, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[mdbBtn]'\n})\nexport class MdbBtnDirective implements OnInit {\n\n  @Input() color: string = '';\n  @Input() rounded: boolean = false;\n  @Input() gradient: string = '';\n  @Input() outline: boolean = false;\n  @Input() flat: boolean = false;\n  @Input() size: string = '';\n  @Input() block: boolean = false;\n  @Input() floating: boolean = false;\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const colorClass = 'btn-' + this.color;\n    const gradientClass = this.gradient + '-gradient';\n    const outlineClass = 'btn-outline-' + this.color;\n    const flatClass = 'btn-flat';\n    const roundedClass = 'btn-rounded';\n    const sizeClass = 'btn-' + this.size;\n    const blockClass = 'btn-block';\n    const floatingClass = 'btn-floating';\n\n    this.renderer.addClass(this.el.nativeElement, 'btn');\n\n    if (this.color !== '') {\n      this.renderer.addClass(this.el.nativeElement, colorClass);\n    }\n\n    if (this.rounded) {\n      this.renderer.addClass(this.el.nativeElement, roundedClass);\n    }\n\n    if (this.gradient) {\n      if (this.color !== '') {\n        this.renderer.removeClass(this.el.nativeElement, colorClass);\n      }\n      this.renderer.addClass(this.el.nativeElement, gradientClass);\n    }\n\n    if (this.outline) {\n      this.renderer.removeClass(this.el.nativeElement, colorClass);\n      this.renderer.addClass(this.el.nativeElement, outlineClass);\n    }\n\n    if (this.flat) {\n      if (this.color) {\n        this.renderer.removeClass(this.el.nativeElement, colorClass);\n      }\n      if (this.gradient) {\n        this.renderer.removeClass(this.el.nativeElement, gradientClass);\n      }\n      if (this.outline) {\n        this.renderer.removeClass(this.el.nativeElement, outlineClass);\n      }\n      if (this.rounded) {\n        this.renderer.removeClass(this.el.nativeElement, roundedClass);\n      }\n      this.renderer.addClass(this.el.nativeElement, flatClass);\n    }\n\n    if (this.size) {\n      this.renderer.addClass(this.el.nativeElement, sizeClass);\n    }\n\n    if (this.block) {\n      this.renderer.addClass(this.el.nativeElement, blockClass);\n    }\n\n    if (this.floating) {\n      this.renderer.removeClass(this.el.nativeElement, 'btn');\n      this.renderer.addClass(this.el.nativeElement, floatingClass);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ScrollSpyDirective } from './scroll-spy.directive';\nimport { ScrollSpyLinkDirective } from './scroll-spy-link.directive';\nimport { ScrollSpyWindowDirective } from './scroll-spy-window.directive';\nimport { ScrollSpyElementDirective } from './scroll-spy-element.directive';\nimport { ScrollSpyService } from './scroll-spy.service';\n\n\n@NgModule({\n  declarations: [\n    ScrollSpyDirective,\n    ScrollSpyLinkDirective,\n    ScrollSpyWindowDirective,\n    ScrollSpyElementDirective\n  ],\n  exports: [\n    ScrollSpyDirective,\n    ScrollSpyLinkDirective,\n    ScrollSpyWindowDirective,\n    ScrollSpyElementDirective\n  ],\n  providers: [ ScrollSpyService ]\n})\nexport class ScrollSpyModule { }\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit\n} from '@angular/core';\nimport { ScrollSpyService } from './scroll-spy.service';\n\n@Directive({\n  selector: '[mdbScrollSpyElement]'\n})\nexport class ScrollSpyElementDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollSpyElement')\n  get scrollSpyId(): string { return this._scrollSpyId; }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: ScrollSpyService\n  ) {}\n\n  isElementInViewport() {\n    const scrollTop = this.el.nativeElement.parentElement.scrollTop;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n\n    return (scrollTop >= elTop);\n  }\n\n  updateActiveState(scrollSpyId: string, id: string) {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll() {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll() {\n    this.renderer.listen(this.el.nativeElement.parentElement, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.el.nativeElement.id;\n    this.renderer.setStyle(this.el.nativeElement.parentElement, 'position', 'relative');\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Inject,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ScrollSpyService } from './scroll-spy.service';\n\n@Directive({\n  selector: '[mdbScrollSpyWindow]'\n})\nexport class ScrollSpyWindowDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollSpyWindow')\n  get scrollSpyId(): string { return this._scrollSpyId; }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: ScrollSpyService\n  ) {}\n\n  isElementInViewport() {\n    const scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop;\n    const elHeight = this.el.nativeElement.offsetHeight;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n    const elBottom = elTop + elHeight;\n\n    return (scrollTop >= elTop && scrollTop <= elBottom);\n  }\n\n  updateActiveState(scrollSpyId: string, id: string) {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    } else {\n      this.scrollSpyService.removeActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll() {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll() {\n    this.renderer.listen(window, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit() {\n    this.id = this.el.nativeElement.id;\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import {\n  Directive,\n  ContentChildren,\n  AfterViewInit,\n  QueryList,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { ScrollSpyLinkDirective } from './scroll-spy-link.directive';\nimport { ScrollSpyService } from './scroll-spy.service';\n\n@Directive({\n  selector: '[mdbScrollSpy]'\n})\nexport class ScrollSpyDirective implements AfterViewInit, OnDestroy {\n  @ContentChildren(ScrollSpyLinkDirective)\n  links: QueryList<ScrollSpyLinkDirective>;\n\n  @Input('mdbScrollSpy')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n  private _id: string;\n\n  constructor(private scrollSpyService: ScrollSpyService) {}\n\n  ngAfterViewInit() {\n    this.scrollSpyService.addScrollSpy({ id: this.id, links: this.links });\n  }\n\n  ngOnDestroy() {\n    this.scrollSpyService.removeScrollSpy(this.id);\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\nimport { ScrollSpyLinkDirective } from './scroll-spy-link.directive';\n\nexport interface ScrollSpy {\n  id: string;\n  links: QueryList<ScrollSpyLinkDirective>;\n}\n\n@Injectable()\nexport class ScrollSpyService {\n  private scrollSpys: ScrollSpy[] = [];\n\n  addScrollSpy(scrollSpy: ScrollSpy) {\n    this.scrollSpys.push(scrollSpy);\n  }\n\n  removeScrollSpy(scrollSpyId: string) {\n    const scrollSpyIndex = this.scrollSpys.findIndex( (spy) => {\n      return spy.id === scrollSpyId;\n    });\n    this.scrollSpys.splice(scrollSpyIndex, 1);\n  }\n\n  updateActiveState(scrollSpyId: string, activeLinkId: string) {\n    const scrollSpy = this.scrollSpys.find(spy => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find(link => {\n      return link.id === activeLinkId;\n    });\n\n    this.removeActiveLinks(scrollSpy);\n    this.setActiveLink(activeLink);\n  }\n\n  removeActiveState(scrollSpyId: string, activeLinkId: string) {\n    const scrollSpy = this.scrollSpys.find(spy => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find(link => {\n      return link.id === activeLinkId;\n    });\n\n    if (!activeLink) {\n      return;\n    }\n\n    activeLink.active = false;\n    activeLink.detectChanges();\n  }\n\n  setActiveLink(activeLink: ScrollSpyLinkDirective | any) {\n    activeLink.active = true;\n    activeLink.detectChanges();\n  }\n\n  removeActiveLinks(scrollSpy: ScrollSpy) {\n    scrollSpy.links.forEach(link => {\n      link.active = false;\n      link.detectChanges();\n    });\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  Input,\n  HostListener,\n  HostBinding,\n  ChangeDetectorRef,\n  Inject\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[mdbScrollSpyLink]'\n})\nexport class ScrollSpyLinkDirective implements OnInit {\n  section: HTMLElement;\n  private _id: string;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    @Inject(DOCUMENT) private document: any\n  ) {}\n\n  @Input('mdbScrollSpyLink')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  @HostBinding('class.active')\n  active = false;\n\n  @HostListener('click', [])\n  onClick() {\n    if (this.section) {\n      this.section.scrollIntoView();\n    }\n  }\n\n  detectChanges() {\n    this.cdRef.detectChanges();\n  }\n\n  assignSectionToId() {\n    this.section = this.document.documentElement.querySelector(`#${this.id}`);\n  }\n\n  ngOnInit() {\n    this.assignSectionToId();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ClockPickerComponent } from './timepicker.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [ClockPickerComponent],\n  exports: [ClockPickerComponent]\n})\nexport class TimePickerModule {\n}\n","import {\r\n    Component,\r\n    ViewChild,\r\n    Input,\r\n    ElementRef,\r\n    Renderer2,\r\n    OnInit,\r\n    AfterViewInit,\r\n    forwardRef,\r\n    Inject,\r\n    PLATFORM_ID,\r\n    AfterContentChecked,\r\n    HostListener } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nexport const TIME_PIRCKER_VALUE_ACCESSOT: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ClockPickerComponent),\r\n    multi: true\r\n};\r\n\r\n\r\n@Component({\r\n    selector: 'mdb-time-picker',\r\n    template: \"<div> <div class=\\\"md-form\\\"> <label class=\\\"active\\\">{{ label }}</label> <input [disabled]=\\\"disabled\\\" [tabindex]=\\\"tabIndex\\\" [placeholder]=\\\"placeholder\\\" [value]=\\\"endHours\\\" type=\\\"text\\\" class=\\\"form-control timepicker\\\" (click)=\\\"openBtnClicked()\\\" [(ngModel)]=\\\"endHours\\\"> </div> <div class=\\\"clockpicker picker\\\" [hidden]=\\\"!showClock\\\" [ngClass]=\\\"{'picker--opened': showClock, 'darktheme': darktheme}\\\"> <div class=\\\"picker__holder\\\"> <div class=\\\"picker__frame\\\"> <div class=\\\"picker__wrap\\\"> <div class=\\\"picker__box\\\"> <div class=\\\"picker__date-display\\\"> <div class=\\\"clockpicker-display\\\"> <div class=\\\"clockpicker-display-column\\\"> <span class=\\\"clockpicker-span-hours text-primary\\\" [ngClass]=\\\"{'text-primary': showHours}\\\" (click)=\\\"showHoursClock()\\\"> {{ selectedHours.h }}</span>:<span class=\\\"clockpicker-span-minutes\\\" [ngClass]=\\\"{'text-primary': !showHours}\\\" (click)=\\\"showMinutesClock()\\\">{{selectedHours.m }}</span> </div> <div class=\\\"clockpicker-display-column clockpicker-display-am-pm\\\" *ngIf=\\\"twelvehour\\\"> <div class=\\\"clockpicker-span-am-pm\\\">{{ selectedHours.ampm }}</div> </div> </div> </div> <div class=\\\"picker__calendar-container\\\"> <div class=\\\"clockpicker-plate\\\" #plate> <div class=\\\"clockpicker-canvas\\\"> <svg class=\\\"clockpicker-svg\\\" width=\\\"270\\\" height=\\\"270\\\" #svg> <g transform=\\\"translate(135,135)\\\" #g> <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"77.94228634059948\\\" y2=\\\"-45.00000000000001\\\" #hand></line> <circle class=\\\"clockpicker-canvas-fg\\\" r=\\\"5\\\" cx=\\\"95.26279441628824\\\" cy=\\\"-55.000000000000014\\\" #fg></circle> <circle class=\\\"clockpicker-canvas-bg\\\" r=\\\"20\\\" cx=\\\"95.26279441628824\\\" cy=\\\"-55.000000000000014\\\" #bg></circle> <circle class=\\\"clockpicker-canvas-bearing\\\" cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"2\\\" #bearing></circle> </g> </svg> </div> <div class=\\\"clockpicker-dial clockpicker-hours\\\" #hoursPlate [ngClass]=\\\"{'clockpicker-dial-out': !showHours}\\\" [ngStyle]=\\\"{'visibility': !showHours ? 'hidden' : 'visible'}\\\"> <div *ngFor=\\\"let tick of hoursTicks\\\" class=\\\"clockpicker-tick\\\" style=\\\"font-size: 140%;\\\" [ngStyle]=\\\"{'left': tick.left+'px', 'top': tick.top+'px'}\\\" id=\\\"{{ tick.hour }}\\\"> {{ tick.hour }} </div> </div> <div class=\\\"clockpicker-dial clockpicker-minutes\\\" #minutesPlate [ngClass]=\\\"{'clockpicker-dial-out': showHours}\\\" [ngStyle]=\\\"{'visibility': showHours ? 'hidden' : 'visible'}\\\"> <div *ngFor=\\\"let tick of minutesTicks\\\" class=\\\"clockpicker-tick\\\" style=\\\"font-size: 120%;\\\" [ngStyle]=\\\"{'left': tick.left+'px', 'top': tick.top+'px'}\\\"> {{ tick.min }} </div> </div> </div> <div class=\\\"clockpicker-am-pm-block\\\" *ngIf=\\\"twelvehour\\\"> <button type=\\\"button\\\" class=\\\"btn-floating btn-flat clockpicker-button am-button\\\" [ngClass]=\\\"{'active': selectedHours.ampm=='AM'}\\\" (click)=\\\"setAmPm('AM')\\\"> AM </button> <button type=\\\"button\\\" class=\\\"btn-floating btn-flat clockpicker-button pm-button\\\" [ngClass]=\\\"{'active': selectedHours.ampm=='PM'}\\\" (click)=\\\"setAmPm('PM')\\\"> PM </button> </div> </div> <div class=\\\"picker__footer\\\"> <button type=\\\"button\\\" *ngIf=\\\"buttonLabel\\\" class=\\\"btn-flat clockpicker-button\\\" (click)=\\\"closeBtnClicked()\\\"> {{buttonLabel}} </button> <button type=\\\"button\\\" *ngIf=\\\"!buttonLabel\\\" class=\\\"btn-flat clockpicker-button\\\" (click)=\\\"closeBtnClicked()\\\"> Done </button> </div> </div> </div> </div> </div> </div> </div>\",\r\n    providers: [TIME_PIRCKER_VALUE_ACCESSOT]\r\n})\r\n\r\nexport class ClockPickerComponent implements OnInit, AfterViewInit, ControlValueAccessor, AfterContentChecked {\r\n    @ViewChild('hoursPlate') public hoursPlate: ElementRef;\r\n    @ViewChild('minutesPlate') public minutesPlate: ElementRef;\r\n\r\n    @ViewChild('plate') public plate: ElementRef;\r\n    @ViewChild('svg') public svg: ElementRef;\r\n    @ViewChild('g') public g: ElementRef;\r\n    @ViewChild('hand') public hand: ElementRef;\r\n    @ViewChild('fg') public fg: ElementRef;\r\n    @ViewChild('bg') public bg: ElementRef;\r\n    @ViewChild('bearing') public bearing: ElementRef;\r\n\r\n    @Input('twelvehour') public twelvehour = false;\r\n    @Input('darktheme') public darktheme = false;\r\n    @Input('placeholder') public placeholder: String = '';\r\n    @Input('label') public label = '';\r\n    @Input('duration') public duration = 300;\r\n    @Input('showClock') public showClock = false;\r\n    @Input() public buttonLabel: string;\r\n    @Input() disabled = false;\r\n    @Input() tabIndex: any;\r\n\r\n    isMobile: any = null;\r\n    touchDevice = ('ontouchstart' in (document.documentElement as any));\r\n    showHours = false;\r\n\r\n    public elements = document.getElementsByClassName('clockpicker');\r\n    public elementNumber: any;\r\n\r\n    dialRadius = 135;\r\n    outerRadius = 110;\r\n    innerRadius = 80;\r\n    tickRadius = 20;\r\n    diameter = this.dialRadius * 2;\r\n    isBrowser: any = false;\r\n\r\n    hoursTicks: any = [];\r\n    minutesTicks: any = [];\r\n    selectedHours: any = { 'h': '12', 'm': '00', 'ampm': 'AM' };\r\n    endHours = '';\r\n\r\n\r\n    touchSupported: any = 'ontouchstart' in window;\r\n    mousedownEvent: any = 'mousedown' + (this.touchSupported ? ' touchstart' : '');\r\n    mousemoveEvent: any = 'mousemove' + (this.touchSupported ? ' touchmove' : '');\r\n    mouseupEvent: any = 'mouseup' + (this.touchSupported ? ' touchend' : '');\r\n\r\n    constructor(public elem: ElementRef, public renderer: Renderer2, @Inject(PLATFORM_ID) platformId: string) {\r\n        this.isBrowser = isPlatformBrowser(platformId);\r\n        renderer.listen(this.elem.nativeElement, 'click', (event: any) => {\r\n\r\n            if (this.showClock &&\r\n                event.target &&\r\n                this.elem.nativeElement !== event.target &&\r\n                !this.elem.nativeElement.contains(event.target)\r\n            ) {\r\n                this.showClock = false;\r\n            }\r\n            if (event.target.classList.contains('picker__holder')) {\r\n                this.showClock = false;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @HostListener('touchmove', ['$event']) ontouchmove(event: any) {\r\n        // Rotating Time Picker on mobile\r\n        if (event.target.parentElement.classList.contains('clockpicker-dial')) {\r\n            (this.elem.nativeElement.querySelectorAll('.clockpicker-tick') as any).forEach((element: any) => {\r\n                this.renderer.setStyle(element, 'background-color', 'rgba(0, 150, 136, 0');\r\n            });\r\n            this.mousedown(event);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.generateTick();\r\n        if (this.isBrowser) {\r\n            this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderer.listen(this.elem.nativeElement.querySelector('.clockpicker-plate'), 'mousedown', (event: any) => {\r\n            this.mousedown(event, false);\r\n        });\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        if (this.isBrowser) {\r\n            // Fix for visible date / time picker input when picker plate is visible.\r\n            try {\r\n                const openedPicker: any = document.querySelector('.picker--opened');\r\n                const allPickers: any = document.querySelectorAll('.picker');\r\n                allPickers.forEach((element: any) => {\r\n                    this.renderer.setStyle(element, 'z-index', '0');\r\n                });\r\n                this.renderer.setStyle(openedPicker, 'z-index', '1000');\r\n            } catch (error) { }\r\n        }\r\n    }\r\n\r\n    checkDraw() {\r\n        let value;\r\n        const isHours = this.showHours;\r\n        if (isHours) {\r\n            value = parseInt(this.selectedHours.h, 0);\r\n        } else {\r\n            value = parseInt(this.selectedHours.m, 0);\r\n        }\r\n\r\n\r\n        const unit = Math.PI / (isHours ? 6 : 30),\r\n            radian = value * unit,\r\n            radius = isHours && value > 0 && value < 13 ? this.innerRadius : this.outerRadius,\r\n            xd = Math.sin(radian) * radius,\r\n            yd = - Math.cos(radian) * radius;\r\n        this.setHand(xd, yd, false);\r\n\r\n    }\r\n\r\n    mousedown(e: any, space?: any) {\r\n        const offset = this.plate.nativeElement.getBoundingClientRect(),\r\n            isTouch = /^touch/.test(e.type),\r\n            x0 = offset.left + this.dialRadius,\r\n            y0 = offset.top + this.dialRadius,\r\n            dx = (isTouch ? e.touches[0] : e).clientX - x0,\r\n            dy = (isTouch ? e.touches[0] : e).clientY - y0,\r\n            z = Math.sqrt(dx * dx + dy * dy);\r\n        let moved = false;\r\n\r\n        if (space && (z < this.outerRadius - this.tickRadius || z > this.outerRadius + this.tickRadius)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n\r\n        if (this.showHours) {\r\n            this.setHand(dx, dy, true);\r\n        } else {\r\n            this.setHand(dx, dy, false);\r\n        }\r\n\r\n        const mousemoveEventMethod = (event: any) => {\r\n\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            const x = event.clientX - x0,\r\n                y = event.clientY - y0;\r\n            if (!moved && x === dx && y === dy) {\r\n                return;\r\n            }\r\n            moved = true;\r\n\r\n            this.setHand(x, y, false);\r\n        };\r\n\r\n        const mouseupEventMethod = (event: any) => {\r\n            document.removeEventListener(this.mousemoveEvent, mousemoveEventMethod);\r\n            e.preventDefault();\r\n            const x = event.clientX - x0,\r\n                y = event.clientX - y0;\r\n            if ((space || moved) && x === dx && y === dy) {\r\n                this.setHand(x, y, false);\r\n            }\r\n            this.showMinutesClock();\r\n            document.removeEventListener(this.mouseupEvent, mouseupEventMethod);\r\n        };\r\n        document.addEventListener(this.mousemoveEvent, mousemoveEventMethod);\r\n        document.addEventListener('mouseup', mouseupEventMethod);\r\n    }\r\n    hideKeyboard() {\r\n        // this set timeout needed for case when hideKeyborad\r\n        // is called inside of 'onfocus' event handler\r\n        try {\r\n            setTimeout(() => {\r\n                // creating temp field\r\n                // const field = document.createElement('input');\r\n                const field = this.renderer.createElement('input');\r\n                this.renderer.appendChild(this.elem.nativeElement, field);\r\n                const inputReference = this.elem.nativeElement.lastElementChild;\r\n                this.renderer.setAttribute(inputReference, 'type', 'text');\r\n                this.renderer.setAttribute(inputReference, 'type', 'text');\r\n                this.renderer.setStyle(inputReference, 'opacity', '0');\r\n                this.renderer.setStyle(inputReference, '-webkit-user-modify', 'read-write-plaintext-only');\r\n                // // hiding temp field from peoples eyes\r\n                // // -webkit-user-modify is nessesary for Android 4.x\r\n                // adding onfocus event handler for out temp field\r\n                field.onfocus = () => {\r\n                    // this timeout of 200ms is nessasary for Android 2.3.x\r\n                    setTimeout(() => {\r\n\r\n                        this.renderer.setStyle(field, 'display', 'none');\r\n                        setTimeout(() => {\r\n                            this.renderer.removeChild(this.elem.nativeElement, field);\r\n                            document.body.focus();\r\n                        }, 0);\r\n\r\n                    }, 0);\r\n                };\r\n                // focusing it\r\n                field.focus();\r\n\r\n            }, 0);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    openBtnClicked(): void {\r\n        this.showClock = true;\r\n        this.showHours = true;\r\n        this.checkDraw();\r\n        if (this.isMobile) {\r\n            this.hideKeyboard();\r\n        }\r\n\r\n    }\r\n\r\n    closeBtnClicked() {\r\n        const h = this.selectedHours.h;\r\n        const m = this.selectedHours.m;\r\n        const ampm = this.selectedHours.ampm;\r\n\r\n        if (this.twelvehour) {\r\n            this.endHours = h + ':' + m + ampm;\r\n        } else {\r\n            this.endHours = h + ':' + m;\r\n        }\r\n        this.onChangeCb(this.endHours);\r\n        this.onTouchedCb();\r\n        this.showClock = false;\r\n    }\r\n\r\n    clearTimeInput() {\r\n        this.selectedHours = { 'h': '12', 'm': '00', 'ampm': 'AM' };\r\n        this.endHours = '';\r\n    }\r\n\r\n    setHour(hour: String) {\r\n        this.selectedHours.h = hour;\r\n    }\r\n\r\n    setMinute(min: String) {\r\n        // event.stopPropagation();\r\n        this.selectedHours.m = min;\r\n    }\r\n\r\n    setAmPm(ampm: String) {\r\n        // event.stopPropagation();\r\n        this.selectedHours.ampm = ampm;\r\n    }\r\n\r\n    showHoursClock() {\r\n        this.showHours = true;\r\n        this.checkDraw();\r\n    }\r\n\r\n    showMinutesClock() {\r\n        this.showHours = false;\r\n        this.checkDraw();\r\n    }\r\n\r\n\r\n    generateTick() {\r\n        if (this.twelvehour) {\r\n            for (let i = 1; i < 13; i++) {\r\n                const radian = i / 6 * Math.PI;\r\n                const radius = this.outerRadius;\r\n\r\n                const tick = {\r\n                    'hour': i,\r\n                    'left': this.dialRadius + Math.sin(radian) * radius - this.tickRadius,\r\n                    'top': this.dialRadius - Math.cos(radian) * radius - this.tickRadius,\r\n                };\r\n                this.hoursTicks.push(tick);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < 24; i++) {\r\n                const radian = i / 6 * Math.PI;\r\n                const inner = i > 0 && i < 13;\r\n                const radius = inner ? this.innerRadius : this.outerRadius;\r\n                let h;\r\n\r\n                if (i === 0) {\r\n                    h = '0' + i.toString();\r\n                } else {\r\n                    h = i;\r\n                }\r\n\r\n                const tick = {\r\n                    'hour': h,\r\n                    'left': this.dialRadius + Math.sin(radian) * radius - this.tickRadius,\r\n                    'top': this.dialRadius - Math.cos(radian) * radius - this.tickRadius,\r\n                };\r\n                this.hoursTicks.push(tick);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 60; i += 5) {\r\n            const radian = i / 30 * Math.PI;\r\n            let min = i.toString();\r\n            if (i < 10) {\r\n                min = '0' + i.toString();\r\n            }\r\n            const tick = {\r\n                'min': min,\r\n                'left': this.dialRadius + Math.sin(radian) * this.outerRadius - this.tickRadius,\r\n                'top': this.dialRadius - Math.cos(radian) * this.outerRadius - this.tickRadius,\r\n            };\r\n            this.minutesTicks.push(tick);\r\n        }\r\n\r\n    }\r\n\r\n    setHand(x: any, y: any, roundBy5: any) {\r\n        let radian = Math.atan2(x, - y);\r\n        const isHours = this.showHours;\r\n        const unit = Math.PI / (isHours || roundBy5 ? 6 : 30);\r\n        const z = Math.sqrt(x * x + y * y);\r\n        const inner = isHours && z < (this.outerRadius + this.innerRadius) / 2;\r\n        let radius = inner ? this.innerRadius : this.outerRadius;\r\n        let value;\r\n\r\n\r\n        if (this.showHours) {\r\n            value = parseInt(this.selectedHours.h, 0);\r\n        } else {\r\n            value = parseInt(this.selectedHours.m, 0);\r\n        }\r\n\r\n        if (this.twelvehour) {\r\n            radius = this.outerRadius;\r\n        }\r\n\r\n        if (radian < 0) {\r\n            radian = Math.PI * 2 + radian;\r\n        }\r\n\r\n        value = Math.round(radian / unit);\r\n        radian = value * unit;\r\n\r\n        if (this.twelvehour) {\r\n            if (isHours) {\r\n                if (value === 0) {\r\n                    value = 12;\r\n                }\r\n            } else {\r\n                if (roundBy5) {\r\n                    value *= 5;\r\n                }\r\n                if (value === 60) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        } else {\r\n            if (isHours) {\r\n                value = !inner ? value + 12 : value;\r\n                value = value === 24 ? 0 : value;\r\n                value = (inner && value === 0) ? 12 : value;\r\n                value = (!inner && value === 12) ? 0 : value;\r\n            } else {\r\n                if (roundBy5) {\r\n                    value *= 5;\r\n                }\r\n                if (value === 60) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isHours) {\r\n            this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg');\r\n        } else {\r\n            if (value % 5 === 0) {\r\n                this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg');\r\n            } else {\r\n                this.fg.nativeElement.setAttribute('class', 'clockpicker-canvas-fg active');\r\n            }\r\n        }\r\n\r\n        const cx1 = Math.sin(radian) * (radius - this.tickRadius),\r\n            cy1 = - Math.cos(radian) * (radius - this.tickRadius),\r\n            cx2 = Math.sin(radian) * radius,\r\n            cy2 = - Math.cos(radian) * radius;\r\n\r\n        this.hand.nativeElement.setAttribute('x2', cx1);\r\n        this.hand.nativeElement.setAttribute('y2', cy1);\r\n        this.bg.nativeElement.setAttribute('cx', cx2);\r\n        this.bg.nativeElement.setAttribute('cy', cy2);\r\n        this.fg.nativeElement.setAttribute('cx', cx2);\r\n        this.fg.nativeElement.setAttribute('cy', cy2);\r\n\r\n        if (this.showHours) {\r\n            if (value < 10) {\r\n                this.setHour('0' + value.toString());\r\n            } else {\r\n                this.setHour(value.toString());\r\n            }\r\n        } else {\r\n            if (value < 10) {\r\n                this.setMinute('0' + value.toString());\r\n            } else {\r\n                this.setMinute(value.toString());\r\n            }\r\n        }\r\n    }\r\n\r\n    offset(obj: any) {\r\n        let left = 0,\r\n            top = 0;\r\n\r\n        if (obj.offsetParent) {\r\n            do {\r\n                left += obj.offsetLeft;\r\n                top += obj.offsetTop;\r\n            } while (obj = obj.offsetParent);\r\n        }\r\n        return { left, top };\r\n    }\r\n\r\n\r\n\r\n    onChangeCb: (_: any) => void = () => { };\r\n    onTouchedCb: () => void = () => { };\r\n\r\n    writeValue(value: any): void {\r\n        this.endHours = value;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeCb = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchedCb = fn;\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {FormsModule} from '@angular/forms';\nimport {MaterialChipsComponent} from './chips.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MaterialChipsComponent],\n  exports: [MaterialChipsComponent]\n})\nexport class MaterialChipsModule {\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MaterialChipsComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'mdb-material-chips',\n  template: \"<div *ngIf=\\\"values && values.length\\\" class=\\\"md-chip-list\\\"  [ngClass]=\\\"focused\\\"> <span *ngFor=\\\"let value of values\\\" class=\\\"md-chip\\\" selected >          {{value}} <i class=\\\"close fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeValue(value)\\\" ></i> </span> <span> <input  [(ngModel)]=\\\"labelToAdd\\\"  (keyup.enter)=\\\"addValue(box.value, $event)\\\" (focus)=\\\"onFocus()\\\"  (focusout)=\\\"focusOutFunction()\\\"   #box /> </span> </div> <div *ngIf=\\\"!values || !values.length\\\"> <input class=\\\"md-chips-input\\\" placeholder=\\\"{{ placeholder }}\\\" #tbox  (keyup.enter)=\\\"addValue(tbox.value, $event)\\\"/> </div>\",\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\n\nexport class MaterialChipsComponent {\n\n  @Input('placeholder') public placeholder = '';\n\n  addAreaDisplayed: boolean;\n  isTagsFocused = false;\n  values: string[];\n  labelToAdd: string;\n  focused: string;\n  selected: string;\n  noop: any;\n\n  @Output() tagsfocusedChange = new EventEmitter();\n  @Output() labelsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Input()\n  get tagsfocused() {\n    return this.isTagsFocused;\n  }\n\n  private onTouchedCallback: () => void = this.noop;\n  private onChangeCallback: (_: any) => void = this.noop;\n  registerOnChange(fn: any) { this.onChangeCallback = fn; }\n  registerOnTouched(fn: any) { this.onTouchedCallback = fn; }\n  constructor() {\n    this.onTouchedCallback = this.onTouchedCallback === undefined ? this.noop : this.onTouchedCallback;\n    this.onChangeCallback = this.onChangeCallback === undefined ? this.noop : this.onChangeCallback;\n  }\n\n  removeValue(value: string) {\n    const index = this.values.indexOf(value, 0);\n    if (index !== undefined) {\n      this.values.splice(index, 1);\n      this.labelsChange.emit(this.values);\n    }\n  }\n\n  addValue(value: string, event: any) {\n    event.preventDefault();\n    if (!value || value.trim() === '') { return; }\n    this.values.push(value);\n    this.labelsChange.emit(this.values);\n    this.labelToAdd = '';\n  }\n\n  writeValue(value: string[]) {\n    if (value !== this.values) {\n      this.values = value;\n    }\n  }\n\n  onFocus() {\n    this.focused = 'md-focused';\n    this.isTagsFocused = true;\n    this.tagsfocusedChange.emit(this.isTagsFocused);\n  }\n  focusOutFunction() {\n    this.focused = '';\n    this.isTagsFocused = false;\n    this.tagsfocusedChange.emit(this.isTagsFocused);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NgTranscludeDirective } from './transclude.directive';\nimport { TabHeadingDirective } from './tab-heading.directive';\nimport { TabDirective } from './tab.directive';\nimport { TabsetComponent } from './tabset.component';\nimport { TabsetConfig } from './tabset.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgTranscludeDirective, TabDirective, TabsetComponent, TabHeadingDirective],\n  exports: [TabDirective, TabsetComponent, TabHeadingDirective, NgTranscludeDirective]\n})\nexport class TabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TabsModule,\n      providers: [TabsetConfig]\n    };\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[mdbNgTransclude]'\n})\nexport class NgTranscludeDirective {\n  public viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  public set mdbNgTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  public get mdbNgTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  public constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\n\n/** Should be used to mark <template> element as a template for tab heading */\n@Directive({selector: '[mdbTabHeading]'})\nexport class TabHeadingDirective {\n  public templateRef: TemplateRef<any>;\n\n  public constructor(templateRef: TemplateRef<any>, tab: TabDirective) {\n    tab.headingRef = templateRef;\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  ElementRef,\n  OnInit,\n  Inject,\n  PLATFORM_ID,\n  OnDestroy } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({selector: 'mdb-tab, [mdbTab]'})\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() public heading: string;\n  /** if true tab can not be activated */\n  @Input() public disabled = false;\n  /** if true tab can be removable, additional button will appear */\n  @Input() public removable: boolean;\n  /** if set, will be added to the tab's class atribute */\n  @Input() public customClass: string;\n\n  /** tab active state toggle */\n  @HostBinding('class.active')\n  @Input()\n  public get active(): boolean {\n    return this._active;\n  }\n\n  public set active(active: boolean) {\n\n    if (this.disabled && active || !active) {\n      if (!active) {\n        this.removeClass(this.el.nativeElement, 'show');\n        setTimeout(() => {\n          this._active = active;\n          this.deselect.emit(this);\n        }, 0);\n      }\n      return;\n    }\n\n    setTimeout(() => {\n      this._active = active;\n      this.classAdd(this.el.nativeElement, 'show');\n    }, 0);\n    this.select.emit(this);\n\n    this.tabset.tabs.forEach((mdbTab: TabDirective) => {\n      if (mdbTab !== this) {\n        mdbTab.active = false;\n      }\n    });\n\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() public select: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() public deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed */\n  @Output() public removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.tab-pane') public addClass = true;\n  @HostBinding('class.fade') public test = true;\n\n\n  public headingRef: TemplateRef<any>;\n  public tabset: TabsetComponent;\n  // public el: ElementRef = null;\n  public el: ElementRef | any = null;\n  thus: this;\n  protected _active: boolean;\n\n\n  isBrowser: any = null;\n  public constructor(@Inject(PLATFORM_ID) platformId: string, tabset: TabsetComponent, el: ElementRef) {\n    this.isBrowser = isPlatformBrowser(platformId);\n\n    this.el = el;\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n\n  }\n\n  public ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  protected hasClass(el: any, className: any) {\n    if (el.classList) {\n      return el.classList.contains(className);\n    } else {\n      return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n    }\n  }\n\n  protected classAdd(el: any, className: any) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else if (!this.hasClass(el, className)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  protected removeClass(el: any, className: any) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else if (this.hasClass(el, className)) {\n      const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n      el.className = el.className.replace(reg, ' ');\n    }\n  }\n\n  ngOnDestroy() {\n    this.tabset.removeTab(this);\n  }\n\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  ViewChildren,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Inject,\n  PLATFORM_ID,\n  AfterViewInit\n} from '@angular/core';\n\nimport { TabDirective } from './tab.directive';\nimport { TabsetConfig } from './tabset.config';\n\nimport { WavesDirective } from './../../free/waves/waves-effect.directive';\nimport { isPlatformBrowser } from '@angular/common';\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n@Component({\n  selector: 'mdb-tabset',\n  template: \"<div class=\\\"container-fluid\\\"> <div class=\\\"row\\\"> <div class=\\\"{{ listGetClass }}\\\"> <ul class=\\\"nav {{ buttonClass }}\\\" [ngClass]=\\\"classMap\\\" (click)=\\\"$event.preventDefault()\\\"> <li *ngFor=\\\"let tabz of tabs;let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\" [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (click)=\\\"click($event, i)\\\"> <a #tabEl href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" [ngClass]=\\\"{'waves-light': !disableWaves}\\\" [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"> <span [mdbNgTransclude]=\\\"tabz.headingRef\\\" [innerHTML]=\\\"tabz.heading\\\"></span> <span *ngIf=\\\"tabz.removable\\\"> <span (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"fa fa-remove ml-2\\\"> </span> </span> </a> </li> </ul> </div> <div class=\\\"{{ tabsGetClass }}\\\"> <div class=\\\"tab-content {{ contentClass }}\\\"> <ng-content></ng-content> </div> </div> </div> </div> \",\n  providers: [WavesDirective]\n})\n\nexport class TabsetComponent implements OnDestroy, OnInit, AfterViewInit {\n  public tabs: TabDirective[] = [];\n  public classMap: any = {};\n\n  protected isDestroyed: boolean;\n  protected _vertical: boolean;\n  protected _justified: boolean;\n  protected _type: string;\n\n  public listGetClass: String;\n  public tabsGetClass: String;\n\n  isBrowser: any = null;\n  @HostBinding('class.tab-container') public clazz = true;\n\n  @Input() disableWaves = false;\n  @Input() buttonClass: String;\n  @Input() contentClass: String;\n  /** if true tabs will be placed vertically */\n\n  @ViewChildren('tabEl', { read: ElementRef }) tabEl: any;\n\n  @Output()\n  showBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  shownBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  hideBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  hiddenBsTab: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  getActiveTab: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  public get vertical(): boolean {\n    return this._vertical;\n  }\n  public set vertical(value: boolean) {\n    this._vertical = value;\n    this.setClassMap();\n  }\n  public setActiveTab(index: number): void {\n    this.tabs[index - 1].active = true;\n    this.getActiveTab.emit({\n      el: this.tabs[index - 1],\n      activeTabIndex: index - 1\n    });\n  }\n  /** if true tabs fill the container and have a consistent width */\n  @Input()\n  public get justified(): boolean {\n    return this._justified;\n  }\n  public set justified(value: boolean) {\n    this._justified = value;\n    this.setClassMap();\n  }\n\n  /** navigation context class: 'tabs' or 'pills' */\n  @Input()\n  public get type(): string {\n    return this._type;\n  }\n  public set type(value: string) {\n    this._type = value;\n    this.setClassMap();\n  }\n\n  public constructor(@Inject(PLATFORM_ID) platformId: string, config: TabsetConfig, public ripple: WavesDirective) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    Object.assign(this, config);\n  }\n\n  public click(event: any, index: any) {\n    const prev = this.tabEl.toArray()[this.getActive()];\n    const clicked = this.tabEl.toArray()[index];\n\n    this.hideBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n    this.showBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n\n    this.setActiveTab(index + 1);\n\n    if (this.contentClass !== 'vertical' && !this.disableWaves) {\n      this.ripple.el = clicked;\n      this.ripple.click(event);\n    }\n\n    this.hiddenBsTab.emit({\n      target: clicked,\n      relatedTarget: prev\n    });\n    this.shownBsTab.emit({\n      target: clicked,\n      relatedTarget: prev,\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.isDestroyed = true;\n  }\n\n  // public getActive() {\n  public getActive(): any {\n    const tabs = this.tabs.map((object, index) => {\n      return {\n        index: index,\n        object: object\n      };\n    });\n\n    for (const tab of tabs) {\n      if (tab.object.active) {\n        return tab.index;\n      }\n    }\n  }\n\n  public addTab(tab: TabDirective): void {\n    this.tabs.push(tab);\n    tab.active = this.tabs.length === 1 && tab.active !== false;\n  }\n\n  public removeTab(tab: TabDirective): void {\n    const index = this.tabs.indexOf(tab);\n    if (index === -1 || this.isDestroyed) {\n      return;\n    }\n    // Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && this.hasAvailableTabs(index)) {\n      const newActiveIndex = this.getClosestTabIndex(index);\n      this.tabs[newActiveIndex].active = true;\n    }\n\n    tab.removed.emit(tab);\n    this.tabs.splice(index, 1);\n  }\n\n  protected getClosestTabIndex(index: number): number {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return -1;\n    }\n\n    for (let step = 1; step <= tabsLength; step += 1) {\n      const prevIndex = index - step;\n      const nextIndex = index + step;\n      if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n        return prevIndex;\n      }\n      if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n        return nextIndex;\n      }\n    }\n    return -1;\n  }\n\n  protected hasAvailableTabs(index: number): boolean {\n    const tabsLength = this.tabs.length;\n    if (!tabsLength) {\n      return false;\n    }\n\n    for (let i = 0; i < tabsLength; i += 1) {\n      if (!this.tabs[i].disabled && i !== index) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected setClassMap(): void {\n    this.classMap = {\n      'nav-stacked': this.vertical,\n      'nav-justified': this.justified,\n      // [`nav-${this.type}`]: true\n    };\n  }\n\n  public listGet() {\n    if (this.vertical) {\n      this.listGetClass = 'col-md-3';\n    } else {\n      this.listGetClass = 'col-md-12';\n    }\n  }\n\n  public tabsGet() {\n    if (this.vertical) {\n      this.tabsGetClass = 'col-md-9';\n    } else {\n      this.tabsGetClass = 'col-md-12';\n    }\n  }\n\n  public getActiveElement(): any {\n    const tabs = this.tabs.map((object, index) => {\n      return {\n        index: index,\n        object: object\n      };\n    });\n\n    for (const tab of tabs) {\n      if (tab.object.active) {\n        return {\n          el: tab.object,\n          activeTabIndex: tab.index\n        };\n      }\n    }\n  }\n\n  public showActiveIndex() {\n    setTimeout(() => {\n      const activeElement = this.getActiveElement();\n      this.getActiveTab.emit(activeElement);\n    }, 0);\n  }\n\n  private getFirstActiveTabIndex() {\n    const activeTabs = this.tabs.filter((tab) => {\n      return !tab.disabled;\n    });\n    return this.tabs.indexOf(activeTabs[0]);\n  }\n\n  private removeActiveTabs() {\n    this.tabs.forEach((tab) => {\n      tab.active = false;\n    });\n  }\n\n  private initActiveTab() {\n    const index = this.getFirstActiveTabIndex();\n    if (index === -1) {\n      this.removeActiveTabs();\n      return;\n    }\n    this.setActiveTab(index + 1);\n  }\n\n  ngOnInit() {\n    this.listGet();\n    this.tabsGet();\n    this.showActiveIndex();\n  }\n\n  ngAfterViewInit() {\n    this.initActiveTab();\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[mdbWavesEffect]'\n})\nexport class WavesDirective {\n  el: ElementRef;\n\n  constructor(el: ElementRef) {\n    this.el = el;\n  }\n\n  @HostListener('click', ['$event'])\n  public click(event: any) {\n    // event.stopPropagation();\n\n    if (!this.el.nativeElement.classList.contains('disabled')) {\n\n      const button = this.el.nativeElement;\n      if (!button.classList.contains('waves-effect')) {\n        button.className += ' waves-effect';\n      }\n\n      const xPos = event.clientX - button.getBoundingClientRect().left;\n      const yPos = event.clientY - button.getBoundingClientRect().top;\n\n\n      const tmp = document.createElement('div');\n      tmp.className += 'waves-ripple waves-rippling';\n      const ripple = button.appendChild(tmp);\n\n      const top = yPos + 'px';\n      const left = xPos + 'px';\n\n      tmp.style.top = top;\n      tmp.style.left = left;\n\n      const scale = 'scale(' + ((button.clientWidth / 100) * 3) + ') translate(0,0)';\n\n      tmp.style.webkitTransform = scale;\n      tmp.style.transform = scale;\n      tmp.style.opacity = '1';\n\n      const duration = 750;\n\n      tmp.style.webkitTransitionDuration = duration + 'ms';\n      tmp.style.transitionDuration = duration + 'ms';\n\n\n      this.removeRipple(button, ripple);\n    }\n  }\n\n  removeRipple(button: any, ripple: any) {\n    ripple.classList.remove('waves-rippling');\n\n    setTimeout(() => {\n      ripple.style.opacity = '0';\n\n      setTimeout(() => {\n        button.removeChild(ripple);\n      }, 750);\n    }, 200);\n\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TabsetConfig {\n  /** provides default navigation context class: 'tabs' or 'pills' */\n  public type = 'tabs';\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule  } from '@angular/common';\n\nimport { MdbStickyDirective } from './sticky-content.directive';\n\nexport { MdbStickyDirective };\n\n@NgModule({\n  imports: [ CommonModule, FormsModule ],\n  declarations: [MdbStickyDirective],\n  exports: [ MdbStickyDirective ]\n})\n\nexport class StickyContentModule {}\n","'use strict';\n\nimport { Directive, ElementRef, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { computedStyle } from './computed.style';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n@Directive({\n    selector: '[mdbSticky]'\n})\n\nexport class MdbStickyDirective implements OnDestroy, AfterViewInit {\n    @Input() stickyAfter: string;  // css selector to be sticky after\n    isBrowser = false;\n\n    //   el: HTMLElement;\n    el: HTMLElement | any;\n    //   parentEl: HTMLElement;\n    parentEl: HTMLElement | any;\n    // fillerEl: HTMLElement;\n    fillerEl: HTMLElement | any;\n    stickyOffsetTop = 0;\n\n    diff: any;\n    original: any;\n\n    constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n        this.el = this.el = el.nativeElement;\n        this.parentEl = this.el.parentElement;\n        this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n    ngAfterViewInit(): void {\n        this.el.style.boxSizing = 'border-box';\n\n        if (this.stickyAfter) {\n            const cetStickyAfterEl = document.querySelector(this.stickyAfter);\n            if (cetStickyAfterEl) {\n                this.stickyOffsetTop = cetStickyAfterEl.getBoundingClientRect().bottom;\n            }\n        }\n\n        // set the parent relatively positioned\n        const allowedPositions = ['absolute', 'fixed', 'relative'];\n        const parentElPosition = computedStyle(this.parentEl, 'position');\n        if (allowedPositions.indexOf(parentElPosition) === -1) { // inherit, initial, unset\n            this.parentEl.style.position = 'relative';\n        }\n\n        this.diff = {\n            top: this.el.offsetTop - this.parentEl.offsetTop,\n            left: this.el.offsetLeft - this.parentEl.offsetLeft\n        };\n\n        if (this.isBrowser) {\n            const elRect = this.el.getBoundingClientRect();\n            this.el.getBoundingClientRect();\n            this.original = {\n                boundingClientRect: elRect,\n                position: computedStyle(this.el, 'position'),\n                float: computedStyle(this.el, 'float'),\n                top: computedStyle(this.el, 'top'),\n                bottom: computedStyle(this.el, 'bottom'),\n                left: computedStyle(this.el, 'left'),\n                width: computedStyle(this.el, 'width'),\n                offsetTop: this.el.offsetTop,\n                offsetLeft: this.el.offsetLeft,\n                marginTop: parseInt(computedStyle(this.el, 'marginTop'), 10),\n                marginBottom: parseInt(computedStyle(this.el, 'marginBottom'), 10),\n                marginLeft: parseInt(computedStyle(this.el, 'marginLeft'), 10),\n                marginRight: parseInt(computedStyle(this.el, 'marginLeft'), 10)\n            };\n        }\n\n\n        this.attach();\n    }\n\n    ngOnDestroy(): void {\n        this.detach();\n    }\n\n    attach(): void {\n        window.addEventListener('scroll', this.scrollHandler);\n        window.addEventListener('resize', this.scrollHandler);\n    }\n\n    detach(): void {\n        window.removeEventListener('scroll', this.scrollHandler);\n        window.removeEventListener('resize', this.scrollHandler);\n    }\n\n    scrollHandler = () => {\n        // let elRect: ClientRect = this.el.getBoundingClientRect();\n        const parentRect: ClientRect = this.el.parentElement.getBoundingClientRect();\n        const bodyRect: ClientRect = document.body.getBoundingClientRect();\n        let dynProps;\n\n        if (this.original.float === 'right') {\n            const right = bodyRect.right - parentRect.right + this.original.marginRight;\n            dynProps = { right: right + 'px' };\n        } else if (this.original.float === 'left') {\n            const left = parentRect.left - bodyRect.left + this.original.marginLeft;\n            dynProps = { left: left + 'px' };\n        } else {\n            // console.log('parentRect..............', parentRect.width);\n            dynProps = { width: parentRect.width + 'px' };\n        }\n        // console.log('dynProps', dynProps);\n\n        if (this.original.marginTop + this.original.marginBottom +\n            this.original.boundingClientRect.height + this.stickyOffsetTop >= parentRect.bottom) {\n            /**\n            * stikcy element reached to the bottom of the container\n            */\n            // console.log('case 1 (absolute)', parentRect.bottom, this.original.marginBottom);\n            const floatAdjustment =\n                this.original.float === 'right' ? { right: 0 } :\n                    this.original.float === 'left' ? { left: 0 } : {};\n            Object.assign(this.el.style, {\n                position: 'absolute',\n                float: 'none',\n                top: 'inherit',\n                bottom: 0\n            }, dynProps, floatAdjustment);\n        } else if (parentRect.top * -1 + this.original.marginTop + this.stickyOffsetTop > this.original.offsetTop) {\n            /**\n            * stikcy element is in the middle of container\n            */\n            // console.log('case 2 (fixed)', parentRect.top * -1, this.original.marginTop, this.original.offsetTop);\n\n            // if not floating, add an empty filler element, since the original elements becames 'fixed'\n            if (this.original.float !== 'left' && this.original.float !== 'right' && !this.fillerEl) {\n                this.fillerEl = document.createElement('div');\n                this.fillerEl.style.height = this.el.offsetHeight + 'px';\n                this.parentEl.insertBefore(this.fillerEl, this.el);\n            }\n\n            Object.assign(this.el.style, {\n                position: 'fixed', // fixed is a lot smoother than absolute\n                float: 'none',\n                top: this.stickyOffsetTop + 'px',\n                bottom: 'inherit'\n            }, dynProps);\n        } else {\n            /**\n            * stikcy element is in the original position\n            */\n            // console.log('case 3 (original)');\n            if (this.fillerEl) {\n                this.parentEl.removeChild(this.fillerEl); // IE11 does not work with el.remove()\n                this.fillerEl = undefined;\n            }\n            Object.assign(this.el.style, {\n                position: this.original.position,\n                float: this.original.float,\n                top: this.original.top,\n                bottom: this.original.bottom,\n                width: this.original.width,\n                left: this.original.left\n            }, dynProps);\n        }\n    }\n}\n","/**\n * returns coumputed style of given element\n\n */\n// export function computedStyle(element: string | HTMLElement, styleProp: string): string {\n  export function computedStyle(element: string | HTMLElement, styleProp: string): string | any {\n  let el: any;\n  el =  (typeof element === 'string') ? (<HTMLElement>document.querySelector(<string>element)) : element;\n\n  let value: any;\n  const defaultView: any = (el.ownerDocument || document).defaultView;\n\n  // W3C standard way:\n  if (defaultView && defaultView.getComputedStyle) {\n    // sanitize property name to css notation\n    // (hypen separated words eg. font-Size)\n    styleProp = styleProp.replace(/([A-Z])/g, '-$1').toLowerCase();\n    return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n  } else if (el['currentStyle']) { // IE\n    // sanitize property name to camelCase\n    styleProp = styleProp.replace(/\\-(\\w)/g, function( letter) {\n      return letter.toUpperCase();\n    });\n    value = el['currentStyle'][styleProp];\n    // convert other units to pixels on IE\n    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n      return (function(val: any) {\n        const oldLeft = el.style.left, oldRsLeft = el['runtimeStyle'].left;\n        el['runtimeStyle'].left = el['currentStyle'].left;\n        el.style.left = val || 0;\n        val = el.style['pixelLeft'] + 'px';\n        el.style.left = oldLeft;\n        el['runtimeStyle'].left = oldRsLeft;\n        return val;\n      })(value);\n    }\n    return value;\n  }\n}\n","/**\n* Created by sebastianfuss on 03.09.16.\n*/\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {PageScrollService} from './mdb-page-scroll.service';\nimport {PageScrollDirective} from './mdb-page-scroll.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PageScrollDirective],\n  exports: [PageScrollDirective]\n})\nexport class SmoothscrollModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n        ngModule: SmoothscrollModule,\n        providers: [\n            {provide: PageScrollService, useClass: PageScrollService}\n        ]\n    };\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  Inject,\n  Optional,\n  OnChanges,\n  HostListener\n} from '@angular/core';\nimport {\n  Router,\n  NavigationEnd,\n  NavigationError,\n  NavigationCancel,\n  UrlTree\n} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\n\nimport {Subscription} from 'rxjs';\n\nimport {PageScrollService} from './mdb-page-scroll.service';\nimport {PageScrollInstance} from './mdb-page-scroll.instance';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\nimport {EasingLogic} from './mdb-page-scroll.config';\n\n@Directive({\n  selector: '[mdbPageScroll]'\n})\nexport class PageScrollDirective implements OnChanges, OnDestroy {\n\n  @Input()\n  public routerLink: any;\n\n  @Input()\n  public href: string;\n\n  @Input()\n  // public pageScrollHorizontal: boolean = null;\n  public pageScrollHorizontal: boolean | any = null;\n\n  @Input()\n  // public pageScrollOffset: number = null;\n  public pageScrollOffset: number | any = null;\n\n  @Input()\n  // public pageScrollDuration: number = null;\n  public pageScrollDuration: number | any = null;\n\n  @Input()\n  // public pageScrollSpeed: number = null;\n  public pageScrollSpeed: number | any = null;\n\n  @Input()\n  // public pageScrollEasing: EasingLogic = null;\n  public pageScrollEasing: EasingLogic | any = null;\n\n  @Input()\n  public pageScrollInterruptible: boolean;\n\n  @Input()\n  public pageScrollAdjustHash = false;\n\n  @Input()\n  // public pageScroll: string = null;\n  public pageScroll: string | any = null;\n\n  @Output()\n  pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  // private pageScrollInstance: PageScrollInstance;\n  private pageScrollInstance: PageScrollInstance | any;\n  private document: Document;\n\n  constructor(private pageScrollService: PageScrollService, @Optional() private router: Router, @Inject(DOCUMENT) document: any) {\n    this.document = <Document> document;\n  }\n\n  ngOnChanges(): void {\n    // Some inputs changed, reset the pageScrollInstance\n    this.pageScrollInstance = undefined;\n  }\n\n  ngOnDestroy(): void {\n    if (this.pageScrollInstance) {\n        this.pageScrollService.stop(this.pageScrollInstance);\n    }\n    return undefined;\n  }\n\n  // private generatePageScrollInstance(): PageScrollInstance {\n    private generatePageScrollInstance(): PageScrollInstance | any {\n    if (Util.isUndefinedOrNull(this.pageScrollInstance)) {\n      this.pageScrollInstance = PageScrollInstance.newInstance({\n          document: this.document,\n          scrollTarget: this.href,\n          scrollingViews: null,\n          namespace: this.pageScroll,\n          verticalScrolling: !this.pageScrollHorizontal,\n          pageScrollOffset: this.pageScrollOffset,\n          pageScrollInterruptible: this.pageScrollInterruptible,\n          pageScrollEasingLogic: this.pageScrollEasing,\n          pageScrollDuration: this.pageScrollDuration,\n          pageScrollSpeed: this.pageScrollSpeed,\n          pageScrollFinishListener: this.pageScrollFinish\n      });\n    }\n    return this.pageScrollInstance;\n  }\n\n  private pushRouterState() {\n    if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.scrollTarget === 'string'\n        && this.pageScrollInstance.scrollTarget.substr(0, 1) === '#') {\n        // \"Navigate\" to the current route again and this time set the fragment/hash\n        this.router.navigate([], {\n          fragment: <string>this.pageScrollInstance.scrollTarget.substr(1),\n          preserveQueryParams: true\n        });\n    }\n  }\n\n  private scroll(): void {\n    const pageScrollInstance = this.generatePageScrollInstance();\n    this.pushRouterState();\n    this.pageScrollService.start(pageScrollInstance);\n  }\n\n  @HostListener('click') public handleClick(): boolean {\n    if (this.routerLink && this.router !== null && this.router !== undefined) {\n        let urlTree: UrlTree;\n        if (typeof this.routerLink === 'string') {\n            urlTree = this.router.parseUrl(this.routerLink);\n        } else {\n            urlTree = this.router.createUrlTree(this.routerLink);\n        }\n        if (!this.router.isActive(urlTree, true)) {\n            // We need to navigate their first.\n            // Navigation is handled by the routerLink directive\n            // so we only need to listen for route change\n            const subscription: Subscription = <Subscription>this.router.events.subscribe((routerEvent) => {\n                if (routerEvent instanceof NavigationEnd) {\n                    subscription.unsubscribe();\n                    this.scroll();\n                } else if (routerEvent instanceof NavigationError || routerEvent instanceof NavigationCancel) {\n                    subscription.unsubscribe();\n                }\n            });\n            return false; // to preventDefault()\n        }\n    }\n    this.scroll();\n    return false; // to preventDefault()\n  }\n\n}\n","/**\n* Created by sebastianfuss on 29.08.16.\n*/\n\nimport {EventEmitter} from '@angular/core';\n\nimport {EasingLogic, PageScrollConfig, PageScrollTarget, PageScrollingViews} from './mdb-page-scroll.config';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\n\n/**\n* An Interface specifying the possible options to be passed into the newInstance() factory method\n*/\n\nexport interface PageScrollOptions {\n  /**\n   * The document object of the current app\n   */\n  document: Document;\n\n  /**\n   * A specification of the DOM element to scroll to. Either a string referring to an\n   * object id (`#target`) or a HTMLElement that is attached to the document's DOM tree.\n   */\n  scrollTarget: PageScrollTarget;\n\n  /**\n   * Array of HTMLElements or the body object that should be manipulated while performing\n   * the scroll animation.\n   */\n  scrollingViews?: PageScrollingViews[];\n\n  /**\n   * Namespace of the scroll animation\n   */\n  namespace?: string;\n\n  /**\n   * Whether that scroll animation scrolls in vertical direction (true) or\n   * horizontal (false, default value)\n   */\n  verticalScrolling?: boolean;\n\n  /**\n   * Whether the an advanced offset calculation for inline scrollings should be applied\n   */\n  advancedInlineOffsetCalculation?: boolean;\n\n  /**\n   * Offset of target elements location and scroll location\n   */\n  pageScrollOffset?: number;\n\n  /**\n   * Whether the scroll animation should be interruptible\n   */\n  pageScrollInterruptible?: boolean;\n\n  /**\n   * The easing logic to be used\n   */\n  pageScrollEasingLogic?: EasingLogic;\n\n  /**\n   * Duration in milliseconds the scroll animation should last\n   */\n  pageScrollDuration?: number;\n\n  /**\n   * Maximum speed to be used for the scroll animation. Only taken\n   * into account of no pageScrollDuration is provided\n   */\n  pageScrollSpeed?: number;\n\n  /**\n   * A listener to be called whenever the scroll animation stops\n   */\n  pageScrollFinishListener?: EventEmitter<boolean>;\n}\n\n/**\n* Represents a scrolling action\n*/\n\nexport class PageScrollInstance {\n\n  /**\n   * These properties will be set during instance construction and default to their defaults from PageScrollConfig\n   */\n\n  /* A namespace to \"group\" scroll animations together and stopping some does not stop others */\n  private _namespace: string = PageScrollConfig._defaultNamespace;\n  /* The document all the scrolling takes place and scroll targets are located in */\n  private document: Document;\n  /* The DOM elements or similar nodes whose scrollTop/scrollLeft property will be manipulated during scrolling */\n  private _scrollingViews: PageScrollingViews[];\n  private _isInlineScrolling: boolean;\n  /* The target element that should be scrolled into the viewport */\n  private _scrollTarget: PageScrollTarget;\n\n  /* Whether we scroll vertically (true) or horizontally (false) */\n  private _verticalScrolling = PageScrollConfig.defaultIsVerticalScrolling;\n  /* Offset in px that the animation should stop above that target element */\n  private _offset: number = PageScrollConfig.defaultScrollOffset;\n  /* Duration in milliseconds the scroll animation should last */\n  private _duration: number = PageScrollConfig.defaultDuration;\n  /* Speed in \"pixels/second\" to be used when scrolling to the target element */\n  private _speed: number;\n  /* Easing function to manipulate the scrollTop/scrollLeft value over time */\n  private _easingLogic: EasingLogic = PageScrollConfig.defaultEasingLogic;\n  /* Boolean whether the scroll animation should stop on user interruption or not */\n  private _interruptible: boolean = PageScrollConfig.defaultInterruptible;\n  /* The listener that this scroll instance attaches to the body to listen for interrupt events\n   We're keeping a reference to it so we can properly remove it when the animation finishes */\n  private _interruptListener: EventListenerOrEventListenerObject;\n  /* Whether the advanded offset calculation for inline scrolling should be used */\n  private _advancedInlineOffsetCalculation: boolean = PageScrollConfig.defaultAdvancedInlineOffsetCalculation;\n  /* Event emitter to notify the world about the scrolling */\n  private _pageScrollFinish: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * These properties will be set/manipulated if the scroll animation starts\n   */\n  /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n  private _startScrollPosition = 0;\n  /* The target value of the scrollTop or scrollLeft position for the animation (aka \"the final destination\") */\n  private _targetScrollPosition: number;\n  /* Difference between startScrollPosition and targetScrollPosition. Pre-calculated to minimize computations during animation */\n  private _distanceToScroll: number;\n  /* The timestamp when the animation starts/got started */\n  private _startTime: number;\n  /* The estimate end time of the animation, calculated by startTime + duration */\n  private _endTime: number;\n  /* The duration a started animation takes. This may match the _duration or be adjusted due to the _speed option */\n  private _executionDuration: number;\n  /* Whether an interrupt listener is attached to the body or not */\n  private _interruptListenersAttached = false;\n\n  /* References to the timer instance that is used to perform the scroll animation to be\n   able to clear it on animation end*/\n  private _timer: any = null;\n\n  /*\n   * Factory methods for instance creation\n   */\n  public static simpleInstance(document: Document,\n                               scrollTarget: PageScrollTarget,\n                               namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        namespace\n    });\n  }\n\n//   public static newInstance(options: PageScrollOptions) {\n    public static newInstance(options: PageScrollOptions | any) {\n\n    if (Util.isUndefinedOrNull(options.namespace) || options.namespace.length <= 0) {\n        options.namespace = PageScrollConfig._defaultNamespace;\n    }\n    // const pageScrollInstance: PageScrollInstance = new PageScrollInstance(options.namespace, document);\n    const pageScrollInstance: PageScrollInstance | any = new PageScrollInstance(options.namespace, document);\n\n    if (Util.isUndefinedOrNull(options.scrollingViews) || options.scrollingViews.length === 0) {\n        pageScrollInstance._isInlineScrolling = false;\n        pageScrollInstance._scrollingViews = [document.documentElement, document.body, document.body.parentNode];\n    } else {\n        pageScrollInstance._isInlineScrolling = true;\n        pageScrollInstance._scrollingViews = options.scrollingViews;\n    }\n\n    pageScrollInstance._scrollTarget = options.scrollTarget;\n\n    if (!Util.isUndefinedOrNull(options.verticalScrolling)) {\n        pageScrollInstance._verticalScrolling = options.verticalScrolling;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollOffset)) {\n        pageScrollInstance._offset = options.pageScrollOffset;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollEasingLogic)) {\n        pageScrollInstance._easingLogic = options.pageScrollEasingLogic;\n    }\n\n    if (Util.isUndefinedOrNull(options.pageScrollDuration) && !Util.isUndefinedOrNull(options.pageScrollSpeed)) {\n        // No duration specified in the options, only in this case we use the speed option when present\n        pageScrollInstance._speed = options.pageScrollSpeed;\n        pageScrollInstance._duration = undefined;\n    } else if (!Util.isUndefinedOrNull(options.pageScrollDuration)) {\n        pageScrollInstance._duration = options.pageScrollDuration;\n    }\n\n    if (!Util.isUndefinedOrNull(options.pageScrollFinishListener)) {\n        pageScrollInstance._pageScrollFinish = options.pageScrollFinishListener;\n    }\n\n    pageScrollInstance._interruptible = options.pageScrollInterruptible ||\n        (Util.isUndefinedOrNull(options.pageScrollInterruptible) && PageScrollConfig.defaultInterruptible);\n\n    pageScrollInstance._advancedInlineOffsetCalculation = options.advancedInlineOffsetCalculation ||\n        (Util.isUndefinedOrNull(options.advancedInlineOffsetCalculation) &&\n        PageScrollConfig.defaultAdvancedInlineOffsetCalculation);\n\n    return pageScrollInstance;\n  }\n\n  /**\n   * Create a PageScrollInstance representing a scroll animation on the documents body.\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param verticalScrolling\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   **/\n  public static simpleDirectionInstance(document: Document,\n                                        scrollTarget: PageScrollTarget,\n                                        verticalScrolling: boolean,\n                                        namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        namespace,\n        verticalScrolling,\n    });\n  }\n\n  /**\n   * Create a PageScrollInstance representing a scroll animation to the target element where the scrollingView\n   * elements get scrolled (like a div container with fixed height, resulting in scrollbars in it).\n   *\n   * Make sure that the scrollTarget is located inside the scrollingView in the DOM hierarchy, otherwise the\n   * scrollingView will be scrolled to an apparently arbitrary position.\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingView The element that should be scrolled\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   */\n  public static simpleInlineInstance(document: Document,\n                                     scrollTarget: PageScrollTarget,\n                                     scrollingView: PageScrollingViews,\n                                     namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews: [scrollingView],\n        verticalScrolling: true,\n        namespace\n    });\n  }\n\n  /**\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingView The element that should be scrolled\n   * @param verticalScrolling whether the scrolling should be performed in vertical direction (true, default) or horizontal (false)\n   * @param namespace Optional namespace to group scroll animations logically\n   *\n   * @deprecated Use {@link newInstance(options: PageScrollOptions)}\n   */\n  public static simpleInlineDirectionInstance(document: Document,\n                                              scrollTarget: PageScrollTarget,\n                                              scrollingView: PageScrollingViews,\n                                              verticalScrolling: boolean,\n                                              namespace?: string): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews: [scrollingView],\n        namespace,\n        verticalScrolling,\n    });\n  }\n\n  /**\n   *\n   * @param document The document that contains the body to be scrolled and the scrollTarget elements\n   * @param scrollTarget Where to scroll to. Can be a HTMLElement reference or a string like '#elementId'\n   * @param scrollingViews The elements that should be scrolled. Null to use the default elements of document and body.\n   * @param namespace Optional namespace to group scroll animations logically\n   * @param verticalScrolling whether the scrolling should be performed in vertical direction (true, default) or horizontal (false)\n   * @param pageScrollOffset The offset to be attached to the top of the target element or\n   *                          null/undefined to use application default\n   * @param pageScrollInterruptible Whether this scroll animation should be interruptible.\n   *                                 Null/undefined for application default\n   * @param pageScrollEasingLogic Easing function to be used for manipulating the scroll position\n   *                          over time. Null/undefined for application default\n   * @param pageScrollDuration The duration in milliseconds the animation should last.\n   *                            Null/undefined for application default\n   * @param pageScrollFinishListener Listener to be called to notify other parts of the application\n   *                                  that the scroll animation has finishe\n   *\n   */\n  public static advancedInstance(document: Document,\n                                 scrollTarget: PageScrollTarget,\n                                 scrollingViews?: PageScrollingViews[],\n                                 namespace?: string,\n                                 verticalScrolling?: boolean,\n                                 pageScrollOffset?: number,\n                                 pageScrollInterruptible?: boolean,\n                                 pageScrollEasingLogic?: EasingLogic,\n                                 pageScrollDuration?: number,\n                                 pageScrollFinishListener?: EventEmitter<boolean>): PageScrollInstance {\n    return PageScrollInstance.newInstance({\n        document,\n        scrollTarget,\n        scrollingViews,\n        namespace,\n        verticalScrolling,\n        pageScrollOffset,\n        pageScrollInterruptible,\n        pageScrollEasingLogic,\n        pageScrollDuration,\n        pageScrollFinishListener\n    });\n  }\n\n  /**\n   * Private constructor, requires the properties assumed to be the bare minimum.\n   * Use the factory methods to create instances:\n   *      {@link PageScrollInstance#simpleInstance}\n   *      {@link PageScrollInstance#newInstance}\n   * @param namespace\n   * @param document\n   */\n  constructor(namespace: string, document: Document) {\n      this._namespace = namespace;\n      this.document = document;\n  }\n\n  public getScrollPropertyValue(scrollingView: any): number {\n    if (!this.verticalScrolling) {\n        return scrollingView.scrollLeft;\n    }\n    return scrollingView.scrollTop;\n  }\n\n  /**\n   * Extract the exact location of the scrollTarget element.\n   *\n   * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n   * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n   *\n   */\n  public extractScrollTargetPosition(): {top: number, left: number} {\n    // let scrollTargetElement: HTMLElement;\n    let scrollTargetElement: HTMLElement | any;\n    if (typeof this._scrollTarget === 'string') {\n        scrollTargetElement = this.document.getElementById((<string>this._scrollTarget).substr(1));\n    } else {\n        scrollTargetElement = <HTMLElement>this._scrollTarget;\n    }\n\n    if (scrollTargetElement === null || scrollTargetElement === undefined) {\n        // Scroll target not found\n        return {top: NaN, left: NaN};\n    }\n\n    if (this._isInlineScrolling) {\n        const position = {top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft};\n        if (this._advancedInlineOffsetCalculation && this.scrollingViews.length === 1) {\n            const accumulatedParentsPos = {top: 0, left: 0};\n            // not named window to make sure we're not getting the global window variable by accident\n            const theWindow = scrollTargetElement.ownerDocument.defaultView;\n            let parentFound = false;\n\n            // Start parent is the immediate parent\n            // let parent = scrollTargetElement.parentElement;\n            let parent: any = scrollTargetElement.parentElement;\n\n            // Iterate upwards all parents\n            while (!parentFound && !Util.isUndefinedOrNull(parent)) {\n                if (theWindow.getComputedStyle(parent).getPropertyValue('position') === 'relative') {\n                    accumulatedParentsPos.top += parent.offsetTop;\n                    accumulatedParentsPos.left += parent.offsetLeft;\n                }\n                // Next iteration\n                parent = parent.parentElement;\n                parentFound = parent === this.scrollingViews[0];\n            }\n            if (parentFound) {\n                // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                position.top += accumulatedParentsPos.top;\n                position.left += accumulatedParentsPos.left;\n            } else {\n                if (PageScrollConfig._logLevel >= 2) {\n                    console.warn('Unable to find nested scrolling targets parent!');\n                }\n            }\n        }\n        return position;\n    }\n\n    return Util.extractElementPosition(this.document, scrollTargetElement);\n  }\n\n  /**\n   * Get the top offset of the scroll animation.\n   * This automatically takes the offset location of the scrolling container/scrolling view\n   * into account (for nested/inline scrolling).\n   *\n   */\n  public getCurrentOffset(): number {\n    return this._offset;\n  }\n\n  /**\n   * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollingViews to the provided value\n   * @param position\n   * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n   *          false if it failed for all ScrollingViews, meaning that we should stop the animation\n   *          (probably because we're at the end of the scrolling region)\n   */\n  public setScrollPosition(position: number): boolean {\n    if (PageScrollConfig._logLevel >= 5) {\n        console.warn('Scroll Position: ' + position);\n    }\n    // Set the new scrollTop/scrollLeft to all scrollingViews elements\n    return this.scrollingViews.reduce((oneAlreadyWorked: any, scrollingView: any) => {\n        const startScrollPropertyValue = this.getScrollPropertyValue(scrollingView);\n        if (scrollingView && !Util.isUndefinedOrNull(startScrollPropertyValue)) {\n            const scrollDistance = Math.abs(startScrollPropertyValue - position);\n\n            // The movement we need to perform is less than 2px\n            // This we consider a small movement which some browser may not perform when\n            // changing the scrollTop/scrollLeft property\n            // Thus in this cases we do not stop the scroll animation, although setting the\n            // scrollTop/scrollLeft value \"fails\"\n            const isSmallMovement = scrollDistance < PageScrollConfig._minScrollDistance;\n\n            if (!this.verticalScrolling) {\n                scrollingView.scrollLeft = position;\n            } else {\n                scrollingView.scrollTop = position;\n            }\n\n            // Return true of setting the new scrollTop/scrollLeft value worked\n            // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n            // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n            // set due to dpi or rounding irregularities)\n            if (isSmallMovement || scrollDistance > Math.abs(this.getScrollPropertyValue(scrollingView) - position)) {\n                return true;\n            }\n        }\n        return oneAlreadyWorked;\n    }, false);\n  }\n\n  /**\n   * Trigger firing a animation finish event\n   * @param value Whether the animation finished at the target (true) or got interrupted (false)\n   */\n  public fireEvent(value: boolean): void {\n    if (this._pageScrollFinish) {\n      this._pageScrollFinish.emit(value);\n    }\n  }\n\n  /**\n   * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n   * will be called if any of the attached events is fired.\n   *\n   * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n   *\n   * @param interruptReporter\n   */\n  public attachInterruptListeners(interruptReporter: InterruptReporter): void {\n    if (this._interruptListenersAttached) {\n        // Detach possibly existing listeners first\n        this.detachInterruptListeners();\n    }\n    this._interruptListener = (event: Event): any => {\n        interruptReporter.report(event, this);\n    };\n    PageScrollConfig._interruptEvents.forEach(\n        (event: string) => this.document.body.addEventListener(event, this._interruptListener)\n    );\n    this._interruptListenersAttached = true;\n  }\n\n  /**\n   * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n   * interrupt\" events.\n   */\n  public detachInterruptListeners(): void {\n    PageScrollConfig._interruptEvents.forEach(\n        (event: string) => this.document.body.removeEventListener(event, this._interruptListener)\n    );\n    this._interruptListenersAttached = false;\n  }\n\n  public get namespace(): string {\n      return this._namespace;\n  }\n\n  get scrollTarget(): PageScrollTarget {\n      return this._scrollTarget;\n  }\n\n  get verticalScrolling(): boolean {\n      return this._verticalScrolling;\n  }\n\n  public get scrollingViews(): any[] {\n      return this._scrollingViews;\n  }\n\n  public set startScrollPosition(value: number) {\n      this._startScrollPosition = value;\n  }\n\n  public get startScrollPosition(): number {\n      return this._startScrollPosition;\n  }\n\n  public set targetScrollPosition(value: number) {\n      this._targetScrollPosition = value;\n  }\n\n  public get targetScrollPosition(): number {\n      return this._targetScrollPosition;\n  }\n\n  public set distanceToScroll(value: number) {\n      this._distanceToScroll = value;\n  }\n\n  public get distanceToScroll(): number {\n      return this._distanceToScroll;\n  }\n\n  get executionDuration(): number {\n      return this._executionDuration;\n  }\n\n  set executionDuration(value: number) {\n      this._executionDuration = value;\n  }\n\n  public get duration(): number {\n      return this._duration;\n  }\n\n  public get speed(): number {\n      return this._speed;\n  }\n\n  public get easingLogic(): EasingLogic {\n      return this._easingLogic;\n  }\n\n  public get interruptible(): boolean {\n      return this._interruptible;\n  }\n\n  public set startTime(value: number) {\n      this._startTime = value;\n  }\n\n  public get startTime(): number {\n      return this._startTime;\n  }\n\n  public set endTime(value: number) {\n      this._endTime = value;\n  }\n\n  public get endTime(): number {\n      return this._endTime;\n  }\n\n  public set timer(value: any) {\n      this._timer = value;\n  }\n\n  public get timer(): any {\n      return this._timer;\n  }\n\n  public get interruptListenersAttached(): boolean {\n      return this._interruptListenersAttached;\n  }\n}\n\n/**\n* An Interface a listener should implement to be notified about possible interrupt events\n* that happened due to user interaction while a scroll animation takes place.\n*\n* The PageScrollService provides an implementation to a PageScrollInstance to be notified\n* about scroll animation interrupts and stop related animations.\n*/\n\nexport interface InterruptReporter {\n  report: (event: Event, pageScrollInstance: PageScrollInstance) => any;\n}\n","import {Injectable, isDevMode} from '@angular/core';\n\nimport {PageScrollConfig} from './mdb-page-scroll.config';\nimport {PageScrollInstance, InterruptReporter} from './mdb-page-scroll.instance';\nimport {PageScrollUtilService as Util} from './mdb-page-scroll-util.service';\n\n@Injectable()\nexport class PageScrollService {\n\n  private static instanceCounter = 0;\n\n  private runningInstances: PageScrollInstance[] = [];\n\n  private onInterrupted: InterruptReporter = {\n    report: (event: Event, pageScrollInstance: PageScrollInstance): void => {\n      if (!pageScrollInstance.interruptible) {\n          // Non-interruptible anyway, so do not stop anything\n          return;\n      }\n\n      let shouldStop = true;\n\n      if (event.type === 'keyup') {\n          // Only stop if specific keys have been pressed, for all others don't stop anything\n          if (PageScrollConfig._interruptKeys.indexOf((<KeyboardEvent>event).keyCode) === -1) {\n              // The pressed key is not in the list of interrupting keys\n              shouldStop = false;\n          }\n      } else if (event.type === 'mousedown') {\n          // For mousedown events we only stop the scroll animation of the mouse has\n          // been clicked inside the scrolling container\n          if (!pageScrollInstance.scrollingViews.some(scrollingView => scrollingView.contains(event.target))) {\n              // Mouse clicked an element which is not inside any of the the scrolling containers\n              shouldStop = false;\n          }\n      }\n\n      if (shouldStop) {\n          this.stopAll(pageScrollInstance.namespace);\n      }\n    }\n  };\n\n  private stopInternal(interrupted: boolean, pageScrollInstance: PageScrollInstance): boolean {\n    const index: number = this.runningInstances.indexOf(pageScrollInstance);\n    if (index >= 0) {\n        this.runningInstances.splice(index, 1);\n    }\n\n    if (pageScrollInstance.interruptListenersAttached) {\n        pageScrollInstance.detachInterruptListeners();\n    }\n\n    if (pageScrollInstance.timer) {\n        // Clear/Stop the timer\n        clearInterval(pageScrollInstance.timer);\n        // Clear the reference to this timer\n        pageScrollInstance.timer = undefined;\n        pageScrollInstance.fireEvent(!interrupted);\n        return true;\n    }\n    return false;\n  }\n\n  /**\n   * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n   *\n   * This is the core functionality of the whole library.\n   *\n   * @param pageScrollInstance\n   */\n  public start(pageScrollInstance: PageScrollInstance): void {\n      // Stop all possibly running scroll animations in the same namespace\n      this.stopAll(pageScrollInstance.namespace);\n\n      if (pageScrollInstance.scrollingViews === null || pageScrollInstance.scrollingViews.length === 0) {\n          // No scrollingViews specified, thus we can't animate anything\n          if (isDevMode()) {\n              console.warn('No scrollingViews specified, this ng2-page-scroll does not know which DOM elements to scroll');\n          }\n          return;\n      }\n\n      let startScrollPositionFound = false;\n      // Reset start scroll position to 0. If any of the scrollingViews has a different one, it will be extracted next\n      pageScrollInstance.startScrollPosition = 0;\n\n      // Get the start scroll position from the scrollingViews (e.g. if the user already scrolled down the content)\n      pageScrollInstance.scrollingViews.forEach((scrollingView: any) => {\n          if (Util.isUndefinedOrNull(scrollingView)) {\n              return;\n          }\n          // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n          // or \"scrollLeft\" property that is not undefined and unequal to 0\n\n          const scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n          if (!startScrollPositionFound && scrollPosition) {\n              // We found a scrollingView that does not have scrollTop or scrollLeft 0\n\n              // Return the scroll position value, as this will be our startScrollPosition\n              pageScrollInstance.startScrollPosition = scrollPosition;\n              startScrollPositionFound = true;\n          }\n      });\n\n      const pageScrollOffset = pageScrollInstance.getCurrentOffset();\n\n      // Calculate the target position that the scroll animation should go to\n\n      const scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n      pageScrollInstance.targetScrollPosition = Math.round(\n          (pageScrollInstance.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n\n      // Calculate the distance we need to go in total\n      pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n\n      if (isNaN(pageScrollInstance.distanceToScroll)) {\n          // We weren't able to find the target position, maybe the element does not exist?\n\n          if (isDevMode()) {\n              // console.log('Scrolling not possible, as we can\\'t find the specified target');\n          }\n          pageScrollInstance.fireEvent(false);\n          return;\n      }\n\n      // We're at the final destination already\n      // OR we need to scroll down but are already at the end\n      // OR we need to scroll up but are at the top already\n      const allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < PageScrollConfig._minScrollDistance;\n\n      // Check how long we need to scroll if a speed option is given\n      // Default executionDuration is the specified duration\n      pageScrollInstance.executionDuration = pageScrollInstance.duration;\n      // Maybe we need to pay attention to the speed option?\n      if (!Util.isUndefinedOrNull(pageScrollInstance.speed) && Util.isUndefinedOrNull(pageScrollInstance.duration)) {\n          // Speed option is set and no duration => calculate duration based on speed and scroll distance\n          pageScrollInstance.executionDuration = pageScrollInstance.distanceToScroll / pageScrollInstance.speed * 1000;\n      }\n\n      // We should go there directly, as our \"animation\" would have one big step\n      // only anyway and this way we save the interval stuff\n      const tooShortInterval = pageScrollInstance.executionDuration <= PageScrollConfig._interval;\n\n      if (allReadyAtDestination || tooShortInterval) {\n          if (isDevMode()) {\n              if (allReadyAtDestination) {\n                  // console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n              } else {\n                  // console.log('Scroll duration shorter that interval length, jumping to target');\n              }\n          }\n          pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n          pageScrollInstance.fireEvent(true);\n          return;\n      }\n\n      // Register the interrupt listeners if we want an interruptible scroll animation\n      if (pageScrollInstance.interruptible ||\n          (Util.isUndefinedOrNull(pageScrollInstance.interruptible) && PageScrollConfig.defaultInterruptible)) {\n          pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n      }\n\n      // Let's get started, get the start time...\n      pageScrollInstance.startTime = new Date().getTime();\n      // .. and calculate the end time (when we need to finish at last)\n      pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n\n      pageScrollInstance.timer = setInterval((_pageScrollInstance: PageScrollInstance) => {\n          // Take the current time\n          const currentTime: number = new Date().getTime();\n\n          // Determine the new scroll position\n          let newScrollPosition: number;\n          let stopNow = false;\n          if (_pageScrollInstance.endTime <= currentTime) {\n              // We're over the time already, so go the targetScrollPosition (aka destination)\n              newScrollPosition = _pageScrollInstance.targetScrollPosition;\n              stopNow = true;\n          } else {\n              // Calculate the scroll position based on the current time using the easing function\n              newScrollPosition = Math.round(_pageScrollInstance.easingLogic.ease(\n                  currentTime - _pageScrollInstance.startTime,\n                  _pageScrollInstance.startScrollPosition,\n                  _pageScrollInstance.distanceToScroll,\n                  _pageScrollInstance.executionDuration));\n          }\n          // Set the new scrollPosition to all scrollingViews elements\n          if (!_pageScrollInstance.setScrollPosition(newScrollPosition)) {\n              // Setting the new scrollTop/scrollLeft value failed for all ScrollingViews\n              // early stop the scroll animation to save resources\n              stopNow = true;\n          }\n\n          // At the end do the internal stop maintenance and fire the pageScrollFinish event\n          // (otherwise the event might arrive at \"too early\")\n          if (stopNow) {\n              this.stopInternal(false, _pageScrollInstance);\n          }\n\n      }, PageScrollConfig._interval, pageScrollInstance);\n\n      // Register the instance as running one\n      this.runningInstances.push(pageScrollInstance);\n  }\n\n  /**\n   * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n   *\n   * @param namespace\n   */\n//   public stopAll(namespace?: string): boolean {\n    public stopAll(namespace?: string | any): boolean {\n    if (this.runningInstances.length > 0) {\n        let stoppedSome = false;\n\n        for (let i = 0; i < this.runningInstances.length; ++i) {\n            const pageScrollInstance = this.runningInstances[i];\n            if (Util.isUndefinedOrNull(namespace) || namespace.length === 0 ||\n                pageScrollInstance.namespace === namespace) {\n                stoppedSome = true;\n                this.stopInternal(true, pageScrollInstance);\n                // Decrease the counter, as we removed an item from the array we iterate over\n                i--;\n            }\n        }\n        return stoppedSome;\n    }\n    return false;\n  }\n\n  public stop(pageScrollInstance: PageScrollInstance): boolean {\n      return this.stopInternal(true, pageScrollInstance);\n  }\n\n  constructor() {\n      if (PageScrollService.instanceCounter > 0 && isDevMode()) {\n          console.warn('An instance of PageScrollService already exists, usually ' +\n              'including one provider should be enough, so double check.');\n      }\n      PageScrollService.instanceCounter++;\n  }\n}\n","export abstract class EasingLogic {\n  /**\n  * Examples may be found at https://github.com/gdsmith/jquery.easing/blob/master/jquery.easing.js\n  * or http://gizma.com/easing/\n  * @param t current time\n  * @param b beginning value\n  * @param c change In value\n  * @param d duration\n  */\n  public abstract ease(t: number, b: number, c: number, d: number): number;\n}\n\n\nexport declare type PageScrollTarget = HTMLElement | string;\n\nexport declare type PageScrollingViews = HTMLElement | Document | HTMLBodyElement | Node;\n// @dynamic\nexport class PageScrollConfig {\n\n  /**\n  * The number of milliseconds to wait till updating the scroll position again.\n  * Small amounts may produce smoother animations but require more processing power.\n  */\n  public static _interval = 10;\n\n  /**\n  * The amount of pixels that need to be between the current scrollTop/scrollLeft position\n  * and the target position the cause a scroll animation. In case distance is below\n  * this threshold, an immediate jump will be performed.\n  * Due to dpi or rounding irregularities in browsers floating point numbers for scrollTop/scrollLeft values\n  * are possible, making a === comparison of current scrollTop or scrollLeft and target scrollPosition error-prone.\n  */\n  public static _minScrollDistance = 2;\n\n  /**\n  * Name of the default namespace.\n  */\n  public static _defaultNamespace = 'default';\n\n  /**\n  * Whether by default the scrolling should happen in vertical direction (by manipulating the scrollTop property)\n  * (= true; default) or in horizontal direction (by manipulating the scrollLeft property) (= false\n  */\n  public static defaultIsVerticalScrolling = true;\n\n  /**\n  * How many console logs should be emitted.\n  * 0: None\n  * 2: If animation could not be started due to missing target, \"already at destination\" or similar reasons\n  * 5: All scroll position values that get set\n  */\n  public static _logLevel = 2;\n\n  /**\n  * The duration how long a scrollTo animation should last by default.\n  * May be overridden using the page-scroll-duration attribute on a single ng2PageScroll instance.\n  */\n  public static defaultDuration = 1250;\n\n  /**\n  * The distance in pixels above scroll target where the animation should stop. Setting a positive number results in\n  * the scroll target being more in the middle of the screen, negative numbers will produce scrolling \"too far\"\n  */\n  public static defaultScrollOffset = 0;\n\n  /**\n  * Whether by default for inline scroll animations the advanced offset calculation should take place (true) or\n  * not (false). Default is false.\n  * The advanced offset calculation will traverse the DOM tree upwards, starting at the scrollTarget, until it finds\n  * the scrollingView container element. Along the way the offset positions of the relative positioned\n  * (position: relative) elements will be taken into account for calculating the target elements position.\n  */\n  public static defaultAdvancedInlineOffsetCalculation = false;\n\n  /**\n  * The events that are listened to on the body to decide whether a scroll animation has been interfered/interrupted by the user\n  */\n  public static _interruptEvents: string[] = ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'];\n\n  /**\n  * The keys that are considered to interrupt a scroll animation (mainly the arrow keys). All other key presses will not stop the\n  * scroll animation.\n  */\n  public static _interruptKeys: number[] = [33, 34, 35, 36, 38, 40];\n\n  /**\n  * Whether a scroll animation should be interruptible by user interaction (true) or not (false). If the user performs an\n  * interrupting event while a scroll animation takes place, the scroll animation stops.\n  */\n  public static defaultInterruptible = true;\n\n  private static _easingLogic: EasingLogic = {\n    ease: (t: number, b: number, c: number, d: number): number => {\n      // Linear easing\n      return c * t / d + b;\n    }\n  };\n\n  // Getter and setter to avoid auto completion to suggest calling the method\n  public static get defaultEasingLogic(): EasingLogic {\n    return PageScrollConfig._easingLogic;\n  }\n\n  public static set defaultEasingLogic(easingLogic: EasingLogic) {\n    PageScrollConfig._easingLogic = easingLogic;\n  }\n\n}\n","/**\n * Created by sebastianfuss on 02.09.16.\n */\n\nexport class PageScrollUtilService {\n\n  /**\n   * Util method to check whether a given variable is either undefined or null\n   * @param variable\ntrue the variable is undefined or null\n   */\n  public static isUndefinedOrNull(variable: any): boolean {\n    return (typeof variable === 'undefined') || variable === undefined || variable === null;\n  }\n\n  public static extractElementPosition(document: Document, scrollTargetElement: HTMLElement): { top: number, left: number } {\n\n    const body = document.body;\n    const docEl: any = document.documentElement;\n\n    // const windowPageYOffset: number = document.defaultView && document.defaultView.pageYOffset || undefined;\n    const windowPageYOffset: number | any = document.defaultView && document.defaultView.pageYOffset as any || undefined;\n    // const windowPageXOffset: number = document.defaultView && document.defaultView.pageXOffset || undefined;\n    const windowPageXOffset: number | any = document.defaultView && document.defaultView.pageXOffset as any || undefined;\n\n    const scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n\n    if (PageScrollUtilService.isUndefinedOrNull(scrollTargetElement)) {\n      // No element found, so return the current position to not cause any change in scroll position\n      return { top: scrollTop, left: scrollLeft };\n    }\n    const box = scrollTargetElement.getBoundingClientRect();\n\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n\n    return { top: Math.round(top), left: Math.round(left) };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SidenavComponent } from './sidenav.component';\n\n@NgModule({\n  declarations: [\n    SidenavComponent,\n  ],\n  exports: [\n    SidenavComponent\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class SidenavModule { }\n","import {\n  Component,\n  ViewChild,\n  Input,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  HostListener,\n  PLATFORM_ID,\n  Inject,\n  OnDestroy\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { window } from './../../free/utils/facade/browser';\n\n@Component({\n  selector: 'mdb-sidenav, mdb-side-nav',\n  template: \"<ul #sidenav id=\\\"slide-out\\\" class=\\\"{{ class }} side-nav\\\"> <ng-content></ng-content> <!-- <div class=\\\"sidenav-bg mask-strong\\\"></div> --> </ul> <div (click)=\\\"hide()\\\" (touchstart)=\\\"hide()\\\" #overlay id=\\\"sidenav-overlay\\\" style=\\\"display: none;\\\"></div> \"\n})\n\nexport class SidenavComponent implements AfterViewInit, OnDestroy {\n  public windwosWidth: number;\n  public shown: boolean;\n\n  public isBrowser: any = false;\n  @Input() public class: string;\n  @Input() public fixed = true;\n  @Input() sidenavBreakpoint: any;\n  @ViewChild('sidenav') public sideNav: ElementRef;\n  @ViewChild('overlay') public overlay: any;\n\n  constructor(@Inject(PLATFORM_ID) platformId: string, public el: ElementRef,\n    public renderer: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngAfterViewInit() {\n    if (this.isBrowser) {\n\n\n      const sidenav = this.el.nativeElement;\n      const sidenavChildren = sidenav.children[0].children;\n      const sidenavMask = this.el.nativeElement.querySelector('.sidenav-bg');\n\n      let sidenavChildrenHeight = 0;\n\n      if (sidenavMask) {\n        for (let i = 0; i < sidenavChildren.length; i++) {\n          if (sidenavChildren[i].classList.contains('sidenav-bg')) {\n            continue;\n          } else {\n            for (let j = 0; j < sidenavChildren[i].children.length; j++) {\n              sidenavChildrenHeight += sidenavChildren[i].children[j].scrollHeight;\n            }\n          }\n        }\n        this.renderer.setStyle(sidenavMask, 'min-height', sidenavChildrenHeight + 16 + 'px');\n      }\n\n      // pobraneie szerokosci okna po init\n      this.windwosWidth = window.innerWidth;\n\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          this.renderer.addClass(document.body, 'fixed-sn');\n\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.addClass(document.body, 'hidden-sn');\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n        }\n      } else {\n        if (this.fixed) {\n          this.renderer.addClass(document.body, 'fixed-sn');\n\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.addClass(document.body, 'hidden-sn');\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n        }\n      }\n\n    }\n  }\n\n  @HostListener('window:resize')\n  windwosResize() {\n    if (this.isBrowser) {\n      this.windwosWidth = window.innerWidth;\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n\n          if (this.windwosWidth > +this.sidenavBreakpoint && this.shown) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          } else if (this.windwosWidth > +this.sidenavBreakpoint) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          }\n        } else {\n          if (this.windwosWidth > +this.sidenavBreakpoint) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.hideOverlay();\n            this.setShown(false);\n          }\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n\n          if (this.windwosWidth > 1440 && this.shown) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          } else if (this.windwosWidth > 1440) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.hideOverlay();\n            this.setShown(true);\n          }\n        } else {\n          if (this.windwosWidth > 1440) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.hideOverlay();\n            this.setShown(false);\n          }\n        }\n      }\n\n    }\n  }\n\n  show() {\n    if (this.isBrowser) {\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n            this.showOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n          this.setShown(true);\n          this.showOverlay();\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n            this.showOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n            this.setShown(true);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(0%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(0%)');\n          this.setShown(true);\n          this.showOverlay();\n        }\n      }\n    }\n\n  }\n\n  hide() {\n    if (this.isBrowser) {\n      if (this.sidenavBreakpoint) {\n        if (this.fixed) {\n          if (this.windwosWidth < +this.sidenavBreakpoint + 1) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n            this.hideOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n          this.hideOverlay();\n        }\n      } else {\n        if (this.fixed) {\n          if (this.windwosWidth < 1441) {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n            this.hideOverlay();\n          } else {\n            this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n            this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n            this.setShown(false);\n          }\n        } else {\n          this.renderer.setStyle(this.sideNav.nativeElement, 'transform', 'translateX(-100%)');\n          this.renderer.setStyle(this.el.nativeElement, 'transform', 'translateX(-100%)');\n          this.setShown(false);\n          this.hideOverlay();\n        }\n      }\n\n    }\n  }\n\n  toggle() {\n    if (this.shown) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  showOverlay() {\n    this.renderer.setStyle(this.overlay.nativeElement, 'display', 'block');\n    setTimeout(() => {\n      this.renderer.setStyle(this.overlay.nativeElement, 'opacity', '1');\n    }, 0);\n  }\n\n  hideOverlay() {\n    this.renderer.setStyle(this.overlay.nativeElement, 'opacity', '0');\n    setTimeout(() => {\n      this.renderer.setStyle(this.overlay.nativeElement, 'display', 'none');\n    }, 200);\n  }\n\n  setShown(value: boolean) {\n    setTimeout(() => {\n      this.shown = value;\n    }, 510);\n  }\n\n  ngOnDestroy() {\n    if (document.body.classList.contains('hidden-sn')) {\n      this.renderer.removeClass(document.body, 'hidden-sn');\n    } else if (document.body.classList.contains('fixed-sn')) {\n      this.renderer.removeClass(document.body, 'fixed-sn');\n    }\n  }\n\n}\n","import { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MdbRangeInputComponent } from './mdb-range.component';\nimport { NgModule } from '@angular/core';\n\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [MdbRangeInputComponent],\n    exports: [MdbRangeInputComponent]\n})\n\nexport class RangeModule {\n\n}\n","\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  Input,\n  HostListener,\n  forwardRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef\n} from '@angular/core';\n\nexport const RANGE_VALUE_ACCESOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdbRangeInputComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'mdb-range-input',\n  template: \"<div *ngIf=\\\"!default\\\" class=\\\"range-field\\\" #rangeField> <div class=\\\"track\\\"> <div #rangeCloud class=\\\"range-cloud\\\" title=\\\"range\\\" [ngClass]=\\\"{'visible': this.visibility, 'hidden': !this.visibility}\\\"> <span class=\\\"text-transform\\\">{{range}}</span> </div> </div> <input #input [name]=\\\"name\\\" type=\\\"range\\\" [disabled]=\\\"disabled\\\" [id]=\\\"id\\\" [min]=\\\"min\\\" [max]=\\\"max\\\" [step]=\\\"step\\\" [value]=\\\"value\\\" [(ngModel)]=\\\"range\\\" (focus)=\\\"this.visibility = true\\\" (blur)=\\\"this.visibility = false\\\" (input)=\\\"coverage($event)\\\"> </div> <div *ngIf=\\\"default\\\"> <label for=\\\"customRange1\\\">Example range</label> <input #input class=\\\"custom-range\\\" [name]=\\\"name\\\" type=\\\"range\\\" [id]=\\\"id\\\" [min]=\\\"min\\\" [max]=\\\"max\\\" [step]=\\\"step\\\" [attr.value]=\\\"value\\\" [value]=\\\"value\\\" [(ngModel)]=\\\"range\\\" (focus)=\\\"this.visibility = true\\\" (blur)=\\\"this.visibility = false\\\" (input)=\\\"coverage($event)\\\"> <span class=\\\"{{defaultRangeCounterClass}}\\\">{{ range }}</span> </div>\",\n  providers: [RANGE_VALUE_ACCESOR],\n})\nexport class MdbRangeInputComponent implements ControlValueAccessor, AfterViewInit {\n\n  @ViewChild('input') input: ElementRef;\n  @ViewChild('rangeCloud') rangeCloud: ElementRef;\n  @ViewChild('rangeField') rangeField: ElementRef;\n\n  @Input() id: string;\n  @Input() required: boolean;\n  @Input() name: string;\n  @Input() value: string;\n  @Input() disabled: boolean;\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() step: number;\n  @Input() default: boolean;\n  @Input() defaultRangeCounterClass: string;\n\n  @Output() rangeValueChange = new EventEmitter<any>();\n\n  range: any = 0;\n  stepLength: number;\n  steps: number;\n  cloudRange = 0;\n  visibility = false;\n\n  @HostListener('change', ['$event']) onchange(event: any) {\n    this.onChange(event.target.value);\n  }\n\n  @HostListener('input', ['$event']) oninput(event: any) {\n    const value: number = +event.target.value;\n    this.rangeValueChange.emit({ value: value });\n\n    if (this.checkIfSafari()) {\n      this.focusRangeInput();\n    }\n  }\n\n  @HostListener('click') onclick() {\n    this.focusRangeInput();\n  }\n\n  @HostListener('mouseleave') onmouseleave() {\n    if (this.checkIfSafari()) {\n      this.blurRangeInput();\n    }\n  }\n  constructor(private renderer: Renderer2, private cdRef: ChangeDetectorRef) { }\n\n  focusRangeInput() {\n    this.input.nativeElement.focus();\n    this.visibility = true;\n  }\n\n  blurRangeInput() {\n    this.input.nativeElement.blur();\n    this.visibility = false;\n  }\n\n  coverage(event: any) {\n    if (typeof this.range === 'string' && this.range.length !== 0) {\n      return this.range;\n    }\n\n    if (!this.default) {\n      const newValue = event.target.value;\n      const newRelativeGain = newValue - this.min;\n      const inputWidth = this.input.nativeElement.offsetWidth;\n\n      let thumbOffset = 0;\n      const offsetAmmount = 15;\n      const distanceFromMiddle = newRelativeGain - (this.steps / 2);\n\n      this.stepLength = inputWidth / this.steps;\n\n      thumbOffset = (distanceFromMiddle / this.steps) * offsetAmmount;\n      this.cloudRange = (this.stepLength * newRelativeGain) - thumbOffset;\n\n      this.renderer.setStyle(this.rangeCloud.nativeElement, 'left', this.cloudRange + 'px');\n    }\n  }\n\n  checkIfSafari() {\n    const isSafari = navigator.userAgent.indexOf('Safari') > -1;\n    const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    const isOpera = navigator.userAgent.indexOf('Opera') > -1;\n\n    if (isSafari && !isChrome && !isFirefox && !isOpera) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.steps = this.max - this.min;\n\n    if (this.value) {\n      this.range = this.value;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nexport { BarComponent } from './bar.component';\nexport { ProgressDirective } from './progress.directive';\nexport { ProgressbarComponent } from './progressbar.component';\nexport { ProgressbarModule } from './progressbar.module';\nexport { ProgressbarConfigComponent } from './progressbar.config.component';\nexport { ProgressSpinnerComponent } from './progress-spinner.component';\nimport { ProgressbarModule } from './progressbar.module';\n\nimport { MdProgressSpinnerModule } from './progress-spinner-module/index';\nimport { MdProgressBarModule } from './progress-bars-module/index';\n\n\nconst MATERIAL_MODULES = [\n  MdProgressBarModule,\n  MdProgressSpinnerModule,\n  ProgressbarModule\n];\n\n@NgModule({\n  imports: [\n  MdProgressBarModule.forRoot(),\n  MdProgressSpinnerModule.forRoot(),\n  ProgressbarModule.forRoot()\n  ],\n  exports: MATERIAL_MODULES,\n})\n\nexport class PreloadersModule { }\n\n/** @deprecated */\n@NgModule({\n  imports: MATERIAL_MODULES,\n  exports: MATERIAL_MODULES,\n})\nexport class ProgressBars {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {ngModule: PreloadersModule};\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressBarComponent } from './progressbar.component';\n\nexport { ProgressBarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ProgressBarComponent],\n  declarations: [ProgressBarComponent],\n})\nexport class MdProgressBarModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdProgressBarModule,\n      providers: []\n    };\n  }\n}\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  MdProgressSpinnerComponent,\n  MdSpinnerComponent,\n  MdProgressSpinnerCssMatStylerDirective,\n} from './progress-spinner.component';\n\nimport { ProgressSpinnerComponent } from '../progress-spinner.component';\n\n\n@NgModule({\n  exports: [\n    MdProgressSpinnerComponent,\n    MdSpinnerComponent,\n    MdProgressSpinnerCssMatStylerDirective,\n    ProgressSpinnerComponent\n  ],\n  declarations: [\n    MdProgressSpinnerComponent,\n    MdSpinnerComponent,\n    MdProgressSpinnerCssMatStylerDirective,\n    ProgressSpinnerComponent\n  ],\n})\n\nclass MdProgressSpinnerModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdProgressSpinnerModule,\n      providers: []\n    };\n  }\n}\n\nexport { MdProgressSpinnerModule };\nexport {\n  ProgressSpinnerMode,\n  MdProgressSpinnerCssMatStylerDirective,\n  MdProgressSpinnerComponent,\n  MdSpinnerComponent\n} from './progress-spinner.component';\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressDirective } from './progress.directive';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfigComponent } from './progressbar.config.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ProgressDirective, BarComponent, ProgressbarComponent],\n  exports: [ProgressDirective, BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: ProgressbarModule, providers: [ProgressbarConfigComponent]};\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ProgressbarConfigComponent } from './progressbar.config.component';\n\n@Component({\n  selector: 'mdb-progressbar, mdb-progress',\n  template: \"<div mdbProgress [animate]=\\\"animate\\\" [max]=\\\"max\\\"> <mdb-bar [type]=\\\"type\\\" [value]=\\\"value\\\"> <ng-content></ng-content> </mdb-bar> </div> \"\n})\nexport class ProgressbarComponent {\n    /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  @Input() public animate: boolean;\n  /** maximum total value of progress element */\n  @Input() public max: number;\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() public type: string;\n  /** current value of progress bar */\n  @Input() public value: number;\n\n  public constructor(config: ProgressbarConfigComponent) {\n    Object.assign(this, config);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfigComponent {\n  /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  public animate: Boolean = true;\n  /** maximum total value of progress element */\n  public max = 100;\n}\n","import { Component, Input, ElementRef, AfterViewInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n    selector: 'mdb-spinner',\n    template: \"<div class=\\\"preloader-wrapper active  {{spinnerType}}\\\"> <mdb-Spinners mdbSpinners mode=\\\"indeterminate\\\"></mdb-Spinners> </div>\"\n})\nexport class ProgressSpinnerComponent implements AfterViewInit {\n    el: ElementRef;\n    addClass: String = 'spinner-blue-only';\n    isBrowser = false;\n    @Input() spinnerType = '';\n    @Input() spinnerColor = 'rainbow';\n\n    constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string) {\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.el = el;\n    }\n\n    ngAfterViewInit() {\n        const hostElem = this.el.nativeElement;\n        const colorClass = this.spinnerColor;\n        this.addClass = 'spinner-rainbow';\n\n        switch (colorClass) {\n            case 'green':\n                this.addClass = 'spinner-green-only';\n                break;\n            case 'blue':\n                this.addClass = 'spinner-blue-only';\n                break;\n            case 'yellow':\n                this.addClass = 'spinner-yellow-only';\n                break;\n            case 'red':\n                this.addClass = 'spinner-red-only';\n                break;\n            case 'rainbow':\n                this.addClass = 'spinner-rainbow spinner-blue-only mat-progress-spinner';\n                this.spinerRun();\n                break;\n        }\n        hostElem.children[0].children[0].className += ' ' + this.addClass;\n    }\n\n    spinerRun() {\n        let counter = 0;\n        const hostElem = this.el.nativeElement;\n        if (this.isBrowser) {\n            setInterval(() => {\n                switch (counter) {\n                    case 0:\n                        this.addClass = 'spinner-red-only mat-progress-spinner ';\n                        break;\n                    case 1:\n                        this.addClass = 'spinner-yellow-only mat-progress-spinner';\n                        break;\n                    case 2:\n                        this.addClass = 'spinner-blue-only mat-progress-spinner';\n                        break;\n                    case 3:\n                        this.addClass = 'spinner-green-only mat-progress-spinner';\n                        break;\n                }\n\n                hostElem.children[0].children[0].className = ' ' + this.addClass;\n                if (counter < 3) {\n                    counter++;\n                } else {\n                    counter = 0;\n                }\n            }, 1333);\n        }\n    }\n}\n","import { Component, Host, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { ProgressDirective } from './progress.directive';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'mdb-bar',\n  template: \"<div class=\\\"progress-bar\\\" style=\\\"min-width: 0;\\\" role=\\\"progressbar\\\" [ngClass]=\\\"type && 'progress-bar-' + type\\\" [ngStyle]=\\\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuenow]=\\\"value\\\" [attr.aria-valuetext]=\\\"percent.toFixed(0) + '%'\\\" [attr.aria-valuemax]=\\\"max\\\"> <ng-content></ng-content> </div> \"\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  public max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() public type: string;\n  /** current value of progress bar */\n  @Input()\n  public get value(): number {\n    return this._value;\n  }\n\n  public set value(v: number) {\n    if (!v && v !== 0) {\n        return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  public percent = 0;\n  public transition: string;\n  public progress: ProgressDirective;\n\n  protected _value: number;\n\n  public constructor(@Host() progress: ProgressDirective) {\n    this.progress = progress;\n  }\n\n  public ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  public ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  public recalculatePercentage(): void {\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\n\n    const totalPercentage = this.progress.bars.reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n    }, 0);\n\n    if (totalPercentage > 100) {\n        this.percent -= totalPercentage - 100;\n    }\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\n\n// todo: progress element conflict with bootstrap.css\n// todo: need hack: replace host element with div\n@Directive({selector: 'mdbProgress, [mdbProgress]'})\nexport class ProgressDirective  {\n    /** if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4) */\n  @Input() public animate: boolean;\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  public get max(): number {\n    return this._max;\n  }\n\n  public set max(v: number) {\n  this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n        bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') public addClass = true;\n\n  public bars: any[] = [];\n\n  protected _max = 100;\n\n  public addBar(bar: BarComponent): void {\n    if (!this.animate) {\n    bar.transition = 'none';\n    }\n    this.bars.push(bar);\n  }\n\n  public removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n    Component,\n    HostBinding,\n    ChangeDetectionStrategy,\n    OnDestroy,\n    Input,\n    ElementRef,\n    NgZone,\n    Renderer2, Directive\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n// TODO(josephperrott): Benchpress tests.\n\n/** A single degree in radians. */\nconst DEGREE_IN_RADIANS = Math.PI / 180;\n/** Duration of the indeterminate animation. */\nconst DURATION_INDETERMINATE = 667;\n/** Duration of the indeterminate animation. */\nconst DURATION_DETERMINATE = 225;\n/** Start animation value of the indeterminate animation */\nconst startIndeterminate = 3;\n/** End animation value of the indeterminate animation */\nconst endIndeterminate = 80;\n/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\nconst MAX_ANGLE = 359.99 / 100;\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\n\ntype EasingFn = (currentTime: number, startValue: number,\n    changeInValue: number, duration: number) => number;\n\n/**\n* Directive whose purpose is to add the mat- CSS styling to this selector.\n* @docs-private\n*/\n@Directive({\n    selector: '[mdbSpinners], mat-progress-spinner'\n})\nexport class MdProgressSpinnerCssMatStylerDirective {\n    @HostBinding('class.mat-progress-spinner') true: any;\n}\n\n\n/**\n* <md-progress-spinner> component.\n*/\n@Component({\n    selector: 'mdb-Spinners, mat-progress-spinner',\n    template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg>\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class MdProgressSpinnerComponent implements OnDestroy {\n    /** The id of the last requested animation. */\n    private _lastAnimationId = 0;\n\n    /** The id of the indeterminate interval. */\n    private _interdeterminateInterval: any;\n\n    /** The SVG <path> node that is used to draw the circle. */\n    private _path: SVGPathElement;\n\n    private _mode: ProgressSpinnerMode = 'determinate';\n    private _value: number;\n    private _color = 'primary';\n\n    isBrowser: any = false;\n    @Inject(PLATFORM_ID) platformId: string;\n    /**\n    * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n    * because voiceover does not report the progress indicator as indeterminate if the aria min\n    * and/or max value are number values.\n    */\n    get _ariaValueMin() {\n        return this.mode === 'determinate' ? 0 : null;\n    }\n\n    get _ariaValueMax() {\n        return this.mode === 'determinate' ? 100 : null;\n    }\n\n    /** @docs-private */\n    get interdeterminateInterval() {\n        return this._interdeterminateInterval;\n    }\n    /** @docs-private */\n    set interdeterminateInterval(interval) {\n        clearInterval(this._interdeterminateInterval);\n        this._interdeterminateInterval = interval;\n    }\n\n    /**\n    * Clean up any animations that were running.\n    */\n    ngOnDestroy() {\n        this._cleanupIndeterminateAnimation();\n    }\n\n    /** The color of the progress-spinner. Can be primary, accent, or warn. */\n    @Input()\n    get color(): string { return this._color; }\n    set color(value: string) {\n        this._updateColor(value);\n    }\n\n    /** Value of the progress circle. It is bound to the host as the attribute aria-valuenow. */\n    @Input()\n    @HostBinding('attr.aria-valuenow')\n    get value(): any {\n        if (this.mode === 'determinate') {\n            return this._value;\n        }\n        return;\n    }\n    set value(v: number | any) {\n        if (v != null && this.mode === 'determinate') {\n            const newValue = clamp(v);\n            this._animateCircle(this.value || 0, newValue);\n            this._value = newValue;\n        }\n    }\n\n    /**\n    * Mode of the progress circle\n    *\n    * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n    * mode is bound to the host as the attribute host.\n    */\n    @HostBinding('attr.mode')\n    @Input()\n    get mode() {\n        return this._mode;\n    }\n    set mode(mode: ProgressSpinnerMode) {\n        if (mode !== this._mode) {\n            if (mode === 'indeterminate') {\n                this._startIndeterminateAnimation();\n            } else {\n                this._cleanupIndeterminateAnimation();\n                this._animateCircle(0, this._value);\n            }\n            this._mode = mode;\n        }\n    }\n\n    constructor(\n        private _ngZone: NgZone,\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2,\n        @Inject(PLATFORM_ID) platformId?: string | any\n    ) {\n        this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n\n    /**\n    * Animates the circle from one percentage value to another.\n    *\n    * @param animateFrom The percentage of the circle filled starting the animation.\n    * @param animateTo The percentage of the circle filled ending the animation.\n    * @param ease The easing function to manage the pace of change in the animation.\n    * @param duration The length of time to show the animation, in milliseconds.\n    * @param rotation The starting angle of the circle fill, with 0° represented at the top center\n    *    of the circle.\n    */\n    private _animateCircle(animateFrom: number, animateTo: number, ease: EasingFn = linearEase,\n        duration = DURATION_DETERMINATE, rotation = 0): void {\n\n        const id = ++this._lastAnimationId;\n        const startTime = Date.now();\n        const changeInValue = animateTo - animateFrom;\n\n        // No need to animate it if the values are the same\n        if (animateTo === animateFrom) {\n            this._renderArc(animateTo, rotation);\n        } else {\n            const animation = () => {\n                const elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n\n                this._renderArc(\n                    ease(elapsedTime, animateFrom, changeInValue, duration),\n                    rotation\n                );\n\n                // Prevent overlapping animations by checking if a new animation has been called for and\n                // if the animation has lasted longer than the animation duration.\n                if (id === this._lastAnimationId && elapsedTime < duration) {\n                    requestAnimationFrame(animation);\n                }\n            };\n\n            // Run the animation outside of Angular's zone, in order to avoid\n            // hitting ZoneJS and change detection on each frame.\n            this._ngZone.runOutsideAngular(animation);\n        }\n    }\n\n\n    /**\n    * Starts the indeterminate animation interval, if it is not already running.\n    */\n    private _startIndeterminateAnimation(): void {\n        let rotationStartPoint = 0;\n        let start = startIndeterminate;\n        let end = endIndeterminate;\n        const duration = DURATION_INDETERMINATE;\n        const animate = () => {\n            this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n            rotationStartPoint = (rotationStartPoint + end) % 100;\n            const temp = start;\n            start = -end;\n            end = -temp;\n        };\n\n        if (this.isBrowser) {\n            if (!this.interdeterminateInterval) {\n                this._ngZone.runOutsideAngular(() => {\n                    this.interdeterminateInterval = setInterval(animate, duration + 50, 0, false);\n                    animate();\n                });\n            }\n        }\n\n    }\n\n\n    /**\n    * Removes interval, ending the animation.\n    */\n    private _cleanupIndeterminateAnimation(): void {\n        this.interdeterminateInterval = null;\n    }\n\n    /**\n    * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n    * DOM attribute on the `<path>`.\n    */\n    private _renderArc(currentValue: number, rotation = 0): void {\n        // Caches the path reference so it doesn't have to be looked up every time.\n        const path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n\n        // Ensure that the path was found. This may not be the case if the\n        // animation function fires too early.\n        if (path) {\n            path.setAttribute('d', getSvgArc(currentValue, rotation));\n        }\n    }\n\n    /**\n    * Updates the color of the progress-spinner by adding the new palette class to the element\n    * and removing the old one.\n    */\n    private _updateColor(newColor: string): void {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    }\n\n    /** Sets the given palette class on the component element. */\n    private _setElementColor(color: string, isAdd: boolean) {\n        if (color != null && color !== '') {\n            // this._renderer.setElementClass(this._elementRef.nativeElement, `mat-${color}`, isAdd);\n            if (isAdd) {\n                this._renderer.addClass(this._elementRef.nativeElement, `mat-${color}`);\n            }\n        }\n    }\n}\n\n\n/**\n * <md-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-spinner> instance.\n */\n@Component({\n    selector: 'mdb-spinners, mat-spinner, mdb-progress-spinner',\n    template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg>\",\n    styles: [\":host { display: block; height: 100px; width: 100px; overflow: hidden; } :host svg { height: 100%; width: 100%; transform-origin: center; } :host path { fill: transparent; stroke-width: 10px; transition: stroke .3s cubic-bezier(.35, 0, .25, 1); } :host[mode=indeterminate] svg { animation-duration: 5.25s, 2.887s; animation-name: mat-progress-spinner-sporadic-rotate, mat-progress-spinner-linear-rotate; animation-timing-function: cubic-bezier(.35, 0, .25, 1), linear; animation-iteration-count: infinite; transition: none; } @keyframes mat-progress-spinner-linear-rotate { 0% { transform: rotate(0) } 100% { transform: rotate(360deg) } } @keyframes mat-progress-spinner-sporadic-rotate { 12.5% { transform: rotate(135deg) } 25% { transform: rotate(270deg) } 37.5% { transform: rotate(405deg) } 50% { transform: rotate(540deg) } 62.5% { transform: rotate(675deg) } 75% { transform: rotate(810deg) } 87.5% { transform: rotate(945deg) } 100% { transform: rotate(1080deg) } }\"],\n})\n\nexport class MdSpinnerComponent extends MdProgressSpinnerComponent implements OnDestroy {\n\n    @HostBinding('class.mat-spinner') true: any;\n\n    constructor(elementRef: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n        super(ngZone, elementRef, renderer);\n        this.mode = 'indeterminate';\n    }\n\n    ngOnDestroy() {\n        // The `ngOnDestroy` from `MdProgressSpinner` should be called explicitly, because\n        // in certain cases Angular won't call it (e.g. when using AoT and in unit tests).\n        super.ngOnDestroy();\n    }\n}\n\n\n/**\n* Module functions.\n*/\n\n/** Clamps a value to be between 0 and 100. */\nfunction clamp(v: number) {\n    return Math.max(0, Math.min(100, v));\n}\n\n\n/**\n* Converts Polar coordinates to Cartesian.\n*/\nfunction polarToCartesian(radius: number, pathRadius: number, angleInDegrees: number) {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n\n    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n\n\n/**\n* Easing function for linear animation.\n*/\nfunction linearEase(currentTime: number, startValue: number,\n    changeInValue: number, duration: number) {\n    return changeInValue * currentTime / duration + startValue;\n}\n\n\n/**\n * Easing function to match material design indeterminate animation.\n */\nfunction materialEase(currentTime: number, startValue: number,\n    changeInValue: number, duration: number) {\n    const time = currentTime / duration;\n    const timeCubed = Math.pow(time, 3);\n    const timeQuad = Math.pow(time, 4);\n    const timeQuint = Math.pow(time, 5);\n    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n\n\n/**\n* Determines the path value to define the arc.  Converting percentage values to to polar\n* coordinates on the circle, and then to cartesian coordinates in the viewport.\n*\n* @param currentValue The current percentage value of the progress circle, the percentage of the\n*    circle to fill.\n* @param rotation The starting point of the circle with 0 being the 0 degree point.\n* @return A string for an SVG path representing a circle filled from the starting point to the\n*    percentage value provided.\n*/\nfunction getSvgArc(currentValue: number, rotation: number) {\n    const startPoint = rotation || 0;\n    const radius = 50;\n    const pathRadius = 40;\n\n    const startAngle = startPoint * MAX_ANGLE;\n    const endAngle = currentValue * MAX_ANGLE;\n    const start = polarToCartesian(radius, pathRadius, startAngle);\n    const end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n    const arcSweep = endAngle < 0 ? 0 : 1;\n    let largeArcFlag: number;\n\n    if (endAngle < 0) {\n        largeArcFlag = endAngle >= -180 ? 0 : 1;\n    } else {\n        largeArcFlag = endAngle <= 180 ? 0 : 1;\n    }\n\n    return `M${start}A${pathRadius},${pathRadius} 0 ${largeArcFlag},${arcSweep} ${end}`;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  HostBinding,\n  Input,\n} from '@angular/core';\n\n// TODO(josephperrott): Benchpress tests.\n// TODO(josephperrott): Add ARIA attributes for progressbar \"for\".\n\n\n/**\n * <md-progress-bar> component.\n */\n@Component({\n    selector: 'mdb-progress-bar, mat-progress-bar',\n    template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"></div> <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div> \",\n    styles: [\":host { display:block; height:5px; overflow:hidden; position:relative; transform:translateZ(0); transition:opacity 250ms linear; width:100%; } :host .mat-progress-bar-element,:host .mat-progress-bar-fill::after { height:100%; position:absolute; width:100%; } :host .mat-progress-bar-background { background-repeat:repeat-x; background-size:10px 4px; display:none; } :host .mat-progress-bar-buffer { transform-origin:top left; transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1); } :host .mat-progress-bar-secondary { display:none; }  :host .mat-progress-bar-fill { animation:none; transform-origin:top left; transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1); } :host .mat-progress-bar-fill::after { animation:none; content:''; display:inline-block; left:0; } :host[mode=query] { transform:rotateZ(180deg); } :host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill { transition:none; } :host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary { animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear; left:-145.166611%; } :host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query]  .mat-progress-bar-primary.mat-progress-bar-fill::after { animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear; } :host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary { animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear; left:-54.888891%; display:block; } :host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query]  .mat-progress-bar-secondary.mat-progress-bar-fill::after { animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear; } :host[mode=buffer] .mat-progress-bar-background { animation:mat-progress-bar-background-scroll 250ms infinite linear; display:block; } :host-context([dir=rtl]) { transform:rotateY(180deg); } @keyframes mat-progress-bar-primary-indeterminate-translate { 0% { transform:translateX(0); } 20% { animation-timing-function:cubic-bezier(.5,0,.70173,.49582); transform:translateX(0); } 59.15% { animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635); transform:translateX(83.67142%); } 100% { transform:translateX(200.61106%); } } @keyframes mat-progress-bar-primary-indeterminate-scale { 0% { transform:scaleX(.08); } 36.65% { animation-timing-function:cubic-bezier(.33473,.12482,.78584,1); transform:scaleX(.08); } 69.15% { animation-timing-function:cubic-bezier(.06,.11,.6,1); transform:scaleX(.66148); }  100% { transform:scaleX(.08); } } @keyframes mat-progress-bar-secondary-indeterminate-translate { 0% { animation-timing-function:cubic-bezier(.15,0,.51506,.40969); transform:translateX(0); } 25% { animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371); transform:translateX(37.65191%); } 48.35% { animation-timing-function:cubic-bezier(.4,.62704,.6,.90203); transform:translateX(84.38617%); } 100% { transform:translateX(160.27778%); } } @keyframes mat-progress-bar-secondary-indeterminate-scale { 0% { animation-timing-function:cubic-bezier(.15,0,.51506,.40969); transform:scaleX(.08); } 19.15% { animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371); transform:scaleX(.4571) }  44.15% { animation-timing-function:cubic-bezier(.4,.62704,.6,.90203); transform:scaleX(.72796); } 100% { transform:scaleX(.08); } } @keyframes mat-progress-bar-background-scroll { to { transform:translateX(-10px) } }  \"],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class ProgressBarComponent {\n    /** Color of the progress bar. */\n    @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n\n    private _value = 0;\n\n    /** Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow. */\n    @Input()\n\n    @HostBinding('attr.aria-valuenow')\n    get value() { return this._value; }\n    set value(v: number) { this._value = clamp(v || 0); }\n\n    private _bufferValue = 0;\n\n    /** Buffer value of the progress bar. Defaults to zero. */\n    @Input()\n    get bufferValue() { return this._bufferValue; }\n    set bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n\n    /**\n    * Mode of the progress bar.\n    *\n    * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n    * 'determinate'.\n    * Mirrored to mode attribute.\n    */\n    @Input()\n    @HostBinding('attr.mode')\n    mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\n\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    _primaryTransform() {\n        const scale = this.value / 100;\n        return {transform: `scaleX(${scale})`};\n    }\n\n    /**\n    * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n    * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n    */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            const scale = this.bufferValue / 100;\n            return {transform: `scaleX(${scale})`};\n        }\n    }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n","import {\n  Injectable,\n  Inject\n} from '@angular/core';\n\nimport {\n  DOCUMENT\n} from '@angular/common';\n\nimport {\n  CONTAINER_QUERY,\n  COMPLETE_CLASS_NAME,\n  TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE,\n  EMULATE_ELEMENT_NAME\n} from './preloader.constants';\n\nimport {MDB_SPINNING_PRELOADER_TYPE} from './preloader.types';\n\n@Injectable()\nexport class MDBSpinningPreloader {\n  public _container: MDB_SPINNING_PRELOADER_TYPE;\n\n  public static errorHandler() {\n    throw new TypeError(TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE);\n  }\n\n  constructor(@Inject(DOCUMENT) public document: any) {\n    this.container = this.document.querySelector(CONTAINER_QUERY);\n  }\n\n  public start() {\n    this.container.classList.remove(COMPLETE_CLASS_NAME);\n  }\n\n  public stop() {\n    this.container.classList.add(COMPLETE_CLASS_NAME);\n  }\n\n  public get container(): MDB_SPINNING_PRELOADER_TYPE {\n    return this._container;\n  }\n\n  public set container(element) {\n    if (!element) {\n      // NgSpinningPreloader.errorHandler();\n    }\n\n    this._container = element || this.document.createElement(EMULATE_ELEMENT_NAME);\n  }\n\n}\n","\nconst CONTAINER_CLASS_NAME = 'spinning-preloader-container';\nconst COMPLETE_CLASS_NAME = 'complete';\nconst CONTAINER_QUERY = `.${CONTAINER_CLASS_NAME}`;\n\nconst CONTAINER_NAME: string = CONTAINER_CLASS_NAME.split('-').join(' ');\n\nexport const TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE =\n  `The ${CONTAINER_NAME} was not found`;\n\nexport const EMULATE_ELEMENT_NAME = 'div';\n\nexport {\n  CONTAINER_QUERY,\n  COMPLETE_CLASS_NAME,\n  CONTAINER_CLASS_NAME,\n  CONTAINER_NAME\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { SelectComponent } from './select.component';\nimport { SelectDropdownComponent } from './select-dropdown.component';\n\nexport { IOption } from './option-interface';\nexport { SELECT_VALUE_ACCESSOR, SelectComponent } from './select.component';\n\n@NgModule({\n  declarations: [\n    SelectComponent,\n    SelectDropdownComponent\n  ],\n  exports: [\n    SelectComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SelectModule { }\n","import {\n  Component, Input, OnChanges, OnInit, Output, EventEmitter, ExistingProvider, ViewChild,\n  ViewEncapsulation, forwardRef, ElementRef, HostListener, Renderer2, AfterViewInit, SimpleChanges, Inject, PLATFORM_ID\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { SelectDropdownComponent } from './select-dropdown.component';\nimport { IOption } from './option-interface';\nimport { Option } from './option';\nimport { OptionList } from './option-list';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectComponent),\n  multi: true\n};\n\n\n@Component({\n  selector: 'mdb-select',\n  template: \"<label *ngIf=\\\"label !== ''\\\" [ngClass]=\\\"{'active': labelActive }\\\"> {{label}} </label> <div #selection [attr.tabindex]=\\\"disabled ? null : 0\\\" [ngClass]=\\\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\\\" [tabindex]=\\\"tabindex\\\" (mousedown)=\\\"onSelectContainerClick($event)\\\" (focus)=\\\"onSelectContainerFocus()\\\" (blur)=\\\"onSelectContainerBlur()\\\" (keydown)=\\\"onSelectContainerKeydown($event)\\\" (window:click)=\\\"onWindowClick()\\\" (window:resize)=\\\"onWindowResize()\\\"> <div class=\\\"single form-control\\\" *ngIf=\\\"!multiple\\\"> <div class=\\\"value\\\" *ngIf=\\\"optionList.hasSelected()\\\"> {{optionList.selection[0].label}} </div> <div class=\\\"placeholder\\\" *ngIf=\\\"!optionList.hasSelected()\\\"> {{placeholderView}} </div> <div #clear class=\\\"clear\\\" *ngIf=\\\"allowClear && hasSelected\\\" (mousedown)=\\\"onClearSelectionClick($event)\\\"> &#x2715; </div> </div> <div class=\\\"multiple form-control\\\" *ngIf=\\\"multiple\\\"> <div class=\\\"placeholder\\\" *ngIf=\\\"!optionList.hasSelected()\\\"> {{placeholderView}} </div> <div class=\\\"option\\\"> <span *ngFor=\\\"let option of optionList.selection\\\"> {{option.label}}<span class=\\\"deselect-option\\\">,</span> </span> </div> </div> </div> <mdb-select-dropdown *ngIf=\\\"isOpen\\\" #dropdown [multiple]=\\\"multiple\\\" [dropdownHeight]=\\\"dropdownHeight\\\" [dropdownMaxHeight]=\\\"dropdownMaxHeight\\\" [optionList]=\\\"optionList\\\" [notFoundMsg]=\\\"notFoundMsg\\\" [highlightColor]=\\\"highlightColor\\\" [highlightTextColor]=\\\"highlightTextColor\\\" [filterEnabled]=\\\"filterEnabled\\\" [placeholder]=\\\"filterPlaceholder\\\" [top]=\\\"top\\\" [left]=\\\"left\\\" (close)=\\\"onDropdownClose($event)\\\" (optionClicked)=\\\"onDropdownOptionClicked($event)\\\" (singleFilterClick)=\\\"onSingleFilterClick()\\\" (singleFilterInput)=\\\"onSingleFilterInput($event)\\\" (singleFilterKeydown)=\\\"onSingleFilterKeydown($event)\\\"> </mdb-select-dropdown>\",\n  providers: [SELECT_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SelectComponent implements ControlValueAccessor, OnChanges, OnInit, AfterViewInit {\n\n  @Input() options: Array<IOption>;\n  @Input() public customClass = '';\n  @Input() allowClear = false;\n  @Input() disabled = false;\n  @Input() highlightColor: string;\n  @Input() highlightTextColor: string;\n  @Input() multiple = false;\n  @Input() noFilter = 0;\n  @Input() notFoundMsg = 'No results found';\n  @Input() placeholder = '';\n  @Input() filterPlaceholder = '';\n  @Input() label = '';\n  @Input() filterEnabled = false;\n  @Input() visibleOptions: number;\n  @Input() tabindex: number;\n\n  @Output() opened: EventEmitter<any> = new EventEmitter<any>();\n  @Output() closed: EventEmitter<any> = new EventEmitter<any>();\n  @Output() selected: EventEmitter<IOption> = new EventEmitter<IOption>();\n  @Output() deselected: EventEmitter<IOption | IOption[]> =\n    new EventEmitter<IOption | IOption[]>();\n  @Output() noOptionsFound: EventEmitter<string> =\n    new EventEmitter<string>();\n  @Output() changed = new EventEmitter();\n  @ViewChild('selection') selectionSpan: any;\n  @ViewChild('dropdown') dropdown: SelectDropdownComponent;\n  @ViewChild('filterInput') filterInput: any;\n  @ViewChild('clear') clearButton: any;\n\n  // Angular lifecycle hooks.\n  KEYS: any = {\n    BACKSPACE: 8,\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    UP: 38,\n    DOWN: 40\n  };\n\n  _value: Array<any> = [];\n  optionList: OptionList;\n  optionsLength: number;\n  visibleOptionsDefault = 4;\n  // Selection state variables.\n  hasSelected = false;\n  isBrowser: boolean;\n\n  // View state variables.\n  hasFocus = false;\n  isOpen = false;\n  isBelow = true;\n  filterInputWidth = 1;\n  isDisabled = false;\n  placeholderView = '';\n  labelActive = false;\n\n  clearClicked = false;\n  selectContainerClicked = false;\n\n  optionHeight = 44;\n  dropdownHeight: number;\n  dropdownMaxHeight: number;\n\n  // Width and position for the dropdown container.\n  width: number;\n  top: number;\n  left: number;\n\n\n  itemsBefore: Array<any> = [];\n\n\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  /** Event handlers. **/\n\n  @HostListener('document:click', ['$event']) closeSelect($event: any) {\n    if (!this.isChild($event.target) && this.isOpen) {\n      this.closeDropdown();\n    }\n  }\n\n  // Angular lifecycle hooks.\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(PLATFORM_ID) platformId: string) {\n      this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngOnInit() {\n    this.placeholderView = this.placeholder;\n    this.updateDropdownHeight();\n  }\n\n  updateDropdownHeight() {\n    this.dropdownMaxHeight = this.visibleOptions ? this.optionHeight * this.visibleOptions : this.optionHeight * this.visibleOptionsDefault;\n    this.dropdownHeight = this.optionHeight * this.optionList.options.length;\n  }\n\n  ngAfterViewInit() {\n    this.updateState();\n    this.updateLabelState();\n    this.setArrowUpIcon();\n    this.setArrowDownIcon();\n    this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'hidden');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('options')) {\n      this.updateOptionsList(changes.options.currentValue);\n      this.updateState();\n      this.updateDropdownHeight();\n      this.updatePosition();\n      this.changed.emit({ previousValue: changes.options.previousValue, currentValue: changes.options.currentValue });\n    }\n    if (changes.hasOwnProperty('noFilter')) {\n      const numOptions: number = this.optionList.options.length;\n      const minNumOptions: number = changes['noFilter'].currentValue;\n      this.filterEnabled = numOptions >= minNumOptions;\n    }\n\n    if (changes.hasOwnProperty('placeholder')) {\n      this.updateState();\n    }\n  }\n\n  setArrowUpIcon() {\n    const div = this.renderer.createElement('div');\n    this.renderer.appendChild(this.selectionSpan.nativeElement.children[0], div);\n    this.selectionSpan.nativeElement.children[0].lastChild.innerHTML = '&#x25BC;';\n    this.renderer.addClass(this.selectionSpan.nativeElement.children[0].lastChild, 'toggle');\n\n  }\n\n  setArrowDownIcon() {\n    const div = this.renderer.createElement('div');\n    this.renderer.appendChild(this.selectionSpan.nativeElement.children[0], div);\n    this.selectionSpan.nativeElement.children[0].lastChild.innerHTML = '&#x25B2;';\n    this.renderer.addClass(this.selectionSpan.nativeElement.children[0].lastChild, 'toggle');\n  }\n\n\n  isChild(elemnt: any) {\n    let node = elemnt.parentNode;\n    while (node != null) {\n      if (node === this.el.nativeElement) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  // Window.\n\n  onWindowClick() {\n    if (!this.selectContainerClicked && !this.multiple) {\n      this.closeDropdown();\n    }\n    this.clearClicked = false;\n    this.selectContainerClicked = false;\n  }\n\n  onWindowResize() {\n    this.updateWidth();\n  }\n\n  // Select container.\n\n  onSelectContainerClick(event: any) {\n      if (this.clearButton && event.target === this.clearButton.nativeElement) {\n        return;\n      } else {\n        this.selectContainerClicked = true;\n        this.toggleDropdown();\n        if (this.labelActive && !this.hasSelected && !this.placeholder) {\n          this.labelActive = false;\n        } else {\n          this.labelActive = true;\n      }\n  }\n  }\n\n  onSelectContainerFocus() {\n    this.labelActive = true;\n    this.openDropdown();\n  }\n\n  onSelectContainerBlur() {\n    setTimeout(() => {\n      this.updateLabelState();\n    }, 150);\n    if (!this.isOpen && !this.disabled) {\n      this.onTouched();\n    }\n  }\n\n  onSelectContainerKeydown(event: any) {\n    this.handleSelectContainerKeydown(event);\n  }\n\n  // Dropdown container.\n\n  onDropdownOptionClicked(option: Option) {\n    this.multiple ?\n      this.toggleSelectOption(option) : this.selectOption(option);\n  }\n\n  onDropdownClose(focus: any) {\n    this.closeDropdown(focus);\n  }\n\n  // Single filter input.\n  onSingleFilterClick() {\n    this.selectContainerClicked = true;\n  }\n\n  onSingleFilterInput(term: string) {\n    const hasShown: boolean = this.optionList.filter(term);\n    if (!hasShown) {\n      this.noOptionsFound.emit(term);\n    }\n  }\n\n  onSingleFilterKeydown(event: any) {\n    this.handleSingleFilterKeydown(event);\n  }\n\n  // Multiple filter input.\n\n  onMultipleFilterInput(event: any) {\n    if (!this.isOpen) {\n      this.openDropdown();\n    }\n    this.updateFilterWidth();\n    setTimeout(() => {\n      const term: string = event.target.value;\n      const hasShown: boolean = this.optionList.filter(term);\n      if (!hasShown) {\n        this.noOptionsFound.emit(term);\n      }\n    });\n  }\n\n  onMultipleFilterKeydown(event: any) {\n    this.handleMultipleFilterKeydown(event);\n  }\n\n  // Single clear select.\n\n  onClearSelectionClick(event: any) {\n    event.preventDefault();\n    this.clearClicked = true;\n    this.clearSelection();\n    this.placeholderView = this.placeholder;\n    this.labelActive = false;\n  }\n\n  // Multiple deselect option.\n\n  onDeselectOptionClick(option: Option) {\n    this.clearClicked = true;\n    this.deselectOption(option);\n  }\n\n  /** API. **/\n\n  // TODO fix issues with global click/key handler that closes the dropdown.\n  open() {\n    this.openDropdown();\n  }\n\n  close() {\n    this.closeDropdown();\n    this.onTouched();\n  }\n\n\n  get value(): string | string[] {\n    return this.multiple ? this._value : this._value[0];\n  }\n\n  set value(v: string | string[]) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n      v = [];\n    } else if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n      v = [v];\n    } else if (!Array.isArray(v)) {\n      throw new TypeError('Value must be a string or an array.');\n    }\n\n    this.optionList.value = v;\n    this._value = v;\n    this.updateState();\n  }\n\n  clear() {\n    this.clearSelection();\n  }\n\n  select(value: string) {\n    this.optionList.getOptionsByValue(value).forEach((option) => {\n      this.selectOption(option);\n    });\n  }\n\n  /** ControlValueAccessor interface methods. **/\n\n  writeValue(value: any) {\n    this.value = value;\n\n    if (!value) {\n      this.hasSelected = false;\n      this.updateLabelState();\n  }\n  }\n\n  registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n\n  valueChanged() {\n    this._value = this.optionList.value;\n    this.updateState();\n    this.onChange(this.value);\n  }\n\n  updateState() {\n    this.placeholderView = this.placeholder;\n    setTimeout(() => {\n      this.updateFilterWidth();\n    });\n  }\n\n  /** Initialization. **/\n\n  updateOptionsList(options: Array<IOption>) {\n    this.optionList = new OptionList(options);\n    this.optionList.value = this._value;\n  }\n\n  updateLabelState() {\n    if ( !this.placeholder && !this.hasSelected ) {\n      setTimeout(() => {\n        this.labelActive = false;\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.labelActive = true;\n      }, 0);\n    }\n  }\n\n  /** Dropdown. **/\n  toggleDropdown() {\n    if (!this.isDisabled) {\n      this.isOpen ? this.closeDropdown(true) : this.openDropdown();\n    }\n  }\n\n  openDropdown() {\n    this.renderer.setStyle(this.el.nativeElement, 'z-index', '1000');\n    if (!this.isOpen) {\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'visible');\n      // tslint:disable-next-line:max-line-length\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].children[this.selectionSpan.nativeElement.children[0].children.length - 2], 'visibility', 'hidden');\n      this.updateWidth();\n        this.updatePosition();\n      this.isOpen = true;\n      // if (this.multiple && this.filterEnabled) {\n      //   this.filterInput.nativeElement.focus();\n      // }\n      this.opened.emit(this);\n    }\n  }\n\n  closeDropdown(focus: boolean = false) {\n    const container = this.el.nativeElement.lastElementChild.classList;\n    this.renderer.removeStyle(this.el.nativeElement, 'z-index');\n    container.remove('fadeInSelect');\n    if (this.isOpen) {\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].lastChild, 'visibility', 'hidden');\n      // tslint:disable-next-line:max-line-length\n      this.renderer.setStyle(this.selectionSpan.nativeElement.children[0].children[this.selectionSpan.nativeElement.children[0].children.length - 2], 'visibility', 'visible');\n    }\n    setTimeout(() => {\n\n      if (this.isOpen) {\n        this.clearFilterInput();\n        this.isOpen = false;\n        if (focus) {\n          this.focus();\n        }\n        this.closed.emit(this);\n      }\n    }, 0);\n    this.onTouched();\n  }\n\n  /** Select. **/\n\n  selectOption(option: Option) {\n    if (!option.selected) {\n      this.optionList.select(option, this.multiple);\n      this.valueChanged();\n      this.selected.emit(option.wrappedOption);\n      this.hasSelected = true;\n      this.updateLabelState();\n    }\n  }\n\n  deselectOption(option: Option) {\n    if (option.selected) {\n      this.optionList.deselect(option);\n      this.valueChanged();\n      this.placeholderView = this.placeholder;\n\n      if (this.optionList.selection.length === 0) {\n        this.hasSelected = false;\n        this.updateLabelState();\n      }\n      this.deselected.emit(option.wrappedOption);\n    }\n  }\n\n  clearSelection() {\n    const selection: Array<Option> = this.optionList.selection;\n    if (selection.length > 0) {\n      this.optionList.clearSelection();\n      this.valueChanged();\n      setTimeout(() => {\n        this.hasSelected = false;\n      }, 0);\n\n      if (selection.length === 1) {\n        this.deselected.emit(selection[0].wrappedOption);\n      } else {\n        this.deselected.emit(selection.map((option) => {\n          return option.wrappedOption;\n        }));\n      }\n    }\n  }\n\n  toggleSelectOption(option: Option) {\n    option.selected ?\n      this.deselectOption(option) : this.selectOption(option);\n  }\n\n  selectHighlightedOption() {\n    const option: Option = this.optionList.highlightedOption;\n    if (option !== null) {\n      this.selectOption(option);\n      this.closeDropdown(true);\n    }\n  }\n\n  deselectLast() {\n    const sel: Array<Option> = this.optionList.selection;\n\n    if (sel.length > 0) {\n      const option: Option = sel[sel.length - 1];\n      this.deselectOption(option);\n      this.setMultipleFilterInput(option.label + ' ');\n    }\n  }\n\n  /** Filter. **/\n\n  clearFilterInput() {\n    try {\n      if (this.multiple && this.filterEnabled) {\n        this.filterInput.nativeElement.value = '';\n      } else {\n        this.dropdown.clearFilterInput();\n      }\n    } catch (error) { }\n  }\n\n  setMultipleFilterInput(value: string) {\n    if (this.filterEnabled) {\n      this.filterInput.nativeElement.value = value;\n    }\n  }\n\n  handleSelectContainerKeydown(event: any) {\n    const key = event.which;\n\n    if (this.isOpen) {\n      if (key === this.KEYS.ESC ||\n        (key === this.KEYS.UP && event.altKey)) {\n        this.closeDropdown(true);\n      } else if (key === this.KEYS.TAB) {\n        this.closeDropdown();\n      } else if (key === this.KEYS.ENTER) {\n        this.selectHighlightedOption();\n      } else if (key === this.KEYS.UP) {\n        this.optionList.highlightPreviousOption();\n        this.dropdown.moveHighlightedIntoView();\n        if (!this.filterEnabled) {\n          event.preventDefault();\n        }\n      } else if (key === this.KEYS.DOWN) {\n        this.optionList.highlightNextOption();\n        this.dropdown.moveHighlightedIntoView();\n        if (!this.filterEnabled) {\n          event.preventDefault();\n        }\n      }\n    } else {\n      if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\n        (key === this.KEYS.DOWN && event.altKey)) {\n\n        /* FIREFOX HACK:\n         *\n         * The setTimeout is added to prevent the enter keydown event\n         * to be triggered for the filter input field, which causes\n         * the dropdown to be closed again.\n         */\n        setTimeout(() => { this.openDropdown(); });\n      }\n    }\n\n  }\n\n  handleMultipleFilterKeydown(event: any) {\n    const key = event.which;\n\n    if (key === this.KEYS.BACKSPACE) {\n      if (this.hasSelected && this.filterEnabled &&\n        this.filterInput.nativeElement.value === '') {\n        this.deselectLast();\n      }\n    }\n  }\n\n  handleSingleFilterKeydown(event: any) {\n    const key = event.which;\n\n    if (key === this.KEYS.ESC || key === this.KEYS.TAB\n      || key === this.KEYS.UP || key === this.KEYS.DOWN\n      || key === this.KEYS.ENTER) {\n      this.handleSelectContainerKeydown(event);\n    }\n  }\n\n  /** View. **/\n\n  focus() {\n    this.hasFocus = true;\n    try {\n      if (this.filterEnabled) {\n        this.filterInput.nativeElement.focus();\n      } else {\n        this.selectionSpan.nativeElement.focus();\n      }\n    } catch (error) { }\n\n  }\n\n  blur() {\n    this.hasFocus = false;\n    this.selectionSpan.nativeElement.blur();\n  }\n\n  updateWidth() {\n    this.width = this.selectionSpan.nativeElement.offsetWidth;\n  }\n\n  updatePosition() {\n    const docEl: any = document.documentElement;\n    let elPosition = 0;\n    if (this.isBrowser) {\n      elPosition = this.el.nativeElement.getBoundingClientRect().bottom + this.document.documentElement.scrollTop;\n    }\n    const selectSpan = this.selectionSpan.nativeElement;\n    this.left = selectSpan.offsetLeft;\n    const labelHeight = 20;\n    const bottom: any = docEl.scrollTop + docEl.clientHeight;\n    const dropdownHeight = this.dropdownMaxHeight > this.dropdownHeight ? this.dropdownHeight : this.dropdownMaxHeight;\n    const selectHeight = dropdownHeight + selectSpan.offsetHeight + labelHeight;\n\n    if (elPosition + dropdownHeight >= bottom) {\n      this.top = selectSpan.offsetHeight - selectHeight;\n    } else {\n      this.top = selectSpan.offsetHeight;\n    }\n  }\n\n  updateFilterWidth() {\n    if (typeof this.filterInput !== 'undefined') {\n      const value: string = this.filterInput.nativeElement.value;\n      this.filterInputWidth = value.length === 0 ?\n        1 + this.placeholderView.length * 10 : 1 + value.length * 10;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation, ElementRef, HostListener, Renderer2, ChangeDetectorRef\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Option } from './option';\nimport { OptionList } from './option-list';\n\n@Component({\n  selector: 'mdb-select-dropdown',\n  template: \"<div class=\\\"dropdown-content\\\" #dropdownContent [ngStyle]=\\\"{'top.px': top, 'left.px': left, 'width.px': width}\\\"  [@dropdownAnimation]=\\\"{value: state, params: {startHeight: startHeight, endHeight: endHeight}}\\\"> <div class=\\\"filter\\\" *ngIf=\\\"filterEnabled\\\"> <input #filterInput autocomplete=\\\"on\\\" [placeholder]=\\\"placeholder\\\" (click)=\\\"onSingleFilterClick()\\\" (input)=\\\"onSingleFilterInput($event)\\\" (keydown)=\\\"onSingleFilterKeydown($event)\\\"> </div> <div class=\\\"options\\\" #optionsList> <ul class=\\\"select-dropdown\\\" [ngClass]=\\\"{'multiple-select-dropdown': multiple}\\\" (wheel)=\\\"onOptionsWheel($event)\\\"> <li *ngFor=\\\"let option of optionList.filtered\\\" [ngClass]=\\\"{'active': option.highlighted, 'selected': option.selected, 'disabled': option.disabled, 'optgroup': option.group}\\\" [ngStyle]=\\\"getOptionStyle(option)\\\" (click)=\\\"onOptionClick(option)\\\" (mouseover)=\\\"onOptionMouseover(option)\\\"> <img class=\\\"rounded-circle\\\" [src]=\\\"option.icon\\\" *ngIf=\\\"option.icon !== ''\\\"> <span class=\\\"select-option\\\" *ngIf=\\\"!multiple\\\">{{option.label}}</span> <span class=\\\"filtrable\\\" *ngIf=\\\"multiple\\\"> <input type=\\\"checkbox\\\" [checked]=\\\"option.selected\\\" class=\\\"form-check-input {{customClass}}\\\"> <label></label> {{option.label}} </span> </li> <li *ngIf=\\\"!this.hasOptionsItems\\\" class=\\\"message disabled\\\"> <span>{{notFoundMsg}}</span> </li> </ul> </div> </div>\",\n  encapsulation: ViewEncapsulation.None,\n  animations: [trigger('dropdownAnimation', [\n    state('invisible', style({ opacity: 0, transform: 'scaleY(0.6)' })),\n    state('visible', style({ opacity: 1, transform: 'scaleY(1)' })),\n    transition('invisible => visible', animate('200ms ease-in')),\n    transition('visible => invisible', animate('200ms ease-in'))\n  ])]\n})\nexport class SelectDropdownComponent\n  implements AfterViewInit, OnChanges, OnInit {\n\n  @Input() filterEnabled: boolean;\n  @Input() highlightColor: string;\n  @Input() highlightTextColor: string;\n  @Input() left: number;\n  @Input() multiple: boolean;\n  @Input() notFoundMsg: string;\n  @Input() optionList: OptionList;\n  @Input() top: number;\n  @Input() width: number;\n  @Input() placeholder: string;\n  @Input() customClass = '';\n  @Input() visibleOptions = 4;\n  @Input() dropdownHeight: number;\n  @Input() dropdownMaxHeight: number;\n  @Output() close = new EventEmitter<boolean>();\n  @Output() optionClicked = new EventEmitter<Option>();\n  @Output() singleFilterClick = new EventEmitter<null>();\n  @Output() singleFilterInput = new EventEmitter<string>();\n  @Output() singleFilterKeydown = new EventEmitter<any>();\n\n  @ViewChild('filterInput') filterInput: any;\n  @ViewChild('optionsList') optionsList: any;\n  @ViewChild('dropdownContent') dropdownContent: ElementRef;\n  disabledColor = '#fff';\n  disabledTextColor = '9e9e9e';\n\n  // Used in sliding-down animation\n  state = 'invisible';\n  startHeight: any = 0;\n  endHeight: any = 45;\n\n  public hasOptionsItems = true;\n\n  constructor(private _elementRef: ElementRef, public _renderer: Renderer2, private cdRef: ChangeDetectorRef) { }\n\n  /** Event handlers. **/\n\n  // Angular life cycle hooks.\n\n  @HostListener('keyup') onkeyup() {\n    this.hasOptionsItems = this._elementRef.nativeElement.childNodes[0].children[1].children[0].children.length >= 1 ? true : false;\n  }\n\n\n  ngOnInit() {\n    this.optionsReset();\n    this.setDropdownHeight();\n    this.setVisibleOptionsNumber();\n  }\n\n  setDropdownHeight() {\n    this._renderer.setStyle(this.optionsList.nativeElement, 'height', this.dropdownHeight + 'px');\n  }\n\n  setVisibleOptionsNumber() {\n    this._renderer.setStyle(this.optionsList.nativeElement, 'max-height', this.dropdownMaxHeight + 'px');\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.hasOwnProperty('optionList')) {\n      this.optionsReset();\n    }\n\n    const container = this._elementRef.nativeElement.classList;\n    setTimeout(() => { container.add('fadeInSelect'); }, 200);\n  }\n\n  ngAfterViewInit() {\n    // Sliding-down animation\n    this.endHeight = this.dropdownContent.nativeElement.clientHeight;\n    this.state = (this.state === 'invisible' ? 'visible' : 'invisible');\n    this.cdRef.detectChanges();\n\n    // Dropping up dropdown content of Material Select when near bottom edge of the screen\n    // Need fix to proper work with sliding animation\n\n    // tslint:disable-next-line:max-line-length\n    // if (window.innerHeight - this._elementRef.nativeElement.getBoundingClientRect().bottom < this.dropdownContent.nativeElement.clientHeight) {\n    //   this._renderer.setStyle(this.dropdownContent.nativeElement, 'top', - this.dropdownContent.nativeElement.clientHeight + 'px');\n    // }\n    if (this.multiple) {\n      this._elementRef.nativeElement.querySelectorAll('.disabled.optgroup').forEach((element: any) => {\n        this._renderer.setStyle(element.firstElementChild.lastElementChild, 'display', 'none');\n      });\n    }\n    try {\n      if (!(this._elementRef.nativeElement.parentElement == undefined)) {\n        setTimeout(() => {\n          if (this._elementRef.nativeElement.parentElement.attributes.customClass !== undefined) {\n            this.customClass = this._elementRef.nativeElement.parentElement.attributes.customClass.value;\n          }\n        }, 0);\n      }\n    } catch (error) {\n    }\n\n    this.moveHighlightedIntoView();\n    setTimeout(() => {\n      if (this.filterEnabled) {\n        this.filterInput.nativeElement.focus();\n      }\n    }, 0);\n  }\n  // Filter input (single select).\n\n  onSingleFilterClick() {\n    this.singleFilterClick.emit(null);\n  }\n\n  onSingleFilterInput(event: any) {\n    this.singleFilterInput.emit(event.target.value);\n  }\n\n  onSingleFilterKeydown(event: any) {\n    this.singleFilterKeydown.emit(event);\n  }\n\n  // Options list.\n\n  onOptionsWheel(event: any) {\n    this.handleOptionsWheel(event);\n  }\n\n  onOptionMouseover(option: Option) {\n    this.optionList.highlightOption(option);\n  }\n\n  onOptionClick(option: Option) {\n    this.optionClicked.emit(option);\n  }\n\n  /** Initialization. **/\n\n  private optionsReset() {\n    this.optionList.filter('');\n    this.optionList.highlight();\n  }\n\n  /** View. **/\n\n  getOptionStyle(option: Option): any {\n    if (option.highlighted) {\n      const optionStyle: any = {};\n\n      if (typeof this.highlightColor !== 'undefined') {\n        optionStyle['background-color'] = this.highlightColor;\n      }\n      if (typeof this.highlightTextColor !== 'undefined') {\n        optionStyle['color'] = this.highlightTextColor;\n      }\n      return optionStyle;\n    } else {\n      return {};\n    }\n  }\n\n  clearFilterInput() {\n    if (this.filterEnabled) {\n      this.filterInput.nativeElement.value = '';\n    }\n  }\n\n  moveHighlightedIntoView() {\n\n    const list = this.optionsList.nativeElement;\n    const listHeight = list.offsetHeight;\n\n    const itemIndex = this.optionList.getHighlightedIndex();\n\n    if (itemIndex > -1) {\n      const item = list.children[0].children[itemIndex];\n      const itemHeight = item.offsetHeight;\n\n      const itemTop = itemIndex * itemHeight;\n      const itemBottom = itemTop + itemHeight;\n\n      const viewTop = list.scrollTop;\n      const viewBottom = viewTop + listHeight;\n\n      if (itemBottom > viewBottom) {\n        list.scrollTop = itemBottom - listHeight;\n      } else if (itemTop < viewTop) {\n        list.scrollTop = itemTop;\n      }\n\n    }\n  }\n\n  private handleOptionsWheel(e: any) {\n    const div = this.optionsList.nativeElement;\n    const atTop = div.scrollTop === 0;\n    const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\n\n    if (atTop && e.deltaY < 0) {\n      e.preventDefault();\n    } else if (atBottom && e.deltaY > 0) {\n      e.preventDefault();\n    }\n\n  }\n\n}\n","import {Option} from './option';\nimport {IOption} from './option-interface';\nimport {Diacritics} from './diacritics';\n\nexport class OptionList {\n\n  private _options: Array<Option>;\n\n  /* Consider using these for performance improvement. */\n  // private _selection: Array<Option>;\n  // private _filtered: Array<Option>;\n  // private _value: Array<string>;\n\n  // private _highlightedOption: Option = null;\n  private _highlightedOption: Option | any = null;\n  private _hasShown: boolean;\n\n  public setToNullValue: any = null;\n  // v0 and v1 are assumed not to be undefined or null.\n  static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n    if (v0.length !== v1.length) {\n      return false;\n    }\n\n    const a: Array<string> = v0.slice().sort();\n    const b: Array<string> = v1.slice().sort();\n\n    return a.every((v, i) => {\n      return v === b[i];\n    });\n  }\n\n  constructor(options: Array<IOption>) {\n\n    if (typeof options === 'undefined' || options === null) {\n      options = [];\n    }\n\n    this._options = options.map((option) => {\n      const o: Option = new Option(option);\n      if (option.disabled) {\n        o.disabled = true;\n      }\n      if (option.group) {\n        o.disabled = true;\n        o.group = true;\n      }\n      return o;\n    });\n\n    this._hasShown = this._options.length > 0;\n    this.highlight();\n  }\n\n  /** Options. **/\n\n  get options(): Array<Option> {\n    return this._options;\n  }\n\n  getOptionsByValue(value: string): Array<Option> {\n    return this.options.filter((option) => {\n      return option.value === value;\n    });\n  }\n\n  /** Value. **/\n\n  get value(): Array<string> {\n    return this.selection.map((selectedOption) => {\n      return selectedOption.value;\n    });\n  }\n\n  set value(v: Array<string>) {\n    v = typeof v === 'undefined' || v === null ? [] : v;\n\n    this.options.forEach((option) => {\n      option.selected = v.indexOf(option.value) > -1;\n    });\n  }\n\n  /** Selection. **/\n\n  get selection(): Array<Option> {\n    return this.options.filter((option) => {\n      return option.selected;\n    });\n  }\n\n  select(option: Option, multiple: boolean) {\n    if (!multiple) {\n      this.clearSelection();\n    }\n    option.selected = true;\n  }\n\n  deselect(option: Option) {\n    option.selected = false;\n  }\n\n  clearSelection() {\n    this.options.forEach((option) => {\n      option.selected = false;\n    });\n  }\n\n  /** Filter. **/\n\n  get filtered(): Array<Option> {\n    return this.options.filter((option) => {\n      return option.shown;\n    });\n  }\n\n  filter(term: string): boolean {\n    let anyShown = false;\n\n    if (term.trim() === '') {\n      this.resetFilter();\n      anyShown = this.options.length > 0;\n    } else {\n      this.options.forEach((option) => {\n        const l: string = Diacritics.strip(option.label).toUpperCase();\n        const t: string = Diacritics.strip(term).toUpperCase();\n        option.shown = l.indexOf(t) === 0;\n\n        if (option.shown) {\n          anyShown = true;\n        }\n      });\n\n    }\n\n    this.highlight();\n    this._hasShown = anyShown;\n\n    return anyShown;\n  }\n\n  private resetFilter() {\n    this.options.forEach((option) => {\n      option.shown = true;\n    });\n  }\n\n  /** Highlight. **/\n\n  get highlightedOption(): Option {\n    return this._highlightedOption;\n  }\n\n  highlight() {\n    const option: Option = this.hasShownSelected() ?\n      this.getFirstShownSelected() : this.getFirstShown();\n    this.highlightOption(option);\n  }\n\n  highlightOption(option: Option) {\n    this.clearHighlightedOption();\n\n    if (option !== null) {\n      option.highlighted = true;\n      this._highlightedOption = option;\n    }\n  }\n\n  highlightNextOption() {\n    const shownOptions = this.filtered;\n    const index = this.getHighlightedIndexFromList(shownOptions);\n\n    if (index > -1 && index < shownOptions.length - 1) {\n      this.highlightOption(shownOptions[index + 1]);\n    }\n  }\n\n  highlightPreviousOption() {\n    const shownOptions = this.filtered;\n    const index = this.getHighlightedIndexFromList(shownOptions);\n\n    if (index > 0) {\n      this.highlightOption(shownOptions[index - 1]);\n    }\n  }\n\n  private clearHighlightedOption() {\n    if (this.highlightedOption !== null) {\n      this.highlightedOption.highlighted = false;\n      this._highlightedOption = null;\n    }\n  }\n\n  private getHighlightedIndexFromList(options: Array<Option>) {\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].highlighted) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  getHighlightedIndex() {\n    return this.getHighlightedIndexFromList(this.filtered);\n  }\n\n  /** Util. **/\n\n  get hasShown(): boolean {\n    return this._hasShown;\n  }\n\n  hasSelected() {\n    return this.options.some((option) => {\n      return option.selected;\n    });\n  }\n\n  hasShownSelected() {\n    return this.options.some((option) => {\n      return option.shown && option.selected;\n    });\n  }\n\n  private getFirstShown(): Option {\n    for (const option of this.options) {\n      if (option.shown) {\n        return option;\n      }\n    }\n    // return null;\n    return this.setToNullValue;\n  }\n\n  private getFirstShownSelected(): Option {\n    for (const option of this.options) {\n      if (option.shown && option.selected) {\n        return option;\n      }\n    }\n    // return null;\n    return this.setToNullValue;\n  }\n\n}\n","import {IOption} from './option-interface';\n\nexport class Option {\n\n  wrappedOption: IOption;\n\n  disabled: boolean;\n  highlighted: boolean;\n  selected: boolean;\n  shown: boolean;\n  group: boolean;\n\n  constructor(option: IOption) {\n    this.wrappedOption = option;\n\n    this.disabled = false;\n    this.highlighted = false;\n    this.selected = false;\n    this.shown = true;\n    this.group = false;\n  }\n\n  get value(): string {\n    return this.wrappedOption.value;\n  }\n\n  get label(): string {\n    return this.wrappedOption.label;\n  }\n\n  get icon(): string {\n    if (this.wrappedOption.icon !== '' && this.wrappedOption.icon !== undefined) {\n      return this.wrappedOption.icon;\n    } else {\n      return '';\n    }\n\n  }\n\n}\n\n","export class Diacritics {\n\n  static DIACRITICS: any = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n  };\n\n  static strip(text: string): string {\n\n    const match = (a: string): string => {\n      return this.DIACRITICS[a] || a;\n    };\n\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ImageModalComponent } from './image-popup';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [ImageModalComponent],\n  exports: [ImageModalComponent]\n})\nexport class LightBoxModule {\n}\n","import { Component, Input, Output, ElementRef, EventEmitter, OnInit, HostListener, PLATFORM_ID, Inject, Renderer2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\ndeclare var screenfull: any;\n\nimport 'hammerjs';\n\n\n@Component({\n  selector: 'mdb-image-modal',\n  template: \"<div class=\\\"ng-gallery mdb-lightbox {{ type }}\\\" *ngIf=\\\"showRepeat\\\">  <figure class=\\\"col-md-4\\\" *ngFor =\\\"let i of modalImages; let index = index\\\"> <img src=\\\"{{ !i.thumb ? i.img : i.thumb }}\\\" class=\\\"ng-thumb\\\" (click)=\\\"openGallery(index)\\\" alt=\\\"Image {{ index + 1 }}\\\" /> </figure> </div> <div  tabindex=\\\"0\\\" class=\\\"ng-overlay\\\" [class.hide_lightbox]=\\\"opened == false\\\"> <div class=\\\"top-bar\\\" style='z-index: 100000'> <span class=\\\"info-text\\\">{{ currentImageIndex + 1 }}/{{ modalImages.length }}</span>     <a class=\\\"close-popup\\\" (click)=\\\"closeGallery()\\\" (click)=\\\"toggleRestart()\\\"></a> <a *ngIf=\\\"!is_iPhone_or_iPod\\\" class=\\\"fullscreen-toogle\\\" [class.toggled]='fullscreen' (click)=\\\"fullScreen()\\\"></a> <a class=\\\"zoom-toogle\\\" [class.zoom]='zoom' (click)=\\\"toggleZoomed()\\\" *ngIf=\\\"!isMobile\\\"></a> </div> <div class=\\\"ng-gallery-content\\\"> <!--<img *ngIf=\\\"!loading\\\" src=\\\"{{imgSrc}}\\\" (mousedown)=\\\"checkEvent($event)\\\" (mouseup)=\\\"setZoom($event)\\\" [class.zoom]='zoom' [class.smooth]='smooth' class=\\\"effect\\\" (swipeleft)=\\\"swipe($event, $event.type)\\\" (swiperight)=\\\"swipe($event, $event.type)\\\"/>--> <img *ngIf=\\\"!loading\\\" src=\\\"{{imgSrc}}\\\" [class.smooth]='smooth' class=\\\"effect\\\" (swipeleft)=\\\"swipe($event.type)\\\" (swiperight)=\\\"swipe($event.type)\\\" (click)=\\\"toggleZoomed()\\\" style=\\\"transform: scale(0.9, 0.9)\\\"/> <div class=\\\"uil-ring-css\\\" *ngIf=\\\"loading\\\"> <div></div> </div>   <a class=\\\"nav-left\\\" *ngIf=\\\"modalImages.length >1 && !isMobile\\\" (click)=\\\"prevImage()\\\" > <span></span> </a> <a class=\\\"nav-right\\\" *ngIf=\\\"modalImages.length >1 && !isMobile\\\" (click)=\\\"nextImage()\\\"> <span></span> </a> </div> </div> <div *ngIf=\\\"openModalWindow\\\"> <!-- <mdb-image-modal [modalImages]=\\\"images\\\" [imagePointer]=\\\"imagePointer\\\" (cancelEvent)=\\\"cancelImageModel()\\\"></mdb-image-modal> --> <mdb-image-modal [imagePointer]=\\\"imagePointer\\\"></mdb-image-modal> </div>\",\n  // host: {\n  //   '(document:keyup)': 'keyboardControl($event)'\n  // },\n})\n\nexport class ImageModalComponent implements OnInit {\n  public _element: any;\n  public opened = false;\n  public imgSrc: string;\n  public currentImageIndex: number;\n  public loading = false;\n  public showRepeat = false;\n  public isMobile = false;\n\n  public openModalWindow: any;\n\n  clicked: any = false;\n  isBrowser: any = false;\n  zoomed = 'inactive';\n\n  SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n\n  @Input('modalImages') public modalImages: any;\n  @Input('imagePointer') public imagePointer: number;\n\n  @Input('fullscreen') public fullscreen: boolean;\n  @Input('zoom') public zoom: boolean;\n  @Input('smooth') public smooth = true;\n  @Input('type') public type: String;\n\n  @Output('cancelEvent') cancelEvent = new EventEmitter<any>();\n\n  constructor( @Inject(PLATFORM_ID) platformId: string, public element: ElementRef, public renderer: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this._element = this.element.nativeElement;\n    try {\n      document.createEvent('TouchEvent');\n      this.isMobile = true;\n    } catch (err) {\n      this.isMobile = false;\n      return;\n    }\n  }\n\n  toggleZoomed() {\n    // this.zoomed = (this.zoomed === 'inactive') ? 'active' : 'inactive';\n    // this.zoom = !this.zoom;\n    const imgRef = this.element.nativeElement.lastElementChild.lastElementChild.firstElementChild;\n\n    if (!this.clicked) {\n      this.renderer.setStyle(imgRef, 'transform', 'scale(1.0, 1.0');\n      this.renderer.setStyle(imgRef, 'animate', '300ms ease-out');\n      this.renderer.setStyle(imgRef, 'cursor', 'zoom-out');\n      this.clicked = true;\n    } else if (this.clicked) {\n      this.renderer.setStyle(imgRef, 'transform', 'scale(0.9, 0.9');\n      this.renderer.setStyle(imgRef, 'animate', '300ms ease-in');\n      this.renderer.setStyle(imgRef, 'cursor', 'zoom-in');\n      this.clicked = false;\n    }\n  }\n\n\n  toggleRestart() {\n    this.zoomed = (this.zoomed === 'inactive') ? 'active' : 'inactive';\n  }\n\n  ngOnInit() {\n\n    this.loading = true;\n    if (this.imagePointer >= 0) {\n      this.showRepeat = false;\n      this.openGallery(this.imagePointer);\n    } else {\n      this.showRepeat = true;\n    }\n  }\n\n  closeGallery() {\n    // this.smooth = false;\n    this.zoom = false;\n    if (screenfull.enabled) {\n      screenfull.exit();\n    }\n    this.opened = false;\n    this.cancelEvent.emit(null);\n  }\n\n  prevImage() {\n    // this.smooth = false;\n    // this.zoom = false;\n    this.loading = true;\n    this.currentImageIndex--;\n    if (this.currentImageIndex < 0) {\n      this.currentImageIndex = this.modalImages.length - 1;\n    }\n    this.openGallery(this.currentImageIndex);\n  }\n\n  nextImage() {\n    // this.smooth = false;\n    // this.zoom = false;\n    this.loading = true;\n    this.currentImageIndex++;\n    if (this.modalImages.length === this.currentImageIndex) {\n      this.currentImageIndex = 0;\n    }\n    this.openGallery(this.currentImageIndex);\n  }\n\n  openGallery(index: any) {\n    if (!index) {\n      this.currentImageIndex = 1;\n    }\n    this.currentImageIndex = index;\n    this.opened = true;\n    for (let i = 0; i < this.modalImages.length; i++) {\n      if (i === this.currentImageIndex) {\n        this.imgSrc = this.modalImages[i].img;\n        this.loading = false;\n        break;\n      }\n    }\n  }\n\n  fullScreen(): any {\n    if (screenfull.enabled) {\n      screenfull.toggle();\n    }\n  }\n\n  get is_iPhone_or_iPod() {\n    if (this.isBrowser) {\n      if (navigator && navigator.userAgent && navigator.userAgent != null) {\n        const strUserAgent = navigator.userAgent.toLowerCase();\n        const arrMatches = strUserAgent.match(/ipad/);\n        if (arrMatches != null) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  keyboardControl(event: KeyboardEvent) {\n    if (this.opened) {\n      if (event.keyCode === 39) {\n        this.nextImage();\n      }\n      if (event.keyCode === 37) {\n        this.prevImage();\n      }\n      if (event.keyCode === 27) {\n        this.closeGallery();\n      }\n    }\n  }\n\n  swipe(action: String = this.SWIPE_ACTION.RIGHT) {\n    // let thisImg = this._element.querySelector('.ng-gallery-content').querySelector('img[src=\"' + this.imgSrc + '\"]');\n\n    if (action === this.SWIPE_ACTION.RIGHT) {\n      this.prevImage();\n      // console.log(event.distance, this.modalImages);\n    }\n\n    // previous\n    if (action === this.SWIPE_ACTION.LEFT) {\n      this.nextImage();\n    }\n\n  }\n\n}\n","import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { CharCounterDirective } from './char-counter.directive';\n\n@NgModule({\n  declarations: [CharCounterDirective],\n  exports: [CharCounterDirective]\n})\n\nexport class CharCounterModule {\n  public static forRoot(): ModuleWithProviders {\n    return {ngModule: CharCounterModule, providers: []};\n  }\n}\n","import { OnInit, Directive, ElementRef, Renderer2, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[mdbCharCounter]'\n})\n\n\nexport class CharCounterDirective implements OnInit {\n\n  @Input() public length = 20;\n  public textContainer: any;\n\n  constructor(private _elRef: ElementRef, private _renderer: Renderer2) {}\n\n  ngOnInit() {\n    // Inititalise a new <span> element for the count display and render it below the host component.\n    this.textContainer =  this._renderer.createElement('p');\n    this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.textContainer);\n    this._renderer.addClass(this.textContainer, 'chars');\n    this.textContainer.innerHTML = '0/' + this.length;\n    this._renderer.setStyle(this.textContainer, 'display', 'none');\n  }\n\n\n  @HostListener('input') onKeyUp() {\n     this.textContainer.innerHTML = this._elRef.nativeElement.value.length + '/' + this.length;\n\n     if (this._elRef.nativeElement.value.length > this.length) {\n       this._renderer.addClass(this._elRef.nativeElement, 'invalid');\n     } else {\n      this._renderer.removeClass(this._elRef.nativeElement, 'invalid');\n     }\n  }\n\n  @HostListener('blur') hide() {\n    this._renderer.setStyle(this.textContainer, 'display', 'none');\n  }\n\n  @HostListener('focus') show() {\n    this.onKeyUp();\n    this._renderer.setStyle(this.textContainer, 'display', 'block');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MDBFileDropDirective } from '../directives/mdb-file-drop.directive';\nimport { MDBFileSelectDirective } from '../directives/mdb-file-select.directive';\n\n@NgModule({\n  declarations: [\n  MDBFileSelectDirective,\n  MDBFileDropDirective\n  ],\n  exports: [\n  MDBFileSelectDirective,\n  MDBFileDropDirective\n  ]\n})\nexport class FileInputModule {}\n","import { Directive, ElementRef, EventEmitter, Input, Output, OnInit, OnDestroy, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MDBUploaderService, UploadOutput } from '../classes/mdb-uploader.class';\n\n@Directive({\n  selector: '[mdbFileSelect]'\n})\nexport class MDBFileSelectDirective implements OnInit, OnDestroy {\n  @Input() uploadInput: EventEmitter<any>;\n  @Output() uploadOutput: EventEmitter<UploadOutput>;\n\n  upload: MDBUploaderService;\n  isServer: boolean = isPlatformServer(this.platform_id);\n  // el: HTMLInputElement;\n  el: HTMLInputElement | any;\n\n  constructor(@Inject(PLATFORM_ID) private platform_id: any, private elementRef: ElementRef) {\n    this.upload = new MDBUploaderService();\n    this.uploadOutput = new EventEmitter<UploadOutput>();\n  }\n\n  ngOnInit() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el = this.elementRef.nativeElement;\n    this.el.addEventListener('change', this.fileListener, false);\n\n    this.upload.serviceEvents.subscribe((event: UploadOutput) => {\n      this.uploadOutput.emit(event);\n    });\n\n    if (this.uploadInput instanceof EventEmitter) {\n      this.upload.initInputEvents(this.uploadInput);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el.removeEventListener('change', this.fileListener, false);\n\n    if (this.uploadInput) {\n      this.uploadInput.unsubscribe();\n    }\n  }\n\n  fileListener = () => {\n    this.upload.handleFiles(this.el.files);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, Input, Output, OnInit, OnDestroy, PLATFORM_ID, Inject, HostListener } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MDBUploaderService, UploadOutput, UploadInput } from '../classes/mdb-uploader.class';\n\n@Directive({\n  selector: '[mdbFileDrop]'\n})\nexport class MDBFileDropDirective implements OnInit, OnDestroy {\n  @Input() uploadInput: EventEmitter<UploadInput>;\n  @Output() uploadOutput: EventEmitter<UploadOutput>;\n\n  upload: MDBUploaderService;\n  isServer: boolean = isPlatformServer(this.platform_id);\n  el: HTMLInputElement;\n\n  constructor(@Inject(PLATFORM_ID) private platform_id: any, private elementRef: ElementRef) {\n    this.upload = new MDBUploaderService();\n    this.uploadOutput = new EventEmitter<UploadOutput>();\n  }\n\n  ngOnInit() {\n    if (this.isServer) {\n      return;\n    }\n\n    this.el = this.elementRef.nativeElement;\n\n    this.upload.serviceEvents.subscribe((event: UploadOutput) => {\n      this.uploadOutput.emit(event);\n    });\n\n    if (this.uploadInput instanceof EventEmitter) {\n      this.upload.initInputEvents(this.uploadInput);\n    }\n\n    this.el.addEventListener('drop', this.stopEvent, false);\n    this.el.addEventListener('dragenter', this.stopEvent, false);\n    this.el.addEventListener('dragover', this.stopEvent, false);\n    this.el.addEventListener('dragover', this.stopEvent, false);\n  }\n\n  ngOnDestroy() {\n    if (this.isServer) {\n      return;\n    }\n\n    if (this.uploadInput) {\n      this.uploadInput.unsubscribe();\n    }\n  }\n\n  stopEvent = (e: Event) => {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  @HostListener('drop', ['$event'])\n  public onDrop(e: any) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const event: UploadOutput = { type: 'drop' };\n    this.uploadOutput.emit(event);\n    this.upload.handleFiles(e.dataTransfer.files);\n  }\n\n  @HostListener('dragover', ['$event'])\n  public onDragOver(e: Event) {\n    if (!e) {\n      return;\n    }\n\n    const event: UploadOutput = { type: 'dragOver' };\n    this.uploadOutput.emit(event);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public onDragLeave(e: Event) {\n    if (!e) {\n      return;\n    }\n\n    const event: UploadOutput = { type: 'dragOut' };\n    this.uploadOutput.emit(event);\n  }\n}\n","\nimport { EventEmitter } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n// import { Subscriber } from 'rxjs/Subscriber';\n\nexport interface UploaderOptions {\n  concurrency: number;\n  allowedContentTypes?: string[];\n  maxUploads?: number;\n}\n\nexport interface BlobFile extends Blob {\n  name: string;\n}\n\nexport enum UploadStatus {\n  Queue,\n  Uploading,\n  Done,\n  Cancelled\n}\n\nexport interface UploadProgress {\n  status: UploadStatus;\n  data?: {\n    percentage: number;\n    speed: number;\n    speedHuman: string;\n    startTime: number | null;\n    endTime: number | null;\n    eta: number | null;\n    etaHuman: string | null;\n  };\n}\n\nexport interface UploadFile {\n  id: string;\n  fileIndex: number;\n  lastModifiedDate: number;\n  name: string;\n  size: number;\n  type: string;\n  form: FormData;\n  progress: UploadProgress;\n  response?: any;\n  responseStatus?: number;\n  sub?: Subscription | any;\n  nativeFile?: File;\n  responseHeaders?: { [key: string]: string };\n}\n\nexport interface UploadOutput {\n  type: 'addedToQueue' | 'allAddedToQueue' | 'uploading' | 'done' | 'start' | 'cancelled' | 'dragOver'\n      | 'dragOut' | 'drop' | 'removed' | 'removedAll' | 'rejected';\n  file?: UploadFile;\n  nativeFile?: File;\n}\n\nexport interface UploadInput {\n  type: 'uploadAll' | 'uploadFile' | 'cancel' | 'cancelAll' | 'remove' | 'removeAll';\n  url?: string;\n  method?: string;\n  id?: string;\n  fieldName?: string;\n  fileIndex?: number;\n  file?: UploadFile;\n  data?: { [key: string]: string | Blob };\n  headers?: { [key: string]: string };\n  withCredentials?: boolean;\n}\n\nexport function humanizeBytes(bytes: number): string {\n  if (bytes === 0) {\n    return '0 Byte';\n  }\n\n  const k = 1024;\n  const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nexport class MDBUploaderService {\n  queue: UploadFile[];\n  serviceEvents: EventEmitter<UploadOutput>;\n  uploadScheduler: Subject<{ file: UploadFile, event: UploadInput }>;\n  subs: { id: string, sub: Subscription }[];\n  contentTypes: string[];\n  maxUploads: number;\n\n  constructor(\n    concurrency: number = Number.POSITIVE_INFINITY,\n    contentTypes: string[] = ['*'],\n    maxUploads: number = Number.POSITIVE_INFINITY) {\n    this.queue = [];\n    this.serviceEvents = new EventEmitter<UploadOutput>();\n    this.uploadScheduler = new Subject();\n    this.subs = [];\n    this.contentTypes = contentTypes;\n    this.maxUploads = maxUploads;\n\n    this.uploadScheduler\n      .pipe(\n        mergeMap(upload => this.startUpload(upload), concurrency)\n      )\n      .subscribe(uploadOutput => this.serviceEvents.emit(uploadOutput));\n  }\n\n  handleFiles(incomingFiles: FileList): void {\n    const allowedIncomingFiles: File[] = [].reduce.call(incomingFiles, (acc: File[], checkFile: File, i: number) => {\n      const futureQueueLength = acc.length + this.queue.length + 1;\n      if (this.isContentTypeAllowed(checkFile.type) && futureQueueLength <= this.maxUploads) {\n        acc = acc.concat(checkFile);\n      } else {\n        const rejectedFile: UploadFile = this.makeUploadFile(checkFile, i);\n        this.serviceEvents.emit({ type: 'rejected', file: rejectedFile });\n      }\n\n      return acc;\n    }, []);\n\n    this.queue.push(...[].map.call(allowedIncomingFiles, (file: File, i: number) => {\n      const uploadFile: UploadFile = this.makeUploadFile(file, i);\n      this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n      return uploadFile;\n    }));\n\n    this.serviceEvents.emit({ type: 'allAddedToQueue' });\n  }\n\n  initInputEvents(input: EventEmitter<UploadInput>): Subscription {\n    return input.subscribe((event: UploadInput) => {\n      switch (event.type) {\n        case 'uploadFile':\n          const uploadFileIndex = this.queue.findIndex(file => file === event.file);\n          if (uploadFileIndex !== -1 && event.file) {\n            this.uploadScheduler.next({ file: this.queue[uploadFileIndex], event: event });\n          }\n          break;\n        case 'uploadAll':\n          const files = this.queue.filter(file => file.progress.status === UploadStatus.Queue);\n          files.forEach(file => this.uploadScheduler.next({ file: file, event: event }));\n          break;\n        case 'cancel':\n          const id = event.id || null;\n          if (!id) {\n            return;\n          }\n\n          const index = this.subs.findIndex(sub => sub.id === id);\n          if (index !== -1 && this.subs[index].sub) {\n            this.subs[index].sub.unsubscribe();\n\n            const fileIndex = this.queue.findIndex(file => file.id === id);\n            if (fileIndex !== -1) {\n              this.queue[fileIndex].progress.status = UploadStatus.Cancelled;\n              this.serviceEvents.emit({ type: 'cancelled', file: this.queue[fileIndex] });\n            }\n          }\n          break;\n        case 'cancelAll':\n          this.subs.forEach(sub => {\n            if (sub.sub) {\n              sub.sub.unsubscribe();\n            }\n\n            const file = this.queue.find(uploadFile => uploadFile.id === sub.id);\n            if (file) {\n              file.progress.status = UploadStatus.Cancelled;\n              this.serviceEvents.emit({ type: 'cancelled', file: file });\n            }\n          });\n          break;\n        case 'remove':\n          if (!event.id) {\n            return;\n          }\n\n          const i = this.queue.findIndex(file => file.id === event.id);\n          if (i !== -1) {\n            const file = this.queue[i];\n            this.queue.splice(i, 1);\n            this.serviceEvents.emit({ type: 'removed', file: file });\n          }\n          break;\n        case 'removeAll':\n          if (this.queue.length) {\n            this.queue = [];\n            this.serviceEvents.emit({ type: 'removedAll' });\n          }\n          break;\n      }\n    });\n  }\n\n  startUpload(upload: { file: UploadFile, event: UploadInput }): Observable<UploadOutput> {\n    return new Observable(observer => {\n      const sub = this.uploadFile(upload.file, upload.event)\n        .subscribe(output => {\n          observer.next(output);\n        }, err => {\n          observer.error(err);\n          observer.complete();\n        }, () => {\n          observer.complete();\n        });\n\n      this.subs.push({ id: upload.file.id, sub: sub });\n    });\n  }\n\n  uploadFile(file: UploadFile, event: UploadInput): Observable<UploadOutput> {\n    return new Observable(observer => {\n      const url = event.url || '';\n      const method = event.method || 'POST';\n      const data = event.data || {};\n      const headers = event.headers || {};\n\n      const xhr = new XMLHttpRequest();\n      const time: number = new Date().getTime();\n      let progressStartTime: number = (file.progress.data && file.progress.data.startTime) || time;\n      let speed = 0;\n      let eta: number | null = null;\n\n      xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\n        if (e.lengthComputable) {\n          const percentage = Math.round((e.loaded * 100) / e.total);\n          const diff = new Date().getTime() - time;\n          speed = Math.round(e.loaded / diff * 1000);\n          progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n          eta = Math.ceil((e.total - e.loaded) / speed);\n\n          file.progress = {\n            status: UploadStatus.Uploading,\n            data: {\n              percentage: percentage,\n              speed: speed,\n              speedHuman: `${humanizeBytes(speed)}/s`,\n              startTime: progressStartTime,\n              endTime: null,\n              eta: eta,\n              etaHuman: this.secondsToHuman(eta)\n            }\n          };\n\n          observer.next({ type: 'uploading', file: file });\n        }\n      }, false);\n\n      xhr.upload.addEventListener('error', (e: Event) => {\n        observer.error(e);\n        observer.complete();\n      });\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          const speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n          file.progress = {\n            status: UploadStatus.Done,\n            data: {\n              percentage: 100,\n              speed: speedAverage,\n              speedHuman: `${humanizeBytes(speedAverage)}/s`,\n              startTime: progressStartTime,\n              endTime: new Date().getTime(),\n              eta: eta,\n              etaHuman: this.secondsToHuman(eta || 0)\n            }\n          };\n\n          file.responseStatus = xhr.status;\n\n          try {\n            file.response = JSON.parse(xhr.response);\n          } catch (e) {\n            file.response = xhr.response;\n          }\n\n          file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n\n          observer.next({ type: 'done', file: file });\n\n          observer.complete();\n        }\n      };\n\n      xhr.open(method, url, true);\n      xhr.withCredentials = event.withCredentials ? true : false;\n\n      try {\n        const uploadFile = <BlobFile>file.nativeFile;\n        const uploadIndex = this.queue.findIndex(outFile => outFile.nativeFile === uploadFile);\n\n        if (this.queue[uploadIndex].progress.status === UploadStatus.Cancelled) {\n          observer.complete();\n        }\n\n        Object.keys(data).forEach(key => file.form.append(key, data[key]));\n        Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));\n\n        file.form.append(event.fieldName || 'file', uploadFile, uploadFile.name);\n\n        this.serviceEvents.emit({ type: 'start', file: file });\n        xhr.send(file.form);\n      } catch (e) {\n        observer.complete();\n      }\n\n      return () => {\n        xhr.abort();\n      };\n    });\n  }\n\n  secondsToHuman(sec: number): string {\n    return new Date(sec * 1000).toISOString().substr(11, 8);\n  }\n\n  generateId(): string {\n    return Math.random().toString(36).substring(7);\n  }\n\n  setContentTypes(contentTypes: string[]): void {\n    if (typeof contentTypes !== 'undefined' && contentTypes instanceof Array) {\n      if (contentTypes.find((type: string) => type === '*') !== undefined) {\n        this.contentTypes = ['*'];\n      } else {\n        this.contentTypes = contentTypes;\n      }\n      return;\n    }\n    this.contentTypes = ['*'];\n  }\n\n  allContentTypesAllowed(): boolean {\n    return this.contentTypes.find((type: string) => type === '*') !== undefined;\n  }\n\n  isContentTypeAllowed(mimetype: string): boolean {\n    if (this.allContentTypesAllowed()) {\n      return true;\n    }\n    return this.contentTypes.find((type: string) => type === mimetype) !== undefined;\n  }\n\n  makeUploadFile(file: File, index: number): UploadFile {\n    return {\n      fileIndex: index,\n      id: this.generateId(),\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      form: new FormData(),\n      progress: {\n        status: UploadStatus.Queue,\n        data: {\n          percentage: 0,\n          speed: 0,\n          speedHuman: `${humanizeBytes(0)}/s`,\n          startTime: null,\n          endTime: null,\n          eta: null,\n          etaHuman: null\n        }\n      },\n      lastModifiedDate: file.lastModified,\n      sub: undefined,\n      nativeFile: file\n    };\n  }\n\n  private parseResponseHeaders(httpHeaders: any) {\n    if (!httpHeaders) {\n      return;\n    }\n    return httpHeaders.split('\\n')\n      .map((x: any) => x.split(/: */, 2))\n      .filter((x: any) => x[0])\n      .reduce((ac: any, x: any) => {\n        ac[x[0]] = x[1];\n        return ac;\n      }, {});\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SimpleChartComponent } from './chart-simple.component';\nimport { EasyPieChartComponent } from './chart-smallpie.component';\n\n@NgModule({\n  declarations: [\n  SimpleChartComponent, EasyPieChartComponent\n  ],\n  exports: [\n   SimpleChartComponent, EasyPieChartComponent\n  ],\n  imports: [CommonModule]\n})\nexport class ChartSimpleModule {\n}\n","import { Component, ElementRef, OnInit, OnChanges, SimpleChanges, Input, Renderer2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID, Inject } from '@angular/core';\n// import * as EasyPieChart from 'easy-pie-chart/dist/easypiechart.js';\ndeclare var EasyPieChart: any;\n\n@Component({\n  selector: 'mdb-easy-pie-chart',\n  template: '<div>Loading</div>'\n})\nexport class EasyPieChartComponent implements OnInit, OnChanges {\n  @Input('percent') percent: any;\n  @Input('options') options: any;\n  element: any;\n  pieChart: any;\n  isBrowser: any = false;\n\n  constructor(el: ElementRef, @Inject(PLATFORM_ID) platformId: string, private _r: Renderer2) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.element = el;\n    const options = {\n      barColor: '#ef1e25',\n      trackColor: '#f9f9f9',\n      scaleColor: '#dfe0e0',\n      scaleLength: 5,\n      lineCap: 'round',\n      lineWidth: 3,\n      size: 110,\n      rotate: 0,\n      animate: {\n        duration: 1000,\n        enabled: true\n      }\n    };\n    this.options = Object.assign(options, this.options);\n  }\n\n  ngOnInit() {\n    if (this.isBrowser) {\n      const size = this.options.size;\n      this.element.nativeElement.innerHTML = '';\n      this.pieChart = new EasyPieChart(this.element.nativeElement, this.options);\n      this.pieChart.update(this.percent);\n      // Positioning text in center of chart\n      const percent = document.querySelector('.percent');\n      if (percent) {\n        this._r.setStyle(percent, 'line-height', size + 'px');\n        this._r.setStyle(percent, 'width', size + 'px');\n        this._r.setStyle(percent, 'height', size + 'px');\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['percent'].isFirstChange()) {\n      this.pieChart.update(this.percent);\n    }\n  }\n}\n","\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mdb-simple-chart',\n  template: \"<span class=\\\"min-chart\\\"> <span  *ngIf=\\\"customText\\\"   class=\\\"chart-custom-text\\\" [ngStyle]=\\\"{ 'line-height': size + 'px', 'width': size + 'px', 'height': size + 'px'}\\\">{{ customText }}</span> <span  *ngIf=\\\"!customText\\\"  class=\\\"percent\\\">{{ percent }}</span> <mdb-easy-pie-chart [percent]=\\\"percent\\\" [options]=\\\"options\\\"></mdb-easy-pie-chart> </span>\",\n  styles: []\n})\nexport class SimpleChartComponent implements OnInit {\n  @Input('customText') customText: string;\n  @Input('percent') percent: number;\n  @Input('barColor') barColor: string;\n  @Input('trackColor') trackColor: string;\n  @Input('scaleColor') scaleColor: string;\n  @Input('scaleLength') scaleLength: number;\n  @Input('lineCap') lineCap: string;\n  @Input('lineWidth') lineWidth: number;\n  @Input('trackWidth') trackWidth: number;\n  @Input('size') size: number;\n  @Input('rotate') rotate: number;\n  @Input('animate') animate: { duration: string, enabled: boolean};\n  public options: any = {\n    barColor: null,\n    trackColor: null,\n    scaleColor: null,\n    scaleLength: '',\n    lineCap: null,\n    lineWidth: null,\n    trackWidth: null,\n    size: null,\n    rotate: null,\n    duration: null,\n    enableAnimation: null,\n    animate: {\n       duration: 1000,\n       enabled: true\n     }\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.options.barColor = '#' + this.barColor;\n    this.options.trackColor = '#' + this.trackColor;\n    this.options.scaleColor = '#' + this.scaleColor;\n    this.options.scaleLength = this.scaleLength;\n    this.options.lineCap = this.lineCap;\n    this.options.lineWidth = this.lineWidth;\n    this.options.trackWidth = this.trackWidth;\n    this.options.size = this.size;\n    this.options.rotate = this.rotate;\n    this.options.animate.duration = this.animate.duration;\n    this.options.animate.enabled = this.animate.enabled;\n  }\n\n}\n\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MDBDatePickerComponent } from './datepicker.component';\nimport { FocusDirective } from './directives/datepickerFocus.directive';\nimport { InputAutoFillDirective } from './directives/datepickerAutofill.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MDBDatePickerComponent, FocusDirective, InputAutoFillDirective],\n  exports: [MDBDatePickerComponent, FocusDirective, InputAutoFillDirective]\n})\nexport class DatepickerModule {\n}\n","import { IMyLocales } from './interfaces/locale.interface';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  ViewEncapsulation,\n  Renderer2,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  PLATFORM_ID,\n  Inject\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  IMyDate,\n  IMyDateRange,\n  IMyMonth,\n  IMyCalendarDay,\n  IMyWeek,\n  IMyDayLabels,\n  IMyMonthLabels,\n  IMyInputFieldChanged,\n  IMyCalendarViewChanged,\n  IMyInputFocusBlur,\n  IMyMarkedDates,\n  IMyMarkedDate,\n} from './interfaces/index';\nimport { LocaleService } from './services/datepickerLocale.service';\nimport { UtilService } from './services/datepickerUtil.service';\nimport { isPlatformBrowser } from '@angular/common';\nexport const MYDP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MDBDatePickerComponent),\n  multi: true\n};\n\nenum CalToggle { Open = 1, CloseByDateSel = 2, CloseByCalBtn = 3, CloseByOutClick = 4 }\nenum Year { min = 1000, max = 9999 }\nenum InputFocusBlur { focus = 1, blur = 2 }\nenum KeyCode { enter = 13, space = 32 }\nenum MonthId { prev = 1, curr = 2, next = 3 }\n\n@Component({\n  selector: 'mdb-date-picker',\n  exportAs: 'mdbdatepicker',\n  template: \"<!-- Line 27: Deleted (focus)=\\\"onFocusInput($event)\\\" for better use in Firefox. If other strange problems will occur, please paste it in line 27. --> <div class=\\\"mydp picker\\\" [ngClass]=\\\"{'picker--opened': showSelector}\\\" [ngStyle]=\\\"{'width': opts.width}\\\"> <div class=\\\"md-form\\\"> <label (click)=\\\"openBtnClicked()\\\" *ngIf=\\\"label.length > 0\\\" [ngClass]=\\\"{ 'active': checkActive(), 'disabled': opts.componentDisabled }\\\">{{ label }}</label> <input #dateInput type=\\\"text\\\" class=\\\"form-control mydp-date\\\" [attr.aria-label]=\\\"opts.ariaLabelInputField\\\" (click)=\\\"openBtnClicked()\\\" [attr.maxlength]=\\\"opts.dateFormat.length\\\" [ngClass]=\\\"{ 'selectiondisabled': opts.componentDisabled, 'disabled': opts.componentDisabled }\\\" placeholder=\\\"{{ placeholder }}\\\" [ngModel]=\\\"selectionDayTxt\\\" (ngModelChange)=\\\"onUserDateInput($event)\\\" [value]=\\\"selectionDayTxt\\\" [ngStyle]=\\\"{ 'height': opts.height, 'font-size': opts.selectionTxtFontSize }\\\" (blur)=\\\"onBlurInput($event)\\\" [disabled]=\\\"opts.componentDisabled\\\" autocomplete=\\\"off\\\" [tabindex]=\\\"tabIndex\\\"> </div> <div class=\\\"selector picker__holder selectorarrow selectorarrowleft selectorarrowright\\\" #divFocus [ngClass]=\\\"{'alignselectorright': opts.alignSelectorRight}\\\" tabindex=\\\"0\\\"> <div class=\\\"picker__frame picker__box\\\" #pickerFrame> <div class=\\\"picker__header\\\"> <div class=\\\"picker__date-display\\\"> <div class=\\\"picker__weekday-display\\\"> {{ weekText(getWeekday(tmp)) }} </div> <div class=\\\"picker__month-display\\\"> <div>{{ monthText(tmp.month) }}</div> </div> <div class=\\\"picker__day-display\\\"> <div>{{ tmp.day }}</div> </div> <div class=\\\"picker__year-display\\\"> <div>{{ tmp.year }}</div> </div> </div> <select class=\\\"picker__select--year\\\" [(ngModel)]=\\\"visibleMonth.year\\\" (ngModelChange)=\\\"onUserYearInput($event)\\\" role=\\\"menu\\\" aria-label=\\\"Year selector\\\"> <option *ngFor=\\\"let year of years\\\" [value]=\\\"year\\\">{{ year }}</option> </select> <select class=\\\"picker__select--month\\\" [(ngModel)]=\\\"visibleMonth.monthTxt\\\" (ngModelChange)=\\\"onUserMonthInput($event)\\\" role=\\\"menu\\\" aria-label=\\\"Month selector\\\"> <option *ngFor=\\\"let month of months\\\" [value]=\\\"month.short\\\">{{ month.label }}</option> </select> <button class=\\\"picker__nav--prev\\\" data-nav=\\\"-1\\\" type=\\\"button\\\" aria-controls=\\\"date-picker-example_table\\\" title=\\\"Previous month\\\" (click)=\\\"prevMonth()\\\" [disabled]=\\\"prevMonthDisabled\\\" [ngClass]=\\\"{'headerbtnenabled': !prevMonthDisabled, 'headerbtndisabled': prevMonthDisabled}\\\"></button> <button class=\\\"picker__nav--next\\\" data-nav=\\\"1\\\" type=\\\"button\\\" aria-controls=\\\"date-picker-example_table\\\" title=\\\"Next month\\\" (click)=\\\"nextMonth()\\\" [disabled]=\\\"nextMonthDisabled\\\" [ngClass]=\\\"{'headerbtnenabled': !nextMonthDisabled, 'headerbtndisabled': nextMonthDisabled}\\\"></button> </div> <table class=\\\"picker__table\\\"> <thead> <tr> <th class=\\\"picker__weekday weekdaytitleweeknbr\\\" *ngIf=\\\"opts.showWeekNumbers&&opts.firstDayOfWeek==='mo'\\\">#</th> <th class=\\\"picker__weekday\\\" scope=\\\"col\\\" *ngFor=\\\"let d of weekDays\\\">{{d}}</th> </tr> </thead> <tbody> <tr *ngFor=\\\"let w of dates\\\"> <td class=\\\"picker__day daycellweeknbr\\\" *ngIf=\\\"opts.showWeekNumbers&&opts.firstDayOfWeek==='mo'\\\">{{w.weekNbr}}</td> <td class=\\\"picker__day\\\" *ngFor=\\\"let d of w.week\\\" [ngClass]=\\\"{'picker__day--infocus':d.cmo===currMonthId&&!d.disabled, 'disabled': d.disabled, 'tablesingleday': d.cmo===currMonthId&&!d.disabled}\\\"> <div *ngIf=\\\"d.markedDate.marked\\\" class=\\\"markdate\\\" [ngStyle]=\\\"{'background-color': d.markedDate.color}\\\"></div> <div class=\\\"picker__day\\\" [ngClass]=\\\"{'picker__day--infocus':d.cmo===currMonthId,'picker__day--outfocus': (d.cmo===nextMonthId || d.cmo===prevMonthId), 'picker__day--today':d.currDay&&opts.markCurrentDay, 'picker__day--selected picker__day--highlighted':selectedDate.day===d.dateObj.day && selectedDate.month===d.dateObj.month && selectedDate.year===d.dateObj.year && d.cmo===currMonthId}\\\" (click)=\\\"!d.disabled&&cellClicked(d);$event.stopPropagation()\\\" (keydown)=\\\"cellKeyDown($event, d)\\\" tabindex=\\\"0\\\"> {{d.dateObj.day}} </div> </td> </tr> </tbody> </table> <div class=\\\"picker__footer\\\"> <button type=\\\"button\\\" *ngIf=\\\"opts.showTodayBtn\\\" class=\\\"picker__button--today\\\" (click)=\\\"todayClicked()\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.todayBtnTxt\\\"> {{opts.todayBtnTxt}} </button> <button type=\\\"button\\\" *ngIf=\\\"opts.showClearDateBtn\\\" class=\\\"picker__button--clear\\\" (click)=\\\"removeBtnClicked()\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.clearBtnTxt\\\"> {{opts.clearBtnTxt}} </button> <button type=\\\"button\\\" [ngClass]=\\\"{'ml-auto': !opts.showTodayBtn}\\\" class=\\\"picker__button--close\\\" (click)=\\\"showSelector = false; removeInlineStyle();\\\" role=\\\"button\\\" [attr.aria-label]=\\\"opts.closeBtnTxt\\\"> {{opts.closeBtnTxt}} </button> </div> </div> </div> </div>\",\n  providers: [LocaleService, UtilService, MYDP_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class MDBDatePickerComponent implements OnChanges, ControlValueAccessor, AfterViewInit {\n  @Input() tabIndex: any;\n  @Input() options: any;\n  @Input() locale: string;\n  @Input() defaultMonth: string;\n  @Input() selDate: string;\n  @Input() label = '';\n  @Input() placeholder = '';\n  @Input() selector: number;\n  @Input() disabled: boolean;\n  @Output() dateChanged: EventEmitter<any> = new EventEmitter<any>();\n  @Output() inputFieldChanged: EventEmitter<IMyInputFieldChanged> = new EventEmitter<IMyInputFieldChanged>();\n  @Output() calendarViewChanged: EventEmitter<IMyCalendarViewChanged> = new EventEmitter<IMyCalendarViewChanged>();\n  @Output() calendarToggle: EventEmitter<number> = new EventEmitter<number>();\n  @Output() inputFocusBlur: EventEmitter<IMyInputFocusBlur> = new EventEmitter<IMyInputFocusBlur>();\n\n  @ViewChild('divFocus') public divFocus: any;\n  @ViewChild('pickerFrame') pickerFrame: ElementRef;\n  @ViewChild('dateInput') dateInput: ElementRef;\n  public isDateSelected = false;\n  public labelActive = false;\n  public showSelector = false;\n  public visibleMonth: IMyMonth = { monthTxt: '', monthNbr: 0, year: 1 };\n  public selectedMonth: IMyMonth = { monthTxt: '', monthNbr: 0, year: 0 };\n  public selectedDate: IMyDate = { year: 0, month: 0, day: 0 };\n  public weekDays: Array<string> = [];\n  public dates: Array<IMyWeek> = [];\n  public selectionDayTxt = '';\n  public invalidDate = false;\n  public disableTodayBtn = false;\n  public dayIdx = 0;\n  public weekDayOpts: Array<string> = ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'];\n\n  public editMonth = false;\n  public invalidMonth = false;\n  public editYear = false;\n  public invalidYear = false;\n\n  public prevMonthDisabled = false;\n  public nextMonthDisabled = false;\n  public prevYearDisabled = false;\n  public nextYearDisabled = false;\n\n  public prevMonthId: number = MonthId.prev;\n  public currMonthId: number = MonthId.curr;\n  public nextMonthId: number = MonthId.next;\n\n  public tmp: IMyDate = { year: this.getToday().year, month: this.getToday().month, day: this.getToday().day };\n\n  // Default options\n  public opts: any = {\n    startDate: <string>'',\n    closeAfterSelect: <boolean>false,\n    dayLabelsFull: <IMyDayLabels>{},\n    dayLabels: <IMyDayLabels>{},\n    monthLabelsFull: <IMyMonthLabels>{},\n    monthLabels: <IMyMonthLabels>{},\n    dateFormat: <string>'',\n    showTodayBtn: <boolean>true,\n    todayBtnTxt: <string>'',\n    firstDayOfWeek: <string>'',\n    sunHighlight: <boolean>true,\n    markCurrentDay: <boolean>true,\n    disableUntil: <IMyDate>{ year: 0, month: 0, day: 0 },\n    disableSince: <IMyDate>{ year: 0, month: 0, day: 0 },\n    disableDays: <Array<IMyDate>>[],\n    enableDays: <Array<IMyDate>>[],\n    markDates: <Array<IMyMarkedDates>>[],\n    markWeekends: <IMyMarkedDate>{},\n    disableDateRanges: <Array<IMyDateRange>>[],\n    disableWeekends: <boolean>false,\n    showWeekNumbers: <boolean>false,\n    height: <string>'32px',\n    width: <string>'100%',\n    selectionTxtFontSize: <string>'1rem',\n    showClearDateBtn: <boolean>true,\n    alignSelectorRight: <boolean>false,\n    disableHeaderButtons: <boolean>true,\n    minYear: <number>Year.min,\n    maxYear: <number>Year.max,\n    componentDisabled: <boolean>false,\n    showSelectorArrow: <boolean>true,\n    ariaLabelInputField: <string>'Date input field',\n    ariaLabelClearDate: <string>'Clear Date',\n    ariaLabelOpenCalendar: <string>'Open Calendar',\n    ariaLabelPrevMonth: <string>'Previous Month',\n    ariaLabelNextMonth: <string>'Next Month',\n    ariaLabelPrevYear: <string>'Previous Year',\n    ariaLabelNextYear: <string>'Next Year'\n  };\n\n\n  public months: any = [];\n  public years: any = [];\n  public elements = document.getElementsByClassName('mydp picker');\n  public elementNumber: any;\n\n  firstTimeOpenedModal = true;\n  modalHeightBefore: any = null;\n  isMobile: any = null;\n  isBrowser: any = false;\n\n  constructor(public elem: ElementRef,\n    private renderer: Renderer2,\n    // private cdr: ChangeDetectorRef,\n    private localeService: LocaleService,\n    private utilService: UtilService,\n    @Inject(PLATFORM_ID) platformId: string\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    }\n    this.setLocaleOptions();\n    renderer.listen(this.elem.nativeElement, 'click', (event: any) => {\n      if (this.showSelector &&\n        event.target &&\n        this.elem.nativeElement !== event.target &&\n        !this.elem.nativeElement.contains(event.target)\n      ) {\n        this.removeInlineStyle();\n        this.showSelector = false;\n        this.calendarToggle.emit(CalToggle.CloseByOutClick);\n      }\n      if (event.target.classList.contains('picker__holder')) {\n        this.removeInlineStyle();\n        this.showSelector = false;\n      }\n      if (true && event.target && this.elem.nativeElement.contains(event.target)) {\n        this.resetMonthYearEdit();\n      }\n    });\n  }\n\n\n  ngAfterViewInit() {\n\n    if (this.opts.startDate) {\n      setTimeout(() => {\n        this.onUserDateInput(this.opts.startDate);\n      }, 0);\n    }\n  }\n\n  ChangeZIndex() {\n    if (this.isBrowser) {\n      setTimeout(() => {\n        // Fix for visible date / time picker input when picker plate is visible.\n        try {\n          const openedPicker: any = document.querySelector('.picker--opened');\n          const allPickers: any = document.querySelectorAll('.picker');\n          allPickers.forEach((element: any) => {\n            this.renderer.setStyle(element, 'z-index', '0');\n          });\n          this.renderer.setStyle(openedPicker, 'z-index', '100');\n        } catch (error) { }\n      }, 0);\n    }\n  }\n\n\n  onChangeCb: (_: any) => void = () => { };\n  onTouchedCb: () => void = () => { };\n\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(this.dateInput.nativeElement, 'disabled', isDisabled);\n  }\n\n  removeInlineStyle() {\n    try {\n      if (this.elem.nativeElement.parentElement.parentElement.classList.contains('modal-content')) {\n        this.renderer.setStyle(this.elem.nativeElement.parentElement.parentElement, 'transition', 'height 0.3s');\n        this.elem.nativeElement.parentElement.parentElement.style.height = this.modalHeightBefore + 'px';\n      }\n    } catch (error) { }\n    setTimeout(() => {\n      (document.documentElement as any).style.removeProperty('overflow');\n    }, 155);\n    this.labelActive = false;\n  }\n\n  setLocaleOptions(): void {\n    const opts: any = this.localeService.getLocaleOptions(this.locale);\n    Object.keys(opts).forEach((k) => {\n      this.opts[k] = opts[k];\n    });\n  }\n\n  addLocale(locale: IMyLocales) {\n    this.localeService.locales = Object.assign({}, this.localeService.locales, locale);\n    setTimeout(() => {\n      this.setLocaleOptions();\n    }, 0);\n  }\n\n  setOptions(): void {\n    const thisYear = new Date();\n    const currentYear = thisYear.getFullYear();\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        this.opts[k] = this.options[k];\n      });\n    }\n    if (this.disabled !== undefined) {\n      this.opts.componentDisabled = this.disabled;\n    }\n\n    if (this.opts.minYear === 1000) {\n      this.opts.minYear = currentYear - 7;\n    }\n\n    if (this.opts.maxYear === 9999) {\n      this.opts.maxYear = currentYear + 7;\n    }\n  }\n\n  resetMonthYearEdit(): void {\n    this.editMonth = false;\n    this.editYear = false;\n    this.invalidMonth = false;\n    this.invalidYear = false;\n  }\n\n  onUserDateInput(value: string): void {\n    this.invalidDate = false;\n    if (value.length === 0) {\n      this.clearDate();\n    } else {\n      const date: IMyDate = this.utilService.isDateValid(value,\n        this.opts.dateFormat,\n        this.opts.minYear,\n        this.opts.maxYear,\n        this.opts.disableUntil,\n        this.opts.disableSince,\n        this.opts.disableWeekends,\n        this.opts.disableDays,\n        this.opts.disableDateRanges,\n        this.opts.monthLabels,\n        this.opts.enableDays);\n\n      if (this.utilService.isInitializedDate(date)) {\n        this.selectDate(date);\n      } else {\n        this.invalidDate = true;\n      }\n    }\n    if (this.invalidDate) {\n      this.inputFieldChanged.emit({ value: value, dateFormat: this.opts.dateFormat, valid: !(value.length === 0 || this.invalidDate) });\n      this.onChangeCb('');\n      this.onTouchedCb();\n    }\n  }\n\n  onFocusInput(event: any): void {\n\n    this.openBtnClicked();\n    this.inputFocusBlur.emit({ reason: InputFocusBlur.focus, value: event.target.value });\n    (document.documentElement as any).style.overflow = 'hidden';\n    this.divFocus.nativeElement.focus();\n\n  }\n\n  onBlurInput(event: any): void {\n    this.selectionDayTxt = event.target.value;\n    this.onTouchedCb();\n    this.inputFocusBlur.emit({ reason: InputFocusBlur.blur, value: event.target.value });\n  }\n\n  onUserMonthInput(value: string): void {\n    this.invalidMonth = false;\n    const m: number = this.utilService.isMonthLabelValid(value, this.opts.monthLabels);\n    if (m !== -1) {\n      this.editMonth = false;\n      if (m !== this.visibleMonth.monthNbr) {\n        this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: this.visibleMonth.year };\n        this.generateCalendar(m, this.visibleMonth.year, true);\n      }\n    } else {\n      this.invalidMonth = true;\n    }\n  }\n\n  onUserYearInput(value: string): void {\n    this.invalidYear = false;\n    const y: number = this.utilService.isYearLabelValid(Number(value), this.opts.minYear, this.opts.maxYear);\n    if (y !== -1) {\n      this.editYear = false;\n      if (y !== this.visibleMonth.year) {\n        this.visibleMonth = { monthTxt: this.visibleMonth.monthTxt, monthNbr: this.visibleMonth.monthNbr, year: y };\n        this.generateCalendar(this.visibleMonth.monthNbr, y, true);\n      }\n    } else {\n      this.invalidYear = true;\n    }\n  }\n\n  isTodayDisabled(): void {\n    this.disableTodayBtn = this.utilService.isDisabledDay(this.getToday(),\n      this.opts.disableUntil,\n      this.opts.disableSince,\n      this.opts.disableWeekends,\n      this.opts.disableDays,\n      this.opts.disableDateRanges,\n      this.opts.enableDays);\n  }\n\n  parseOptions(): void {\n    if (this.locale) {\n      this.setLocaleOptions();\n    }\n    this.setOptions();\n    this.isTodayDisabled();\n    this.dayIdx = this.weekDayOpts.indexOf(this.opts.firstDayOfWeek);\n    if (this.dayIdx !== -1) {\n      let idx: number = this.dayIdx;\n      for (let i = 0; i < this.weekDayOpts.length; i++) {\n        this.weekDays.push(this.opts.dayLabels[this.weekDayOpts[idx]]);\n        idx = this.weekDayOpts[idx] === 'sa' ? 0 : idx + 1;\n      }\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && typeof value === 'string') {\n      this.updateDateValue(this.parseSelectedDate(value), false);\n    } else if (value && value['date']) {\n      this.updateDateValue(this.parseSelectedDate(value['date']), false);\n    } else if (value === '' || value === null) {\n      this.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCb = fn;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('selector') && changes['selector'].currentValue > 0) {\n      this.openBtnClicked();\n    }\n\n    if (changes.hasOwnProperty('placeholder')) {\n      this.placeholder = changes['placeholder'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('locale')) {\n      this.locale = changes['locale'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this.disabled = changes['disabled'].currentValue;\n    }\n\n    if (changes.hasOwnProperty('options')) {\n      this.options = changes['options'].currentValue;\n      if (changes.options.currentValue.startDate) {\n        this.onUserDateInput(changes.options.currentValue.startDate);\n      }\n    }\n\n    this.weekDays.length = 0;\n    this.parseOptions();\n\n    if (changes.hasOwnProperty('defaultMonth')) {\n      const dm: string = changes['defaultMonth'].currentValue;\n      if (dm !== null && dm !== undefined && dm !== '') {\n        this.selectedMonth = this.parseSelectedMonth(dm);\n      } else {\n        this.selectedMonth = { monthTxt: '', monthNbr: 0, year: 0 };\n      }\n    }\n\n    if (changes.hasOwnProperty('selDate')) {\n      const sd: any = changes['selDate'];\n      if (sd.currentValue !== null &&\n        sd.currentValue !== undefined &&\n        sd.currentValue !== '' &&\n        Object.keys(sd.currentValue).length !== 0\n      ) {\n        this.selectedDate = this.parseSelectedDate(sd.currentValue);\n        setTimeout(() => {\n          this.onChangeCb(this.getDateModel(this.selectedDate));\n        });\n        this.isDateSelected = true;\n      } else {\n        // Do not clear on init\n        if (!sd.isFirstChange()) {\n          this.clearDate();\n        }\n      }\n    }\n\n    if (this.showSelector) {\n      this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, false);\n    }\n  }\n\n  hideKeyboard() {\n    try {\n      setTimeout(() => {\n        const field = this.renderer.createElement('input');\n        this.renderer.appendChild(this.elem.nativeElement, field);\n        const inputReference = this.elem.nativeElement.lastElementChild;\n        this.renderer.setAttribute(inputReference, 'type', 'text');\n        this.renderer.setAttribute(inputReference, 'type', 'text');\n        this.renderer.setStyle(inputReference, 'opacity', '0');\n        this.renderer.setStyle(inputReference, '-webkit-user-modify', 'read-write-plaintext-only');\n        field.onfocus = () => {\n          setTimeout(() => {\n\n            this.renderer.setStyle(field, 'display', 'none');\n            setTimeout(() => {\n              this.renderer.removeChild(this.elem.nativeElement, field);\n              document.body.focus();\n            }, 0);\n\n          }, 0);\n        };\n        field.focus();\n\n      }, 0);\n    } catch (error) {\n\n    }\n  }\n\n  removeBtnClicked(): void {\n    this.clearDate();\n    if (this.showSelector) {\n      this.calendarToggle.emit(CalToggle.CloseByCalBtn);\n    }\n    this.isDateSelected = false;\n  }\n\n  openBtnClicked(): void {\n    try {\n      if (this.elem.nativeElement.parentElement.parentElement.classList.contains('modal-content')) {\n        if (this.firstTimeOpenedModal) {\n          this.modalHeightBefore = this.elem.nativeElement.parentElement.parentElement.offsetHeight;\n        }\n        this.firstTimeOpenedModal = false;\n        this.renderer.setStyle(this.elem.nativeElement.parentElement.parentElement, 'transition', 'height 0.3s');\n        // tslint:disable-next-line:max-line-length\n        this.elem.nativeElement.parentElement.parentElement.style.height = this.modalHeightBefore + this.pickerFrame.nativeElement.offsetHeight + 'px';\n      }\n    } catch (error) { }\n    // Open selector button clicked\n    this.showSelector = !this.showSelector;\n    if (this.showSelector) {\n      this.setVisibleMonth();\n      this.calendarToggle.emit(CalToggle.Open);\n\n    } else {\n      this.calendarToggle.emit(CalToggle.CloseByCalBtn);\n    }\n    if (this.isMobile) {\n      this.hideKeyboard();\n    }\n    this.labelActive = true;\n    this.ChangeZIndex();\n  }\n\n  setVisibleMonth(): void {\n    // Sets visible month of calendar\n    let y = 0, m = 0;\n    if (!this.utilService.isInitializedDate(this.selectedDate)) {\n      if (this.selectedMonth.year === 0 && this.selectedMonth.monthNbr === 0) {\n        const today: IMyDate = this.getToday();\n        y = today.year;\n        m = today.month;\n      } else {\n        y = this.selectedMonth.year;\n        m = this.selectedMonth.monthNbr;\n      }\n    } else {\n      y = this.selectedDate.year;\n      m = this.selectedDate.month;\n    }\n    this.visibleMonth = { monthTxt: this.opts.monthLabels[m], monthNbr: m, year: y };\n\n    // Create current month\n    this.generateCalendar(m, y, true);\n  }\n\n  monthList(): void {\n    this.months = [];\n    for (let i = 1; i <= 12; i++) {\n      this.months.push({ index: i, short: this.opts.monthLabels[i], label: this.opts.monthLabelsFull[i] });\n    }\n  }\n\n  yearsList(): void {\n    this.years = [];\n\n    const firstYear = this.opts.minYear;\n    const lastYear = this.opts.maxYear;\n\n    for (let i = firstYear; i <= lastYear; i++) {\n      this.years.push(i);\n    }\n  }\n\n  prevMonth(): void {\n    // Previous month from calendar\n    const d: Date = this.getDate(this.visibleMonth.year, this.visibleMonth.monthNbr, 1);\n    d.setMonth(d.getMonth() - 1);\n\n    const y: number = d.getFullYear();\n    const m: number = d.getMonth() + 1;\n\n    this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: y };\n    this.generateCalendar(m, y, true);\n  }\n\n  nextMonth(): void {\n    // Next month from calendar\n    const d: Date = this.getDate(this.visibleMonth.year, this.visibleMonth.monthNbr, 1);\n    d.setMonth(d.getMonth() + 1);\n\n    const y: number = d.getFullYear();\n    const m: number = d.getMonth() + 1;\n\n    this.visibleMonth = { monthTxt: this.monthText(m), monthNbr: m, year: y };\n    this.generateCalendar(m, y, true);\n  }\n\n  prevYear(): void {\n    // Previous year from calendar\n    this.visibleMonth.year--;\n    this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, true);\n  }\n\n  nextYear(): void {\n    // Next year from calendar\n    this.visibleMonth.year++;\n    this.generateCalendar(this.visibleMonth.monthNbr, this.visibleMonth.year, true);\n  }\n\n  todayClicked(): void {\n    // Today button clicked\n    const today: IMyDate = this.getToday();\n    if (!this.utilService.isDisabledDay(today,\n      this.opts.disableUntil,\n      this.opts.disableSince,\n      this.opts.disableWeekends,\n      this.opts.disableDays,\n      this.opts.disableDateRanges,\n      this.opts.enableDays)\n    ) {\n      this.selectDate(today);\n    }\n    if (today.year !== this.visibleMonth.year || today.month !== this.visibleMonth.monthNbr) {\n      this.visibleMonth = { monthTxt: this.opts.monthLabels[today.month], monthNbr: today.month, year: today.year };\n      this.generateCalendar(today.month, today.year, true);\n    }\n  }\n\n  cellClicked(cell: any): void {\n    // Cell clicked on the calendar\n    if (cell.cmo === this.prevMonthId) {\n      // Previous month day\n      this.prevMonth();\n    } else if (cell.cmo === this.currMonthId) {\n      // Current month day - if date is already selected clear it\n      if (cell.dateObj.year === this.selectedDate.year &&\n        cell.dateObj.month === this.selectedDate.month &&\n        cell.dateObj.day === this.selectedDate.day\n      ) {\n        this.clearDate();\n      } else {\n        this.selectDate(cell.dateObj);\n      }\n    } else if (cell.cmo === this.nextMonthId) {\n      // Next month day\n      this.nextMonth();\n    }\n    this.resetMonthYearEdit();\n  }\n\n  cellKeyDown(event: any, cell: any) {\n    // Cell keyboard handling\n    if ((event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) && !cell.disabled) {\n      event.preventDefault();\n      this.cellClicked(cell);\n    }\n  }\n\n  clearDate(): void {\n    // Clears the date and notifies parent using callbacks and value accessor\n    const date: IMyDate = { year: 0, month: 0, day: 0 };\n    this.dateChanged.emit({ date: date, jsdate: null, formatted: '', epoc: 0 });\n    this.onChangeCb('');\n    this.onTouchedCb();\n    this.updateDateValue(date, true);\n    this.tmp = { year: this.getToday().year, month: this.getToday().month, day: this.getToday().day };\n    this.setVisibleMonth();\n    this.labelActive = false;\n  }\n\n  selectDate(date: IMyDate): void {\n    // Date selected, notifies parent using callbacks and value accessor\n    this.tmp = date;\n    const dateModel: any = this.getDateModel(date);\n    // this.dateChanged.emit({ previousDate: this.selectionDayTxt, actualDate: dateModel });\n    this.dateChanged.emit({\n      date: date,\n      jsdate: null,\n      previousDateFormatted: this.selectionDayTxt,\n      actualDateFormatted: dateModel,\n      epoc: 0\n    });\n    this.onChangeCb(dateModel);\n    this.onTouchedCb();\n    this.updateDateValue(date, false);\n    if (this.showSelector) {\n      this.calendarToggle.emit(CalToggle.CloseByDateSel);\n\n    }\n    if (this.opts.closeAfterSelect) {\n      this.showSelector = false;\n      this.removeInlineStyle();\n    }\n    this.labelActive = true;\n    // hide calendar when date was clicked\n    // this.showSelector = false;\n  }\n\n  updateDateValue(date: IMyDate, clear: boolean): void {\n    // Updates date values\n    this.selectedDate = date;\n    this.tmp = date;\n    this.isDateSelected = true;\n    this.selectionDayTxt = clear ? '' : this.formatDate(date);\n    this.inputFieldChanged.emit({ value: this.selectionDayTxt, dateFormat: this.opts.dateFormat, valid: !clear });\n    this.invalidDate = false;\n  }\n\n  getDateModel(date: IMyDate): any {\n    // Creates a date model object from the given parameter\n    return this.formatDate(date);\n  }\n\n  preZero(val: string): string {\n    // Prepend zero if smaller than 10\n    return parseInt(val, 0) < 10 ? '0' + val : val;\n  }\n\n  formatDate(val: any): string {\n    // Returns formatted date string, if mmm is part of dateFormat returns month as a string\n    // days\n    const d = val.day; // 1 - 31\n    const dd = this.preZero(val.day); // 01 - 31\n    const ddd = this.opts.dayLabels[this.getWeekday(val)]; // Sun-Sat\n    const dddd = this.opts.dayLabelsFull[this.getWeekday(val)]; // Sunday – Saturday\n    const m = val.month; // 1 - 12\n    const mm = this.preZero(val.month); // 01 - 12\n    const mmm = this.getMonthShort(val.month); // Jan - Dec\n    const mmmm = this.getMonthFull(val.month); // January – December\n    const yy = val.year.toString().length === 2 ? val.year : val.year.toString().slice(2, 4); // 00 - 99\n    const yyyy = val.year;\n\n    const toReplace = this.opts.dateFormat.split(/(d{1,4}|m{1,4}|y{4}|yy|!.)/g);\n    let formatted = '';\n    toReplace.forEach((el: any) => {\n      switch (el) {\n        case 'dddd':\n          el = el.replace(el, dddd);\n          break;\n        case 'ddd':\n          el = el.replace(el, ddd);\n          break;\n        case 'dd':\n          el = el.replace(el, dd);\n          break;\n        case 'd':\n          el = el.replace(el, d);\n          break;\n        case 'mmmm':\n          el = el.replace(el, mmmm);\n          break;\n        case 'mmm':\n          el = el.replace(el, mmm);\n          break;\n        case 'mm':\n          el = el.replace(el, mm);\n          break;\n        case 'm':\n          el = el.replace(el, m);\n          break;\n        case 'yyyy':\n          el = el.replace(el, yyyy);\n          break;\n        case 'yy':\n          el = el.replace(el, yy);\n          break;\n      }\n      formatted += el;\n    });\n\n    return formatted;\n  }\n\n  monthText(m: number): string {\n    // Returns month as a text\n    return this.opts.monthLabels[m];\n  }\n\n  weekText(m: string): string {\n    // Returns month as a text\n    return this.opts.dayLabelsFull[m];\n  }\n\n  getMonthShort(m: number): string {\n    return this.opts.monthLabels[m];\n  }\n\n  getMonthFull(m: number): string {\n    return this.opts.monthLabelsFull[m];\n  }\n\n  monthStartIdx(y: number, m: number): number {\n    // Month start index\n    const d = new Date();\n    d.setDate(1);\n    d.setMonth(m - 1);\n    d.setFullYear(y);\n    const idx = d.getDay() + this.sundayIdx();\n    return idx >= 7 ? idx - 7 : idx;\n  }\n\n  daysInMonth(m: number, y: number): number {\n    // Return number of days of current month\n    return new Date(y, m, 0).getDate();\n  }\n\n  daysInPrevMonth(m: number, y: number): number {\n    // Return number of days of the previous month\n    const d: Date = this.getDate(y, m, 1);\n    d.setMonth(d.getMonth() - 1);\n    return this.daysInMonth(d.getMonth() + 1, d.getFullYear());\n  }\n\n  isCurrDay(d: number, m: number, y: number, cmo: number, today: IMyDate): boolean {\n    // Check is a given date the today\n    return d === today.day && m === today.month && y === today.year && cmo === this.currMonthId;\n  }\n\n  getToday(): IMyDate {\n    const date: Date = new Date();\n    return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n  }\n\n  getTimeInMilliseconds(date: IMyDate): number {\n    return this.getDate(date.year, date.month, date.day).getTime();\n  }\n\n  getWeekday(date: IMyDate): string {\n    // Get weekday: su, mo, tu, we ...\n    return this.weekDayOpts[this.utilService.getDayNumber(date)];\n  }\n\n  getDate(year: number, month: number, day: number): Date {\n    // Creates a date object from given year, month and day\n    return new Date(year, month - 1, day, 0, 0, 0, 0);\n  }\n\n  sundayIdx(): number {\n    // Index of Sunday day\n    return this.dayIdx > 0 ? 7 - this.dayIdx : 0;\n  }\n\n  generateCalendar(m: number, y: number, notifyChange: boolean): void {\n    this.dates.length = 0;\n    const today: IMyDate = this.getToday();\n    const monthStart: number = this.monthStartIdx(y, m);\n    const dInThisM: number = this.daysInMonth(m, y);\n    const dInPrevM: number = this.daysInPrevMonth(m, y);\n\n    let dayNbr = 1;\n    let cmo: number = this.prevMonthId;\n    for (let i = 1; i < 7; i++) {\n      const week: Array<IMyCalendarDay> = [];\n      if (i === 1) {\n        // First week\n        const pm = dInPrevM - monthStart + 1;\n        // Previous month\n        for (let j = pm; j <= dInPrevM; j++) {\n          const date: IMyDate = { year: y, month: m - 1, day: j };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(j, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n        }\n\n        cmo = this.currMonthId;\n        // Current month\n        const daysLeft: number = 7 - week.length;\n        for (let j = 0; j < daysLeft; j++) {\n          const date: IMyDate = { year: y, month: m, day: dayNbr };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(dayNbr, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n          dayNbr++;\n        }\n      } else {\n        // Rest of the weeks\n        for (let j = 1; j < 8; j++) {\n          if (dayNbr > dInThisM) {\n            // Next month\n            dayNbr = 1;\n            cmo = this.nextMonthId;\n          }\n          const date: IMyDate = { year: y, month: cmo === this.currMonthId ? m : m + 1, day: dayNbr };\n          week.push({\n            dateObj: date, cmo: cmo, currDay: this.isCurrDay(dayNbr, m, y, cmo, today),\n            dayNbr: this.utilService.getDayNumber(date),\n            disabled: this.utilService.isDisabledDay(date,\n              this.opts.disableUntil,\n              this.opts.disableSince,\n              this.opts.disableWeekends,\n              this.opts.disableDays,\n              this.opts.disableDateRanges,\n              this.opts.enableDays\n            ),\n            markedDate: this.utilService.isMarkedDate(date, this.opts.markDates, this.opts.markWeekends)\n          });\n          dayNbr++;\n        }\n      }\n      const weekNbr: number = this.opts.showWeekNumbers &&\n        this.opts.firstDayOfWeek === 'mo' ?\n        this.utilService.getWeekNumber(week[0].dateObj) : 0;\n      this.dates.push({ week: week, weekNbr: weekNbr });\n    }\n\n    this.setHeaderBtnDisabledState(m, y);\n\n    if (notifyChange) {\n      // Notify parent\n      this.calendarViewChanged.emit({\n        year: y,\n        month: m,\n        first: {\n          number: 1,\n          weekday: this.getWeekday({\n            year: y,\n            month: m,\n            day: 1\n          })\n        },\n        last: {\n          number: dInThisM,\n          weekday: this.getWeekday({\n            year: y,\n            month: m,\n            day: dInThisM\n          })\n        }\n      });\n    }\n\n    this.monthList();\n    this.yearsList();\n  }\n\n  parseSelectedDate(selDate: any): IMyDate {\n    // Parse selDate value - it can be string or IMyDate object\n    let date: IMyDate = { day: 0, month: 0, year: 0 };\n    if (typeof selDate === 'string') {\n      const sd: string = <string>selDate;\n      date.day = this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'dd');\n\n      date.month = this.opts.dateFormat.indexOf('mmm') !== -1\n        ? this.utilService.parseDatePartMonthName(this.opts.dateFormat, sd, 'mmm', this.opts.monthLabels)\n        : this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'mm');\n\n      date.year = this.utilService.parseDatePartNumber(this.opts.dateFormat, sd, 'yyyy');\n    } else if (typeof selDate === 'object') {\n      date = selDate;\n    }\n    this.selectionDayTxt = this.formatDate(date);\n    return date;\n  }\n\n  parseSelectedMonth(ms: string): IMyMonth {\n    return this.utilService.parseDefaultMonth(ms);\n  }\n\n  setHeaderBtnDisabledState(m: number, y: number): void {\n    let dpm = false;\n    let dpy = false;\n    let dnm = false;\n    let dny = false;\n    if (this.opts.disableHeaderButtons) {\n      dpm = this.utilService.isMonthDisabledByDisableUntil({\n        year: m === 1 ? y - 1 : y,\n        month: m === 1 ? 12 : m - 1,\n        day: this.daysInMonth(m === 1 ? 12 : m - 1, m === 1 ? y - 1 : y)\n      },\n        this.opts.disableUntil);\n      dpy = this.utilService.isMonthDisabledByDisableUntil({\n        year: y - 1,\n        month: m,\n        day: this.daysInMonth(m, y - 1)\n      },\n        this.opts.disableUntil);\n      dnm = this.utilService.isMonthDisabledByDisableSince({\n        year: m === 12 ? y + 1 : y,\n        month: m === 12 ? 1 : m + 1,\n        day: 1\n      },\n        this.opts.disableSince);\n      dny = this.utilService.isMonthDisabledByDisableSince({ year: y + 1, month: m, day: 1 }, this.opts.disableSince);\n    }\n    this.prevMonthDisabled = m === 1 && y === this.opts.minYear || dpm;\n    this.prevYearDisabled = y - 1 < this.opts.minYear || dpy;\n    this.nextMonthDisabled = m === 12 && y === this.opts.maxYear || dnm;\n    this.nextYearDisabled = y + 1 > this.opts.maxYear || dny;\n  }\n\n  checkActive() {\n    if (this.placeholder.length > 0) {\n      return true;\n    }\n    if (this.labelActive) {\n      return true;\n    }\n    if (this.isDateSelected) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IMyDate } from '../interfaces/date.interface';\nimport { IMyDateRange } from '../interfaces/dateRange.interface';\nimport { IMyMonth } from '../interfaces/month.interface';\nimport { IMyMonthLabels } from '../interfaces/monthLabels.interface';\nimport { IMyMarkedDates } from '../interfaces/markedDates.interface';\nimport { IMyMarkedDate } from '../interfaces/markedDate.interface';\nimport { IMyDateFormat } from '../interfaces/my-date-format.interface';\n\nconst M = 'm';\n/* const MM = 'mm'; */\n/* const MMM = 'mmm'; */\nconst D = 'd';\n/* const DD = 'dd'; */\n/* const YYYY = 'yyyy'; */\n\n@Injectable()\nexport class UtilService {\n  isDateValid(dateStr: string,\n    dateFormat: string,\n    minYear: number,\n    maxYear: number,\n    disableUntil: IMyDate,\n    disableSince: IMyDate,\n    disableWeekends: boolean,\n    disableDays: Array<IMyDate>,\n    disableDateRanges: Array<IMyDateRange>,\n    monthLabels: IMyMonthLabels,\n    enableDays: Array<IMyDate>\n    ): IMyDate {\n    const returnDate: IMyDate = {day: 0, month: 0, year: 0};\n    const daysInMonth: Array<number> = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    /* const isMonthStr: boolean = dateFormat.indexOf(MMM) !== -1; */\n    if (monthLabels === undefined) {}\n\n    const delimeters: Array<string> = this.getDateFormatDelimeters(dateFormat);\n\n    const dateValue: Array<IMyDateFormat> = this.getDateValue(dateStr, dateFormat, delimeters);\n    const year: number = this.getNumberByValue(dateValue[0]);\n    const month: number = this.getNumberByValue(dateValue[1]);\n    const day: number = this.getNumberByValue(dateValue[2]);\n\n    if (day !== -1 && month !== -1 && year !== -1) {\n      if (year < minYear || year > maxYear || month < 1 || month > 12) {\n        return returnDate;\n      }\n\n      const date: IMyDate = {year: year, month: month, day: day};\n\n      if (this.isDisabledDay(date, disableUntil, disableSince, disableWeekends, disableDays, disableDateRanges, enableDays)) {\n        return returnDate;\n      }\n\n      if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\n        daysInMonth[1] = 29;\n      }\n\n      if (day < 1 || day > daysInMonth[month - 1]) {\n        return returnDate;\n      }\n\n      // Valid date\n      return date;\n    }\n    return returnDate;\n  }\n\n  getDateValue(dateStr: string, dateFormat: string, delimeters: Array<string>): Array<IMyDateFormat> {\n    let del: string = delimeters[0];\n    if (delimeters[0] !== delimeters[1]) {\n        del = delimeters[0] + delimeters[1];\n    }\n    const re: any = new RegExp('[' + del + ']');\n    const ds: Array<string> = dateStr.split(re);\n    const df: Array<string> = dateFormat.split(re);\n    const da: Array<IMyDateFormat> = [];\n\n    for (let i = 0; i < df.length; i++) {\n        if (df[i].indexOf('yy') !== -1) {\n            da[0] = {value: ds[i], format: df[i]};\n        }\n        if (df[i].indexOf(M) !== -1) {\n            da[1] = {value: ds[i], format: df[i]};\n        }\n        if (df[i].indexOf(D) !== -1) {\n            da[2] = {value: ds[i], format: df[i]};\n        }\n    }\n    return da;\n}\n\ngetMonthNumberByMonthName(df: IMyDateFormat, monthLabels: IMyMonthLabels): number {\n  if (df.value) {\n      for (let key = 1; key <= 12; key++) {\n          if (df.value.toLowerCase() === monthLabels[key].toLowerCase()) {\n              return key;\n          }\n      }\n  }\n  return -1;\n}\n\ngetNumberByValue(df: IMyDateFormat): number {\n  if (!/^\\d+$/.test(df.value)) {\n      return -1;\n  }\n\n  let nbr: number = Number(df.value);\n  if (df.format.length === 1 && df.value.length !== 1 && nbr < 10 || df.format.length === 1 && df.value.length !== 2 && nbr >= 10) {\n      nbr = -1;\n  } else if (df.format.length === 2 && df.value.length > 2) {\n      nbr = -1;\n  }\n  return nbr;\n}\n\n  getDateFormatSeparator(dateFormat: string): string {\n    return dateFormat.replace(/[dmy]/g, '')[0];\n  }\n\n  getDateFormatDelimeters(dateFormat: string): Array<string> | any {\n    return dateFormat.match(/[^(dmy)]{1,}/g);\n  }\n\n  isMonthLabelValid(monthLabel: string, monthLabels: IMyMonthLabels): number {\n    for (let key = 1; key <= 12; key++) {\n      if (monthLabel.toLowerCase() === monthLabels[key].toLowerCase()) {\n        return key;\n      }\n    }\n    return -1;\n  }\n\n  isYearLabelValid(yearLabel: number, minYear: number, maxYear: number): number {\n    if (yearLabel >= minYear && yearLabel <= maxYear) {\n      return yearLabel;\n    }\n    return -1;\n  }\n\n  parseDatePartNumber(dateFormat: string, dateString: string, datePart: string): number {\n    const pos: number = this.getDatePartIndex(dateFormat, datePart);\n    if (pos !== -1) {\n      const value: string = dateString.substring(pos, pos + datePart.length);\n      if (!/^\\d+$/.test(value)) {\n        return -1;\n      }\n      return parseInt(value, 0);\n    }\n    return -1;\n  }\n\n  parseDatePartMonthName(dateFormat: string, dateString: string, datePart: string, monthLabels: IMyMonthLabels): number {\n    const pos: number = this.getDatePartIndex(dateFormat, datePart);\n    if (pos !== -1) {\n      return this.isMonthLabelValid(dateString.substring(pos, pos + datePart.length), monthLabels);\n    }\n    return -1;\n  }\n\n  getDatePartIndex(dateFormat: string, datePart: string): number {\n    return dateFormat.indexOf(datePart);\n  }\n\n  // parseDefaultMonth(monthString: string): IMyMonth {\n    parseDefaultMonth(monthString: string | any): IMyMonth {\n    const month: IMyMonth = {monthTxt: '', monthNbr: 0, year: 0};\n    if (monthString !== '') {\n      const split = monthString.split(monthString.match(/[^0-9]/)[0]);\n      month.monthNbr = split[0].length === 2 ? parseInt(split[0], 0) : parseInt(split[1], 0);\n      month.year = split[0].length === 2 ? parseInt(split[1], 0) : parseInt(split[0], 0);\n    }\n    return month;\n  }\n\n  isDisabledDay(  date: IMyDate,\n    disableUntil: IMyDate,\n    disableSince: IMyDate,\n    disableWeekends: boolean,\n    disableDays: Array<IMyDate>,\n    disableDateRanges: Array<IMyDateRange>,\n    enableDays: Array<IMyDate>\n    ): boolean {\n    for (const e of enableDays) {\n      if (e.year === date.year && e.month === date.month && e.day === date.day) {\n        return false;\n      }\n    }\n\n    const dateMs: number = this.getTimeInMilliseconds(date);\n    if (this.isInitializedDate(disableUntil) && dateMs <= this.getTimeInMilliseconds(disableUntil)) {\n      return true;\n    }\n\n    if (this.isInitializedDate(disableSince) && dateMs >= this.getTimeInMilliseconds(disableSince)) {\n      return true;\n    }\n\n    if (disableWeekends) {\n      const dn = this.getDayNumber(date);\n      if (dn === 0 || dn === 6) {\n        return true;\n      }\n    }\n\n    for (const d of disableDays) {\n      if (d.year === date.year && d.month === date.month && d.day === date.day) {\n        return true;\n      }\n    }\n\n    for (const d of disableDateRanges) {\n      if (this.isInitializedDate(d.begin) &&\n        this.isInitializedDate(d.end) &&\n        dateMs >= this.getTimeInMilliseconds(d.begin) &&\n        dateMs <= this.getTimeInMilliseconds(d.end)\n        )  {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate {\n    for (const md of markedDates) {\n      for (const d of md.dates) {\n        if (d.year === date.year && d.month === date.month && d.day === date.day) {\n          return {marked: true, color: md.color};\n        }\n      }\n    }\n    if (markWeekends && markWeekends.marked) {\n      const dayNbr = this.getDayNumber(date);\n      if (dayNbr === 0 || dayNbr === 6) {\n        return {marked: true, color: markWeekends.color};\n      }\n    }\n    return {marked: false, color: ''};\n  }\n\n  getWeekNumber(date: IMyDate): number {\n    const d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\n    d.setDate(d.getDate() + (d.getDay() === 0 ? -3 : 4 - d.getDay()));\n    return Math.round(((d.getTime() - new Date(d.getFullYear(), 0, 4).getTime()) / 86400000) / 7) + 1;\n  }\n\n  isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean {\n    return this.isInitializedDate(disableUntil) && this.getTimeInMilliseconds(date) <= this.getTimeInMilliseconds(disableUntil);\n  }\n\n  isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean {\n    return this.isInitializedDate(disableSince) && this.getTimeInMilliseconds(date) >= this.getTimeInMilliseconds(disableSince);\n  }\n\n  isInitializedDate(date: IMyDate): boolean {\n    return date.year !== 0 && date.month !== 0 && date.day !== 0;\n  }\n\n  getTimeInMilliseconds(date: IMyDate): number {\n    return new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0).getTime();\n  }\n\n  getDayNumber(date: IMyDate): number {\n    const d: Date = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);\n    return d.getDay();\n  }\n}\n","import { Directive, ElementRef,  AfterViewInit, Input } from '@angular/core';\n\n@Directive({\n  selector: '[mdbDpFocus]'\n})\n\nexport class FocusDirective implements AfterViewInit {\n  @Input() value: string;\n\n  constructor(private el: ElementRef) {}\n\n  // Focus to element: if value 0 = don't set focus, 1 = set only focus, 2 = set focus and set cursor position\n  ngAfterViewInit() {\n    // if (this.value === \"0\") {\n      //     return;\n      // }\n\n    // this.renderer.invokeElementMethod(this.el.nativeElement, 'focus', []);\n    this.el.nativeElement.focus();\n\n      // // Set cursor position at the end of text if input element\n      // if (this.value === \"2\") {\n        //     let len = this.el.nativeElement.value.length;\n        //     this.el.nativeElement.setSelectionRange(len, len);\n        // }\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, HostListener } from '@angular/core';\nimport { IMyInputAutoFill } from '../interfaces/inputAutofill.interface';\n\nenum KeyCode {backspace = 8, delete = 46}\n\n@Directive({\n  selector: '[mdbInputAutoFill]'\n})\n\nexport class InputAutoFillDirective {\n  @Input() opts: IMyInputAutoFill;\n\n  constructor(private el: ElementRef, private rndr: Renderer2) {}\n\n  @HostListener('keyup', ['$event']) onKeyUp(evt: KeyboardEvent) {\n    if (!this.opts.enabled || evt.keyCode === KeyCode.backspace || evt.keyCode === KeyCode.delete) {\n      return;\n    }\n\n    const val: string = this.getInputValue();\n    const ews: boolean = this.endsWith(val, this.opts.separator);\n    const parts: Array<string> = val.split(this.opts.separator);\n    const idx: number = parts.length - 1;\n\n    if (val.indexOf(this.opts.separator + this.opts.separator) !== -1 || idx > 2) {\n      return;\n    }\n\n    if (!ews &&\n      (val.length === this.getPartLength(0) ||\n        val.length === this.getPartLength(0) + this.getPartLength(1) + this.opts.separator.length)) {\n      this.setInputValue(val + this.opts.separator);\n  } else if (ews &&\n    parts[idx - 1].length < this.getPartLength(idx - 1) &&\n    this.isNumber(parts[idx - 1]) && (this.isDay(idx - 1) || this.isMonth(idx - 1))) {\n    this.setInputValue(this.insertPos(val, val.length - 2, '0'));\n  } else if (parts[idx].length < this.getPartLength(idx) &&\n    this.isNumber(parts[idx]) &&\n    (Number(parts[idx]) > 3 &&\n      this.isDay(idx) ||\n      Number(parts[idx]) > 1 &&\n      this.isMonth(idx))) {\n    this.setInputValue(this.insertPos(val, val.length - 1, '0') + (idx < 2 ? this.opts.separator : ''));\n  }\n}\n\n  private endsWith(val: string, suffix: string): boolean {\n    return val.indexOf(suffix, val.length - suffix.length) !== -1;\n  }\n\n  private insertPos(str: string, idx: number, val: string): string {\n    return str.substr(0, idx) + val + str.substr(idx);\n  }\n\n  private getPartLength(idx: number): number {\n    return this.opts.formatParts[idx].length;\n  }\n\n  private isNumber(val: string): boolean {\n    return val.match(/[1-9]/) !== null;\n  }\n\n  private isDay(idx: number): boolean {\n    return this.opts.formatParts[idx].indexOf('d') !== -1;\n  }\n\n  private isMonth(idx: number): boolean {\n    return this.opts.formatParts[idx].indexOf('m') !== -1 && this.opts.formatParts[idx].length === 2;\n  }\n\n  private getInputValue(): string {\n    return this.el.nativeElement.value;\n  }\n\n  private setInputValue(val: string): void {\n    this.rndr.setProperty(this.el.nativeElement, 'value', val);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MdbDateFormatDirective } from './mdb-date-format.directive';\nimport { MdbCreditCardDirective } from './mdb-credit-card.directive';\nimport { MdbCvvDirective } from './mdb-cvv.directive';\n\n@NgModule({\n  declarations: [\n    MdbDateFormatDirective,\n    MdbCreditCardDirective,\n    MdbCvvDirective\n  ],\n  exports: [\n    MdbDateFormatDirective,\n    MdbCreditCardDirective,\n    MdbCvvDirective\n  ]\n})\nexport class AutoFormatModule {\n}\n","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[mdbCvv]',\n})\nexport class MdbCvvDirective {\n\n  @HostBinding('attr.maxLength') maxLength = '4';\n\n  @HostListener('input', ['$event'])\n  onInput(event: any) {\n    this.formatInput(event);\n  }\n\n  formatInput(event: any) {\n    const input = event.target.value;\n    const newValue = this.getFormattedValue(input);\n    event.target.value = newValue;\n  }\n\n  getFormattedValue(value: string) {\n    value = this.removeNonDigits(value);\n    return value;\n  }\n\n  removeNonDigits(value: string) {\n    return value.replace(/\\D/g, '');\n  }\n}\n","import { Directive, HostListener, Input, HostBinding } from '@angular/core';\n\nexport interface CreditCard {\n  name: string;\n  fullName: string;\n  re: RegExp;\n  pattern: RegExp;\n  maxLength: number;\n  cvvLength: number;\n}\n\n@Directive({\n  selector: '[mdbCreditCard]',\n  exportAs: 'mdbCreditCard'\n})\nexport class MdbCreditCardDirective {\n  private standardPattern = /(\\d{1,4})/g;\n  cardName: string;\n  cardFullName: string;\n\n  private defaultCard: CreditCard = {\n    name: '',\n    fullName: '',\n    re: /\\d{0,16}/,\n    pattern: this.standardPattern,\n    maxLength: 19,\n    cvvLength: 3\n  };\n\n  private cards: CreditCard[] = [\n    {\n      name: 'visa',\n      fullName: 'Visa',\n      re: /^4\\d{0,15}/,\n      pattern: this.standardPattern,\n      maxLength: 16,\n      cvvLength: 3\n    },\n    {\n      name: 'mastercard',\n      fullName: 'Mastercard',\n      re: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n      pattern: this.standardPattern,\n      maxLength: 16,\n      cvvLength: 3\n    },\n    {\n      name: 'amex',\n      fullName: 'American Express',\n      re: /^3[47]\\d{0,13}/,\n      pattern: /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/,\n      maxLength: 15,\n      cvvLength: 4\n    },\n    {\n      name: 'jcb',\n      fullName: 'JCB',\n      re: /^(?:35\\d{0,2})\\d{0,12}/,\n      pattern: this.standardPattern,\n      maxLength: 19,\n      cvvLength: 3\n    },\n    {\n      name: 'discover',\n      fullName: 'Discover',\n      re: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n      pattern: this.standardPattern,\n      maxLength: 19,\n      cvvLength: 3\n    },\n    {\n      name: 'diners-club',\n      fullName: 'Diners Club',\n      re: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n      pattern: /(\\d{1,4})(\\d{1,5})?(\\d{1,4})?/,\n      maxLength: 19,\n      cvvLength: 3\n    }\n  ];\n\n  @Input()\n  get additionalCards() { return this._additionalCards; }\n  set additionalCards(cards: CreditCard[]) {\n    this._additionalCards = cards;\n    this.addCards(cards);\n  }\n  private _additionalCards: CreditCard[];\n\n  @Input()\n  get separator() { return this._separator; }\n  set separator(separator: string) {\n    this._separator = separator;\n  }\n  private _separator = ' ';\n\n  constructor() {}\n\n  @HostBinding('attr.maxLength') maxLength: string;\n\n  @HostListener('input', ['$event'])\n  onInput(event: any) {\n    this.formatInput(event);\n  }\n\n  private formatInput(event: any) {\n    const input = event.target.value;\n    const formattedInput = this.getFormattedInput(input);\n    event.target.value = formattedInput;\n  }\n\n  private getFormattedInput(value: string) {\n    value = this.removeNonDigits(value);\n    const card = this.findCardByNumber(value);\n\n    this.updateCurrentCardNames(card.name, card.fullName);\n\n    let cardNumMaxLength: number;\n\n    if (this.hasStandardPattern(card)) {\n      const matches: RegExpMatchArray | null = value.match(card.pattern);\n\n      if (matches === null) {\n        return value;\n      }\n\n      cardNumMaxLength = card.maxLength + matches.length - 1;\n      this.maxLength = cardNumMaxLength.toString();\n      return matches.join(this.separator);\n\n    } else {\n      const results: RegExpExecArray | null = card.pattern.exec(value);\n\n      if (results === null) {\n        return value;\n      }\n      results.shift();\n      cardNumMaxLength = card.maxLength + results.length - 1;\n      this.maxLength = cardNumMaxLength.toString();\n      return results.filter(this.isMatch).join(this.separator);\n    }\n  }\n\n  private removeNonDigits(value: string) {\n    return value.replace(/\\D/g, '');\n  }\n\n  private hasStandardPattern(card: CreditCard) {\n    return card.pattern.toString() === this.standardPattern.toString();\n  }\n\n  private isMatch(match: string) {\n    return match !== undefined;\n  }\n\n  private updateCurrentCardNames(name: string, fullName: string) {\n    this.cardName = name;\n    this.cardFullName = fullName;\n  }\n\n  private findCardByNumber(value: string) {\n    const cardType = this.cards.find( (card) => {\n      return card.re.test(value);\n    });\n\n    if (!cardType) {\n      return this.defaultCard;\n    }\n\n    return cardType;\n  }\n\n  public addCards(newCards: CreditCard[]) {\n    newCards.forEach( (card) => {\n      this.cards.push(card);\n    });\n  }\n}\n","import { Directive, HostListener, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[mdbDateFormat]',\n})\nexport class MdbDateFormatDirective implements OnInit {\n  resultLength: number;\n  separatorsNumber: number;\n\n  @Input() separator = '/';\n  @Input() format = ['dd', 'mm', 'yyyy'];\n\n  @HostListener('input', ['$event'])\n  @HostListener('paste', ['$event'])\n  onInput(event: any) {\n    const currentValue = event.target.value;\n    const newValue = this.getFormattedDate(currentValue);\n    event.target.value = newValue;\n  }\n\n  ngOnInit() {\n    this.setSeparatorsNumber();\n    this.setResultLength();\n  }\n\n  setSeparatorsNumber() {\n    this.separatorsNumber = this.format.length - 1;\n  }\n\n  setResultLength() {\n    let resLength = 0;\n    this.format.forEach( (value) => {\n      resLength += value.length;\n    });\n    this.resultLength = resLength + this.separatorsNumber;\n  }\n\n  getFormattedDate(date: string) {\n    const dateParts = this.getDateParts(date);\n\n    const result = dateParts.map( (part, index) => {\n      return part = this.formatDateParts(part, index);\n    });\n\n    return result.join(this.separator).slice(0, this.resultLength);\n  }\n\n  getDateParts(date: string): string[] {\n    date = this.getDigits(date).slice(0, this.resultLength - this.separatorsNumber);\n    const parts: string[] = [];\n    const partsIndex = {\n      first: this.format[0].length,\n      mid: this.format[0].length + this.format[1].length,\n      last: this.resultLength\n    };\n\n    parts[0] = date.slice(0, partsIndex.first);\n\n    if (date.length > partsIndex.first) {\n      parts[1] = date.slice(partsIndex.first, partsIndex.mid);\n    }\n\n    if (date.length > partsIndex.mid) {\n      parts[2] = date.slice(partsIndex.mid, partsIndex.last);\n    }\n\n    return parts;\n  }\n\n  getDigits(value: string) {\n    return value.replace(/\\D/g, '');\n  }\n\n  formatDateParts(datePart: any, index: number) {\n    switch (this.format[index]) {\n      case 'dd':\n        datePart = this.getFormattedDay(datePart);\n        break;\n\n      case 'mm':\n        datePart = this.getFormattedMonth(datePart);\n        break;\n    }\n\n    return datePart;\n  }\n\n  getFormattedDay(value: string) {\n    const dayFirstNum = parseInt(value.charAt(0), 10);\n    if (value) {\n      if (dayFirstNum > 3 && dayFirstNum !== 0) {\n        return '0' + value.charAt(0);\n      } else {\n        return value;\n      }\n    }\n  }\n\n  getFormattedMonth(value: string) {\n    const monthFirstNum = parseInt(value.charAt(0), 10);\n    const monthNum = parseInt(value, 10);\n\n    if (value) {\n      if (monthFirstNum > 1 && monthFirstNum !== 0) {\n        return '0' + value.charAt(0);\n      } else if (monthNum > 12) {\n        return '12';\n      } else {\n        return value;\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule  } from '@angular/common';\n\nimport { CardRevealComponent } from './card-reveal.component';\nimport { CardRotatingComponent } from './card-rotating.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ CardRevealComponent, CardRotatingComponent],\n  exports: [CardRevealComponent, CardRotatingComponent]\n})\nexport class CardsModule {\n  public static forRoot(): ModuleWithProviders {\n  return {ngModule: CardsModule, providers: []};\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mdb-card-rotating, mdb-flipping-card',\n  template: \"<div class=\\\"flip-container card-wrapper\\\" [ngClass]=\\\"{'rotate': rotate}\\\"> <div class=\\\"flipper card-rotating effect__click tp-box\\\"> <ng-content></ng-content> </div> </div> \"\n})\n\nexport class CardRotatingComponent {\n  public rotate = false;\n\n  toggle() {\n    this.rotate = !this.rotate;\n  }\n}\n","import { Component, ElementRef, ViewChild, Renderer2 } from '@angular/core';\nimport { socialsState } from '../animations/animations.component';\n\n@Component({\n  selector: 'mdb-card-reveal',\n  template: \"<div #cardOverflow class=\\\"card-overflow col-12\\\" > <div #cardFront class=\\\"card-front\\\"> <ng-content select=\\\".card-front\\\" ></ng-content> </div> <div #cardReveal class=\\\"card-reveal\\\" *ngIf=\\\"show\\\"  [@socialsState]=\\\"socials\\\"> <ng-content select=\\\".card-reveal\\\"></ng-content> </div> </div> \",\n  animations: [socialsState]\n})\n\nexport class CardRevealComponent {\n  @ViewChild('cardReveal') cardReveal: ElementRef;\n  @ViewChild('cardFront') cardFront: ElementRef;\n  @ViewChild('cardOverflow') cardOverflow: ElementRef;\n  public socials: any;\n  public show: boolean;\n\n  constructor(private _r: Renderer2) { }\n  toggle() {\n    this.show = !this.show;\n    this.socials = (this.socials === 'active') ? 'inactive' : 'active';\n    setTimeout(() => {\n      try {\n        const height = this.cardFront.nativeElement.offsetHeight;\n        this._r.setStyle(this.cardReveal.nativeElement.firstElementChild, 'height', height + 'px');\n        this._r.setStyle(this.cardOverflow.nativeElement, 'height', height + 'px');\n      } catch (error) { }\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CompleterComponent } from './components/completer.component';\nimport { CompleterListItemComponent } from './components/completer-list-item.component';\nimport { CompleterService } from './services/completer.service';\nimport { LocalDataFactoryProvider, RemoteDataFactoryProvider } from './services/data-factory.service';\nimport { MdbCompleterDirective } from './directives/completer.directive';\nimport { MdbDropdownDirective } from './directives/dropdown.directive';\nimport { MdbInputCompleteDirective } from './directives/input.directive';\nimport { MdbListDirective } from './directives/list-context.directive';\nimport { MdbRowDirective } from './directives/row.directive';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule\n  ],\n  declarations: [\n    CompleterListItemComponent,\n    MdbCompleterDirective,\n    MdbDropdownDirective,\n    MdbInputCompleteDirective,\n    MdbListDirective,\n    MdbRowDirective,\n    CompleterComponent\n  ],\n  exports: [\n    CompleterComponent,\n    CompleterListItemComponent,\n    MdbCompleterDirective,\n    MdbDropdownDirective,\n    MdbInputCompleteDirective,\n    MdbListDirective,\n    MdbRowDirective\n  ],\n  providers: [\n    CompleterService,\n    LocalDataFactoryProvider,\n    RemoteDataFactoryProvider\n  ]\n})\nexport class AutocompleteModule { }\n","import { Http } from '@angular/http';\n\nimport { LocalData } from './local-data.service';\nimport { RemoteData } from './remote-data.service';\n\n\nexport function localDataFactory() {\n  return () => {\n    return new LocalData();\n  };\n}\n\nexport function remoteDataFactory(http: Http) {\n  return () => {\n    return new RemoteData(http);\n  };\n}\n\nexport let LocalDataFactoryProvider = { provide: LocalData, useFactory: localDataFactory };\nexport let RemoteDataFactoryProvider = { provide: RemoteData, useFactory: remoteDataFactory, deps: [Http] };\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnInit } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbDropdownDirective, CtrRowElement, CtrRowItem } from './dropdown.directive';\n\n@Directive({\n  selector: '[mdbRow]',\n})\nexport class MdbRowDirective implements CtrRowElement, OnInit {\n\n  private selected = false;\n  private _rowIndex: number;\n  private _item: CompleterItem;\n\n  constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: MdbDropdownDirective) { }\n\n  public ngOnInit() {\n    this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n  }\n\n  @Input()\n  set mdbRow(index: number) {\n    this._rowIndex = index;\n  }\n\n  @Input()\n  set dataItem(item: CompleterItem) {\n    this._item = item;\n  }\n\n  @HostListener('click') public onClick() {\n    this.dropdown.onSelected(this._item);\n  }\n\n  @HostListener('mouseenter') public onMouseEnter() {\n    this.dropdown.highlightRow(this._rowIndex);\n  }\n\n  public setHighlighted(selected: boolean) {\n    this.selected = selected;\n    if (this.selected) {\n      this.renderer.addClass(this.el.nativeElement, 'completer-selected-row');\n    } else if (!this.selected) {\n      this.renderer.removeClass(this.el.nativeElement, 'completer-selected-row');\n    }\n  }\n\n  public getNativeElement() {\n    return this.el.nativeElement;\n  }\n\n  public getDataItem() {\n    return this._item;\n  }\n}\n","// import { catchError } from 'rxjs/operators';\n\nimport {  timer as observableTimer, Subscription } from 'rxjs';\nimport { ChangeDetectorRef, Directive, Host, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\nimport { MdbCompleterDirective, CompleterList } from './completer.directive';\nimport { CompleterData } from '../services/completer-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MIN_SEARCH_LENGTH, PAUSE, CLEAR_TIMEOUT, isNil } from '../globals';\n\nexport class CtrListContext {\n  constructor(\n    public results: CompleterItem[],\n    public searching: boolean,\n    public searchInitialized: boolean,\n    public isOpen: boolean\n  ) { }\n}\n\n@Directive({\n  selector: '[mdbList]',\n})\nexport class MdbListDirective implements OnInit, CompleterList {\n  @Input() public mdbListMinSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public mdbListPause = PAUSE;\n  @Input() public mdbListAutoMatch = false;\n  @Input() public mdbListAutoHighlight: any = false;\n\n  // private _dataService: CompleterData ;\n  private _dataService: CompleterData | any;\n  // private results: CompleterItem[] = [];\n  public setToNullValue: any = null;\n  // private term: string = null;\n  private term: string | any = null;\n  // private searching = false;\n  // private searchTimer: Subscription = null;\n  private searchTimer: Subscription | any = null;\n  // private clearTimer: Subscription = null;\n  private clearTimer: Subscription | any = null;\n  private ctx = new CtrListContext([], false, false, false);\n  private _initialValue: any = null;\n  private completer: MdbCompleterDirective | any;\n  constructor(\n    // @Host() private completer: MdbCompleterDirective,\n    @Host() private tmpCompleter: MdbCompleterDirective,\n    private templateRef: TemplateRef<CtrListContext>,\n    private viewContainer: ViewContainerRef,\n    private cd: ChangeDetectorRef) {\n    this.completer = this.tmpCompleter;\n  }\n\n  public ngOnInit() {\n    this.completer.registerList(this);\n    this.viewContainer.createEmbeddedView(\n      this.templateRef,\n      new CtrListContext([], false, false, false)\n    );\n  }\n\n  @Input('mdbList')\n  public set dataService(newService: CompleterData) {\n    this._dataService = newService;\n    if (this._dataService) {\n      this._dataService\n        // .catch(err => this.handleError(err))\n        // .catch((err: any) => this.handleError(err))\n        // .subscribe(results => {\n        .subscribe((results: any) => {\n          try {\n            this.ctx.searchInitialized = true;\n            this.ctx.searching = false;\n            this.ctx.results = results;\n            if (this.mdbListAutoMatch && results.length === 1 && results[0].title && !isNil(this.term) &&\n              results[0].title.toLocaleLowerCase() === this.term.toLocaleLowerCase()) {\n              // Do automatch\n              this.completer.onSelected(results[0]);\n            }\n            if (this._initialValue) {\n              this.initialValue = this._initialValue;\n              // this._initialValue = null;\n              this._initialValue = this.setToNullValue;\n            }\n            if (this.mdbListAutoHighlight) {\n              this.completer.autoHighlightIndex = this.getBestMatchIndex();\n            }\n            this.refreshTemplate();\n          } catch (err) {\n\n          }\n\n        });\n    }\n  }\n\n  @Input('mdbListInitialValue')\n  public set initialValue(value: any) {\n    if (this._dataService && typeof this._dataService.convertToItem === 'function') {\n      setTimeout(() => {\n        const initialItem = this._dataService.convertToItem(value);\n        if (initialItem) {\n          this.completer.onSelected(initialItem, false);\n        }\n      });\n    } else if (!this._dataService) {\n      this._initialValue = value;\n    }\n  }\n\n  public search(term: string) {\n    if (!isNil(term) && term.length >= this.mdbListMinSearchLength && this.term !== term) {\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n        this.searchTimer = null;\n      }\n      if (!this.ctx.searching) {\n        this.ctx.results = [];\n        this.ctx.searching = true;\n        this.ctx.searchInitialized = true;\n        this.refreshTemplate();\n      }\n      if (this.clearTimer) {\n        this.clearTimer.unsubscribe();\n      }\n      this.searchTimer = observableTimer(this.mdbListPause).subscribe(() => {\n        try {\n          this.searchTimerComplete(term);\n        } catch (err) {\n        }\n\n      });\n    } else if (!isNil(term) && term.length < this.mdbListMinSearchLength) {\n      this.clear();\n    }\n  }\n\n  public clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n    }\n    this.clearTimer = observableTimer(CLEAR_TIMEOUT).subscribe(() => {\n      this._clear();\n    });\n  }\n\n  public open() {\n    if (!this.ctx.searchInitialized) {\n      this.search('');\n    }\n    this.refreshTemplate();\n  }\n\n  public isOpen(open: boolean) {\n    this.ctx.isOpen = open;\n  }\n\n  private _clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n      this.searchTimer = null;\n    }\n    if (this.dataService) {\n      this.dataService.cancel();\n    }\n\n    this.viewContainer.clear();\n  }\n\n  private searchTimerComplete(term: string): any {\n    // Begin the search\n    if (isNil(term) || term.length < this.mdbListMinSearchLength) {\n      this.ctx.searching = false;\n      return;\n    }\n    this.term = term;\n    this._dataService.search(term);\n  }\n\n  // private handleError(error: any) {\n  //   this.ctx.searching = false;\n  //   let errMsg = 'search error';\n  //   if (error) {\n  //     errMsg = (error.message) ? error.message :\n  //       error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n  //   }\n\n  //   if (console && console.error) {\n  //     console.error(errMsg); // log to console\n  //   }\n  //   this.refreshTemplate();\n\n  //   return observableThrowError(errMsg);\n  // }\n\n  private refreshTemplate() {\n    // Recreate the template\n    this.viewContainer.clear();\n    if (this.ctx.results && this.ctx.isOpen) {\n      this.viewContainer.createEmbeddedView(\n        this.templateRef,\n        this.ctx\n      );\n    }\n    this.cd.markForCheck();\n  }\n\n  private getBestMatchIndex() {\n    if (!this.ctx.results) {\n      return null;\n    }\n\n    // First try to find the exact term\n    let bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase() === this.term.toLocaleLowerCase());\n    // If not try to find the first item that starts with the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().startsWith(this.term.toLocaleLowerCase()));\n    }\n    // If not try to find the first item that includes the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex(item => item.title.toLowerCase().includes(this.term.toLocaleLowerCase()));\n    }\n\n    return bestMatch < 0 ? null : bestMatch;\n  }\n\n}\n","\nimport {timer as observableTimer,  Subscription } from 'rxjs';\nimport { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbCompleterDirective } from './completer.directive';\nimport { isNil } from '../globals';\n\n\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\n\n@Directive({\n  selector: '[mdbInput]',\n})\nexport class MdbInputCompleteDirective {\n  @Input('clearSelected') public clearSelected = false;\n  @Input('clearUnselected') public clearUnselected = false;\n  @Input('overrideSuggested') public overrideSuggested = false;\n  @Input('fillHighlighted') public fillHighlighted = true;\n  @Input('openOnFocus') public openOnFocus = false;\n\n  @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\n  private _searchStr = '';\n  private _displayStr = '';\n  private ngModel: NgModel | any;\n  // private blurTimer: Subscription = null;\n  private blurTimer: Subscription | any = null;\n  // constructor( @Host() private completer: MdbCompleterDirective, private ngModel: NgModel, private el: ElementRef) {\n  constructor( @Host() private completer: MdbCompleterDirective, private tempngModel: NgModel, private el: ElementRef) {\n    this.ngModel = this.tempngModel;\n\n    this.completer.selected.subscribe((item: CompleterItem) => {\n      if (!item) {\n        return;\n      }\n      if (this.clearSelected) {\n        this.searchStr = '';\n      } else {\n        this.searchStr = item.title;\n      }\n      this.ngModelChange.emit(this.searchStr);\n    });\n    this.completer.highlighted.subscribe((item: CompleterItem) => {\n      if (this.fillHighlighted) {\n        if (item) {\n          this._displayStr = item.title;\n          this.ngModelChange.emit(item.title);\n        } else {\n          this._displayStr = this.searchStr;\n          this.ngModelChange.emit(this.searchStr);\n        }\n      }\n    });\n    // this.ngModel.valueChanges.subscribe(value => {\n    this.ngModel.valueChanges.subscribe((value: any) => {\n      if (!isNil(value) && this._displayStr !== value) {\n        if (this.searchStr !== value) {\n          this.completer.search(value);\n        }\n        this.searchStr = value;\n      }\n    });\n  }\n\n  @HostListener('keyup', ['$event'])\n  public keyupHandler(event: any): any {\n    if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n      // do nothing\n      return;\n    }\n\n    if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n      event.preventDefault();\n    } else if (event.keyCode === KEY_DW) {\n      event.preventDefault();\n\n      this.completer.search(this.searchStr);\n    } else if (event.keyCode === KEY_ES) {\n      this.restoreSearchValue();\n      this.completer.clear();\n    } else {\n      if (this.searchStr) {\n        this.completer.open();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  public keydownHandler(event: any) {\n    if (event.keyCode === KEY_EN) {\n      if (this.completer.hasHighlighted()) {\n        event.preventDefault();\n      }\n      this.handleSelection();\n    } else if (event.keyCode === KEY_DW) {\n      event.preventDefault();\n      this.completer.open();\n      this.completer.nextRow();\n    } else if (event.keyCode === KEY_UP) {\n      event.preventDefault();\n      this.completer.prevRow();\n    } else if (event.keyCode === KEY_TAB) {\n      this.handleSelection();\n    } else if (event.keyCode === KEY_ES) {\n      // This is very specific to IE10/11 #272\n      // without this, IE clears the input text\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('blur')\n  public onBlur(): any {\n    // Check if we need to cancel Blur for IE\n    if (this.completer.isCancelBlur()) {\n      setTimeout(\n        () => {\n          // get the focus back\n          this.el.nativeElement.focus();\n        },\n        0\n      );\n      return;\n    }\n    this.blurTimer = observableTimer(200).subscribe(\n      () => {\n        this.blurTimer.unsubscribe();\n        this.blurTimer = null;\n        if (this.overrideSuggested) {\n          this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n          if (this.clearUnselected && !this.completer.hasSelected) {\n            this.searchStr = '';\n            this.el.nativeElement.value = '';\n          } else {\n            this.restoreSearchValue();\n          }\n        }\n        this.completer.clear();\n      }\n    );\n  }\n\n  @HostListener('focus')\n  public onfocus() {\n    if (this.blurTimer) {\n      this.blurTimer.unsubscribe();\n      this.blurTimer = null;\n    }\n    if (this.openOnFocus) {\n      this.completer.open();\n    }\n  }\n\n  public get searchStr() {\n    return this._searchStr;\n  }\n\n  public set searchStr(term: string) {\n    this._searchStr = term;\n    this._displayStr = term;\n  }\n\n  private handleSelection() {\n    if (this.completer.hasHighlighted()) {\n      this._searchStr = '';\n      this.completer.selectCurrent();\n    } else if (this.overrideSuggested) {\n      this.completer.onSelected({ title: this.searchStr, originalObject: null });\n    } else {\n      this.completer.clear();\n    }\n  }\n\n  private restoreSearchValue() {\n    if (this.fillHighlighted) {\n      if (this._displayStr !== this.searchStr) {\n        this._displayStr = this.searchStr;\n        this.ngModelChange.emit(this.searchStr);\n      }\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, OnInit } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { MdbCompleterDirective, CompleterDropdown } from './completer.directive';\n\n\nexport interface CtrRowElement {\n  setHighlighted(selected: boolean): void;\n  getNativeElement(): any;\n  getDataItem(): CompleterItem;\n}\n\nexport class CtrRowItem {\n  constructor(public row: CtrRowElement, public index: number) { }\n}\n\n@Directive({\n  selector: '[mdbAutocompleteDropdown]',\n})\nexport class MdbDropdownDirective implements CompleterDropdown, OnDestroy, OnInit, AfterViewInit {\n\n  public setToNullValue: any = null;\n  private rows: CtrRowItem[] = [];\n  // private currHighlighted: CtrRowItem;\n  private currHighlighted: CtrRowItem | any;\n  // private isScrollOn: boolean;\n  private isScrollOn: boolean | any;\n\n  constructor( @Host() private completer: MdbCompleterDirective, private el: ElementRef) {\n    this.completer.registerDropdown(this);\n  }\n\n  public ngOnInit() {\n    const css = getComputedStyle(this.el.nativeElement);\n    this.isScrollOn = css.maxHeight && css.overflowY === 'auto';\n  }\n\n  public ngOnDestroy() {\n    // this.completer.registerDropdown(null);\n    this.completer.registerDropdown(this.setToNullValue);\n  }\n\n  public ngAfterViewInit() {\n    const autoHighlightIndex = this.completer.autoHighlightIndex;\n    if (autoHighlightIndex) {\n      setTimeout(\n        () => {\n          this.highlightRow(autoHighlightIndex);\n        },\n        0\n      );\n    }\n  }\n\n  @HostListener('mousedown') public onMouseDown() {\n    // Support for canceling blur on IE (issue #158)\n    this.completer.cancelBlur(true);\n    setTimeout(\n      () => {\n        this.completer.cancelBlur(false);\n      },\n      0\n    );\n  }\n\n  public registerRow(row: CtrRowItem) {\n    this.rows.push(row);\n  }\n\n  public highlightRow(index: number): any {\n\n    const highlighted = this.rows.find(row => row.index === index);\n\n    if (index < 0) {\n      if (this.currHighlighted) {\n        this.currHighlighted.row.setHighlighted(false);\n      }\n      this.currHighlighted = undefined;\n      this.completer.onHighlighted(this.setToNullValue);\n      return;\n    }\n\n    if (!highlighted) {\n      return;\n    }\n\n    if (this.currHighlighted) {\n      this.currHighlighted.row.setHighlighted(false);\n    }\n\n    this.currHighlighted = highlighted;\n    this.currHighlighted.row.setHighlighted(true);\n    this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n\n    if (this.isScrollOn && this.currHighlighted) {\n      const rowTop = this.dropdownRowTop();\n      if (rowTop < 0) {\n        this.dropdownScrollTopTo(rowTop - 1);\n      } else {\n        const row = this.currHighlighted.row.getNativeElement();\n        if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n          this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n          if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row)\n            < row.getBoundingClientRect().top) {\n            this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top\n            // + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10)));\n            + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as any, 10)));\n          }\n        }\n      }\n    }\n  }\n\n  public clear() {\n    this.rows = [];\n  }\n\n  public onSelected(item: CompleterItem) {\n    this.completer.onSelected(item);\n  }\n\n  public selectCurrent() {\n    if (this.currHighlighted) {\n      this.onSelected(this.currHighlighted.row.getDataItem());\n    } else if (this.rows.length > 0) {\n      this.onSelected(this.rows[0].row.getDataItem());\n    }\n\n  }\n\n  public nextRow() {\n    let nextRowIndex = 0;\n    if (this.currHighlighted) {\n      nextRowIndex = this.currHighlighted.index + 1;\n    }\n    this.highlightRow(nextRowIndex);\n  }\n\n  public prevRow() {\n    let nextRowIndex = -1;\n    if (this.currHighlighted) {\n      nextRowIndex = this.currHighlighted.index - 1;\n    }\n    this.highlightRow(nextRowIndex);\n  }\n\n  private dropdownScrollTopTo(offset: any) {\n    this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n  }\n\n  private dropdownRowTop() {\n    return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n      (this.el.nativeElement.getBoundingClientRect().top +\n        // parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10));\n        parseInt(getComputedStyle(this.el.nativeElement).paddingTop as any, 10));\n  }\n\n  private dropdownHeight() {\n    return this.el.nativeElement.getBoundingClientRect().top +\n      // parseInt(getComputedStyle(this.el.nativeElement).maxHeight, 10);\n      parseInt(getComputedStyle(this.el.nativeElement).maxHeight as any, 10);\n  }\n\n  private dropdownRowOffsetHeight(row: any) {\n    const css = getComputedStyle(row);\n    return row.offsetHeight +\n      // parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n      parseInt(css.marginTop as any, 10) + parseInt(css.marginBottom as any, 10);\n  }\n}\n","'use strict';\nimport {\n  AfterViewChecked, Component, Input, Output, EventEmitter, OnInit, ViewChild,\n  forwardRef, AfterViewInit, ElementRef, HostListener, Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { MdbCompleterDirective } from '../directives/completer.directive';\nimport { CompleterData } from '../services/completer-data.service';\nimport { CompleterService } from '../services/completer.service';\nimport { CompleterItem } from './completer-item.component';\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS } from '../globals';\nimport { trigger, state, transition, animate, style } from '@angular/animations';\n\nconst noop = () => { };\n\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CompleterComponent),\n  multi: true\n};\n\n\n@Component({\n  selector: 'mdb-autocomplete, mdb-completer',\n  template: \"<div class=\\\"completer-holder md-form\\\" mdbCompleter> <input #mdbInput [attr.id]=\\\"inputId.length > 0 ? inputId : null\\\" type=\\\"search\\\" class=\\\"completer-input form-control mdb-autocomplete\\\" mdbInput [ngClass]=\\\"inputClass\\\" [(ngModel)]=\\\"searchStr\\\" (ngModelChange)=\\\"onChange($event)\\\" [attr.name]=\\\"inputName\\\" [placeholder]=\\\"placeholder\\\" [attr.maxlength]=\\\"maxChars\\\" [tabindex]=\\\"fieldTabindex\\\" [disabled]=\\\"disableInput\\\" [clearSelected]=\\\"clearSelected\\\" [clearUnselected]=\\\"clearUnselected\\\" [overrideSuggested]=\\\"overrideSuggested\\\" [openOnFocus]=\\\"openOnFocus\\\" [fillHighlighted]=\\\"fillHighlighted\\\" (blur)=\\\"onBlur()\\\" (focus)=\\\"onFocus()\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" /> <button type=\\\"button\\\" [tabindex]=\\\"clearButtonTabIndex\\\" class=\\\"mdb-autocomplete-clear\\\" (click)=\\\"activateClearButton($event)\\\" (focus)=\\\"triggerClearButtonAnimation('focused')\\\" (blur)=\\\"triggerClearButtonAnimation('unfocused')\\\" (mouseenter)=\\\"triggerClearButtonAnimation('focused')\\\" (mouseleave)=\\\"triggerClearButtonAnimation('unfocused')\\\" [@focusAnimation]=\\\"{value: state}\\\"> &#x2715; </button> <label #labelEl [ngClass]=\\\"{'active': focused || value || placeholder}\\\">{{ label }}</label> <div class=\\\"completer-dropdown-holder\\\" *mdbList=\\\"dataService; minSearchLength: minSearchLength; pause: pause; autoMatch: autoMatch; initialValue: initialValue; autoHighlight: autoHighlight; let items = results; let searchActive = searching; let isInitialized = searchInitialized; let isOpen = isOpen;\\\"> <div class=\\\"completer-dropdown\\\" mdbAutocompleteDropdown *ngIf=\\\"isInitialized && isOpen && ((items.length > 0 || displayNoResults) || (searchActive && displaySearching))\\\"> <div *ngIf=\\\"searchActive && displaySearching\\\" class=\\\"completer-searching\\\">{{_textSearching}}</div> <div *ngIf=\\\"!searchActive && (!items || items.length === 0)\\\" class=\\\"completer-no-results\\\">{{_textNoResults}}</div> <div class=\\\"completer-row-wrapper\\\" *ngFor=\\\"let item of items; let rowIndex=index\\\"> <div class=\\\"completer-row\\\" [mdbRow]=\\\"rowIndex\\\" [dataItem]=\\\"item\\\"> <div class=\\\"completer-item-text\\\" [ngClass]=\\\"{'completer-item-text-image': item.image || item.image === '' }\\\"> <mdb-completer-list-item class=\\\"completer-title\\\" [text]=\\\"item.title\\\" [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'title'\\\"></mdb-completer-list-item> <mdb-completer-list-item *ngIf=\\\"item.description && item.description != ''\\\" class=\\\"completer-description\\\" [text]=\\\"item.description\\\" [matchClass]=\\\"matchClass\\\" [searchStr]=\\\"searchStr\\\" [type]=\\\"'description'\\\"> </mdb-completer-list-item> </div> <div *ngIf=\\\"item.image || item.image === ''\\\" class=\\\"completer-image-holder\\\"> <img *ngIf=\\\"item.image != ''\\\" src=\\\"{{item.image}}\\\" class=\\\"completer-image\\\" /> <div *ngIf=\\\"item.image === ''\\\" class=\\\"completer-image-default\\\"></div> </div> </div> </div> </div> </div> </div> \",\n  providers: [COMPLETER_CONTROL_VALUE_ACCESSOR],\n  animations: [trigger('focusAnimation', [\n    state('unfocused', style({ transform: 'scale(1.0, 1.0)', })),\n    state('focused', style({ transform: 'scale(1.5, 1.5)' })),\n    transition('unfocused => focused', animate('200ms ease-in')),\n    transition('focused => unfocused', animate('200ms ease-in'))\n  ])]\n})\nexport class CompleterComponent implements OnInit, ControlValueAccessor, AfterViewChecked, AfterViewInit {\n  @Input() public dataService: CompleterData;\n  @Input() public inputName = '';\n  @Input() public inputId = '';\n  @Input() public pause = PAUSE;\n  @Input() public minSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public maxChars = MAX_CHARS;\n  @Input() public overrideSuggested = false;\n  @Input() public clearSelected = false;\n  @Input() public clearUnselected = false;\n  @Input() public fillHighlighted = true;\n  @Input() public placeholder = '';\n  @Input() public matchClass: string;\n  @Input() public fieldTabindex: number;\n  @Input() public clearButtonTabIndex: number;\n  @Input() public autoMatch = false;\n  @Input() public disableInput = false;\n  @Input() public inputClass: string;\n  @Input() public autofocus = false;\n  @Input() public openOnFocus = false;\n  @Input() public initialValue: any;\n  @Input() public autoHighlight = false;\n  @Input() public label: string;\n\n  @Input()\n  public set datasource(source: CompleterData | string | Array<any>) {\n    if (source) {\n      if (source instanceof Array) {\n        this.dataService = this.completerService.local(source);\n      } else if (typeof (source) === 'string') {\n        this.dataService = this.completerService.remote(source);\n      } else {\n        this.dataService = source;\n      }\n    }\n  }\n\n  @Input()\n  public set textNoResults(text: string) {\n    if (this._textNoResults !== text) {\n      this._textNoResults = text;\n      this.displayNoResults = this._textNoResults && this._textNoResults !== 'false';\n    }\n  }\n\n  @Input()\n  public set textSearching(text: string) {\n    if (this._textSearching !== text) {\n      this._textSearching = text;\n      this.displaySearching = this._textSearching && this._textSearching !== 'false';\n    }\n  }\n\n  @Output() public selected = new EventEmitter<CompleterItem>();\n  @Output() public highlighted = new EventEmitter<CompleterItem>();\n  @Output() public blur = new EventEmitter();\n  @Output() public focusEvent = new EventEmitter();\n  @Output() public opened = new EventEmitter<boolean>();\n  @Output() public keyup: EventEmitter<any> = new EventEmitter();\n  @Output() public keydown: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(MdbCompleterDirective) public completer: MdbCompleterDirective;\n  @ViewChild('mdbInput') public mdbInput: ElementRef;\n  @ViewChild('labelEl') labelEl: ElementRef;\n\n  public focused = false;\n\n  // Used in sliding-down animation\n  state = 'unfocused';\n\n  public searchStr = '';\n  public control = new FormControl('');\n\n  displaySearching: any = true;\n  displayNoResults: any = true;\n  _onTouchedCallback: () => void = noop;\n  _onChangeCallback: (_: any) => void = noop;\n  _focus = false;\n  _open = false;\n  _textNoResults = TEXT_NO_RESULTS;\n  _textSearching = TEXT_SEARCHING;\n\n  constructor(\n    private completerService: CompleterService,\n    private renderer: Renderer2,\n    private el: ElementRef) { }\n\n  @HostListener('keyup', ['$event']) onkeyup(event: any) {\n    if (event.target.value !== '') {\n      this.renderer.setStyle(event.target.nextElementSibling, 'visibility', 'visible');\n    }\n  }\n\n  @HostListener('click', ['$event']) onclick(event: any) {\n    if (event.target === this.labelEl.nativeElement) {\n      this.renderer.addClass(this.labelEl.nativeElement, 'active');\n      this._focus = true;\n    }\n  }\n\n  @HostListener('focusin') onFocusIn() {\n    if (this.labelEl) {\n      this.renderer.addClass(this.labelEl.nativeElement, 'active');\n    }\n  }\n\n  @HostListener('focusout') onFocusOut() {\n    if (this.mdbInput.nativeElement.value === '' && this.labelEl && !this.placeholder) {\n      this.renderer.removeClass(this.labelEl.nativeElement, 'active');\n    }\n  }\n\n  activateClearButton(event: any) {\n    this.mdbInput.nativeElement.value = '';\n    this.searchStr = '';\n    this.renderer.setStyle(event.target, 'visibility', 'hidden');\n  }\n\n  triggerClearButtonAnimation(buttonState: string) {\n    this.state = buttonState;\n  }\n\n  get value(): any { return this.searchStr; }\n\n  set value(v: any) {\n    if (v !== this.searchStr) {\n      this.searchStr = v;\n    }\n    // Propagate the change in any case\n    this._onChangeCallback(v);\n  }\n\n  public ngAfterViewInit() {\n    if (this.labelEl) {\n      this.renderer.removeClass(this.labelEl.nativeElement, 'active');\n    }\n\n    if (this.autofocus) {\n      this._focus = true;\n    }\n\n    if (this.initialValue || this.searchStr || this.placeholder) {\n      this.renderer.addClass(this.labelEl.nativeElement, 'active');\n    }\n  }\n\n  public ngAfterViewChecked(): void {\n\n    if (this._focus) {\n      this.mdbInput.nativeElement.focus();\n      this._focus = false;\n    }\n\n  }\n\n  public onTouched() {\n    this._onTouchedCallback();\n  }\n\n  public writeValue(value: any) {\n    this.searchStr = value;\n  }\n\n  public registerOnChange(fn: any) {\n    this._onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  public ngOnInit() {\n    this.completer.selected.subscribe((item: CompleterItem) => {\n      this.selected.emit(item);\n    });\n    this.completer.highlighted.subscribe((item: CompleterItem) => {\n      this.highlighted.emit(item);\n    });\n    this.completer.opened.subscribe((isOpen: boolean) => {\n      this._open = isOpen;\n      this.opened.emit(isOpen);\n    });\n    if (this.initialValue) {\n      this.searchStr = this.initialValue;\n      this.onFocus();\n    }\n  }\n\n  public onBlur() {\n    this.onTouched();\n    if (this.searchStr === undefined || this.searchStr === '') {\n      this.focused = false;\n    }\n    this.blur.emit(this);\n  }\n\n  public onFocus() {\n    setTimeout(() => {\n      this.focused = true;\n    }, 0);\n    this.focusEvent.emit({ focused: true, element: this.el });\n  }\n\n  public onChange(value: string) {\n    this.value = value;\n  }\n\n  public open() {\n    this.completer.open();\n  }\n\n  public close() {\n    this.completer.clear();\n  }\n\n  public focus(): void {\n    if (this.mdbInput) {\n      this.mdbInput.nativeElement.focus();\n    } else {\n      this._focus = true;\n    }\n  }\n\n  public isOpen() {\n    return this._open;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LocalData } from './local-data.service';\nimport { RemoteData } from './remote-data.service';\n\n\n@Injectable()\nexport class CompleterService {\n  constructor(\n    @Inject(LocalData) private localDataFactory: any, // Using any instead of () => LocalData because on AoT errors\n    @Inject(RemoteData) private remoteDataFactory: any // Using any instead of () => LocalData because on AoT errors\n  ) { }\n\n  public local(data: any[] | Observable<any>, searchFields = '', titleField = ''): LocalData {\n\n    const localData = this.localDataFactory();\n    return localData\n      .data(data)\n      .searchFields(searchFields)\n      .titleField(titleField);\n  }\n\n  public remote(url: string, searchFields = '', titleField = ''): RemoteData {\n\n    const remoteData = this.remoteDataFactory();\n    return remoteData\n      .remoteUrl(url)\n      .searchFields(searchFields)\n      .titleField(titleField);\n  }\n}\n","\nimport { catchError, map } from 'rxjs/operators';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Subscription } from 'rxjs';\n\n\n\nimport { CompleterBaseData } from './base-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\n\nexport class RemoteData extends CompleterBaseData {\n  public setToNullValue: any = null;\n  private _remoteUrl: string;\n  private remoteSearch: Subscription;\n  // private _urlFormater: (term: string) => string | any = null;\n  private _urlFormater: (term: string) => string | any = this.setToNullValue;\n  // private _dataField: string = null;\n  private _dataField: string | any = null;\n  private _headers: Headers;\n  private _requestOptions: RequestOptions;\n\n\n  constructor(private http: Http) {\n    super();\n  }\n\n  public remoteUrl(remoteUrl: string) {\n    this._remoteUrl = remoteUrl;\n    return this;\n  }\n\n  public urlFormater(urlFormater: (term: string) => string) {\n    this._urlFormater = urlFormater;\n  }\n\n  public dataField(dataField: string) {\n    this._dataField = dataField;\n  }\n\n  /**\n   * @deprecated Please use the requestOptions to pass headers with the search request\n   */\n  public headers(headers: Headers) {\n    this._headers = headers;\n  }\n\n  public requestOptions(requestOptions: RequestOptions) {\n    this._requestOptions = requestOptions;\n  }\n\n  public search(term: string): void {\n    this.cancel();\n    // let params = {};\n    let url = '';\n    if (this._urlFormater) {\n      url = this._urlFormater(term);\n    } else {\n      url = this._remoteUrl + encodeURIComponent(term);\n    }\n\n    /*\n     * If requestOptions are provided, they will override anything set in headers.\n     *\n     * If no requestOptions are provided, a new RequestOptions object will be instantiated,\n     * and either the provided headers or a new Headers() object will be sent.\n     */\n    if (!this._requestOptions) {\n      this._requestOptions = new RequestOptions();\n      this._requestOptions.headers = this._headers || new Headers();\n    }\n\n    this.remoteSearch = this.http.get(url, this._requestOptions).pipe(\n      map((res: Response) => res.json()),\n      map((data: any) => {\n        const matches = this.extractValue(data, this._dataField);\n        return this.extractMatches(matches, term);\n      }),\n      map(\n        (matches: any[]) => {\n          const results = this.processResults(matches);\n          this.next(results);\n          return results;\n        }),\n      catchError((err) => {\n        this.error(err);\n        // return null;\n        return this.setToNullValue;\n      }), )\n      .subscribe();\n  }\n\n  public cancel() {\n    if (this.remoteSearch) {\n      this.remoteSearch.unsubscribe();\n    }\n  }\n\n  // public convertToItem(data: any): CompleterItem {\n  public convertToItem(data: any): CompleterItem | any {\n    return super.convertToItem(data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CompleterBaseData } from './base-data.service';\nimport { CompleterItem } from '../components/completer-item.component';\n\n@Injectable()\nexport class LocalData extends CompleterBaseData {\n\n  private _data: any[];\n  // private savedTerm: string;\n  private savedTerm: string | any;\n\n  constructor() {\n    super();\n  }\n\n  public data(data: any[] | Observable<any[]>) {\n    if (data instanceof Observable) {\n      (<Observable<any[]>>data).subscribe((res) => {\n        this._data = res;\n        if (this.savedTerm) {\n          this.search(this.savedTerm);\n        }\n      });\n    } else {\n      this._data = <any[]>data;\n    }\n\n    return this;\n  }\n\n  public search(term: string): void {\n    if (!this._data) {\n      this.savedTerm = term;\n    } else {\n      this.savedTerm = null;\n      const matches: any[] = this.extractMatches(this._data, term);\n      this.next(this.processResults(matches));\n    }\n  }\n\n  // public convertToItem(data: any): CompleterItem {\n    public convertToItem(data: any): CompleterItem | any {\n    return super.convertToItem(data);\n  }\n}\n","import { Subject } from 'rxjs';\n\nimport { CompleterItem } from '../components/completer-item.component';\nimport { CompleterData } from './completer-data.service';\nimport { isNil } from '../globals';\n\nexport abstract class CompleterBaseData extends Subject<CompleterItem[]> implements CompleterData {\n\n\n  protected _searchFields: string;\n  protected _titleField: string;\n  protected _descriptionField: string;\n  protected _imageField: string;\n\n  constructor() {\n    super();\n  }\n\n  public abstract search(term: string): void;\n\n  public cancel() { }\n\n  public searchFields(searchFields: string) {\n    this._searchFields = searchFields;\n    return this;\n  }\n\n  public titleField(titleField: string) {\n    this._titleField = titleField;\n    return this;\n  }\n\n  public descriptionField(descriptionField: string) {\n    this._descriptionField = descriptionField;\n    return this;\n  }\n\n  public imageField(imageField: string) {\n    this._imageField = imageField;\n    return this;\n  }\n\n  public convertToItem(data: any) {\n    // let image: string = null;\n    let image: string | any = null;\n    let formattedText: string;\n    // let formattedDesc: string;\n    let formattedDesc: string | any;\n\n    if (this._titleField) {\n      formattedText = this.extractTitle(data);\n    } else {\n      formattedText = data;\n    }\n\n    if (this._descriptionField) {\n      formattedDesc = this.extractValue(data, this._descriptionField);\n    }\n\n    if (this._imageField) {\n      image = this.extractValue(data, this._imageField);\n    }\n\n    if (isNil(formattedText)) {\n      return null;\n    }\n\n    return {\n      title: formattedText,\n      description: formattedDesc,\n      image: image,\n      originalObject: data\n    } as CompleterItem;\n\n  }\n\n  protected extractMatches(data: any[], term: string) {\n    let matches: any[] = [];\n    const searchFields = this._searchFields ? this._searchFields.split(',') : null;\n    if (this._searchFields !== null && this._searchFields !== undefined && term !== '') {\n      matches = data.filter(item => {\n        const values: any[] = searchFields ?\n        searchFields.map(searchField => this.extractValue(item, searchField)).filter(value => !!value) : [item];\n        return values.some(value => value.toString().toLowerCase().indexOf(term.toString().toLowerCase()) >= 0);\n      });\n    } else {\n      matches = data;\n    }\n\n\n    return matches;\n  }\n\n  protected extractTitle(item: any) {\n    // split title fields and run extractValue for each and join with ' '\n    return this._titleField.split(',')\n      .map((field) => {\n        return this.extractValue(item, field);\n      })\n      .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n  }\n\n  protected extractValue(obj: any, key: string) {\n    let keys: string[];\n    let result: any;\n    if (key) {\n      keys = key.split('.');\n      result = obj;\n      for (let i = 0; i < keys.length; i++) {\n        if (result) {\n          result = result[keys[i]];\n        }\n      }\n    } else {\n      result = obj;\n    }\n    return result;\n  }\n\n  protected processResults(matches: string[]): CompleterItem[] {\n    let i: number;\n    const results: CompleterItem[] = [];\n\n    if (matches && matches.length > 0) {\n      for (i = 0; i < matches.length; i++) {\n        const item = this.convertToItem(matches[i]);\n        if (item) {\n          results.push(item);\n        }\n      }\n    }\n    return results;\n  }\n}\n","export const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\nexport const MIN_SEARCH_LENGTH = 3;\nexport const PAUSE = 100;\nexport const TEXT_SEARCHING = 'Searching...';\nexport const TEXT_NO_RESULTS = 'No results found';\nexport const CLEAR_TIMEOUT = 50;\n\nexport function isNil(value: string) {\n  return typeof value === 'undefined' || value === null;\n}\n","import { Directive, EventEmitter, Output } from '@angular/core';\n\nimport { CompleterItem } from '../components/completer-item.component';\n\nexport interface CompleterList {\n  search(term: string): void;\n  open(): void;\n  isOpen(open: boolean): void;\n  clear(): void;\n}\n\nexport interface CompleterDropdown {\n  clear(): void;\n  selectCurrent(): void;\n  nextRow(): void;\n  prevRow(): void;\n}\n\n@Directive({\n  selector: '[mdbCompleter]',\n})\nexport class MdbCompleterDirective {\n  @Output() public selected = new EventEmitter<CompleterItem>();\n  @Output() public highlighted = new EventEmitter<CompleterItem>();\n  @Output() public opened = new EventEmitter<boolean>();\n\n  private list: CompleterList;\n  private dropdown: CompleterDropdown;\n  private _hasHighlighted = false;\n  private _hasSelected = false;\n  private _cancelBlur = false;\n  private _isOpen = false;\n  private _autoHighlightIndex: number;\n\n  public setToNullValue: any = null;\n  public registerList(list: CompleterList) {\n    this.list = list;\n  }\n\n  public registerDropdown(dropdown: CompleterDropdown) {\n    this.dropdown = dropdown;\n  }\n\n  public onHighlighted(item: CompleterItem) {\n    this.highlighted.emit(item);\n    this._hasHighlighted = !!item;\n  }\n\n  public onSelected(item: CompleterItem, clearList = true) {\n    this.selected.emit(item);\n    if (item) {\n      this._hasSelected = true;\n    }\n    if (clearList) {\n      this.clear();\n    }\n  }\n\n  public search(term: string) {\n    if (this._hasSelected) {\n      // this.selected.emit(null);\n      this.selected.emit(this.setToNullValue);\n      this._hasSelected = false;\n    }\n    if (this.list) {\n      this.list.search(term);\n    }\n  }\n\n  public clear() {\n    if (this.dropdown) {\n      this.dropdown.clear();\n    }\n    if (this.list) {\n      this.list.clear();\n    }\n    this._hasHighlighted = false;\n    this.isOpen = false;\n  }\n\n  public selectCurrent() {\n    if (this.dropdown) {\n      this.dropdown.selectCurrent();\n    }\n  }\n\n  public nextRow() {\n    if (this.dropdown) {\n      this.dropdown.nextRow();\n    }\n  }\n\n  public prevRow() {\n    if (this.dropdown) {\n      this.dropdown.prevRow();\n    }\n  }\n\n  public hasHighlighted() {\n    return this._hasHighlighted;\n  }\n\n  public cancelBlur(cancel: boolean) {\n    this._cancelBlur = cancel;\n  }\n\n  public isCancelBlur() {\n    return this._cancelBlur;\n  }\n\n  public open() {\n    if (!this._isOpen) {\n      this.isOpen = true;\n      this.list.open();\n    }\n  }\n\n  public get isOpen() {\n    return this._isOpen;\n  }\n\n  public set isOpen(open: boolean) {\n    this._isOpen = open;\n    this.opened.emit(this._isOpen);\n    if (this.list) {\n      this.list.isOpen(open);\n    }\n  }\n\n  public get autoHighlightIndex() {\n    return this._autoHighlightIndex;\n  }\n\n  public set autoHighlightIndex(index: number) {\n    this._autoHighlightIndex = index;\n  }\n\n  public get hasSelected() {\n    return this._hasSelected;\n  }\n}\n","'use strict';\nimport {Component, Input, OnInit} from '@angular/core';\n\nexport interface MatchPart {\n  isMatch: boolean;\n  text: string;\n}\n\n@Component({\n  selector: 'mdb-completer-list-item',\n  template: \"<span class=\\\"completer-list-item-holder\\\" [ngClass]=\\\"{'completer-title': type === 'title', 'completer-description': type === 'description'}\\\" > <span class=\\\"completer-list-item\\\" *ngFor=\\\"let part of parts\\\" [ngClass]=\\\"part.isMatch ? matchClass : null\\\">{{part.text}}</span> </span> \"\n})\nexport class CompleterListItemComponent implements OnInit {\n  @Input() public text: string;\n  @Input() public searchStr: string;\n  @Input() public matchClass: string;\n  @Input() public type: string;\n\n  public parts: MatchPart[] = [];\n  public ngOnInit(): any {\n    if (!this.searchStr) {\n      this.parts.push({ isMatch: false, text: this.text });\n      return;\n    }\n    const matchStr = this.text.toLowerCase();\n    let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n    let startIndex = 0;\n    while (matchPos >= 0) {\n      const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n      if (matchPos === 0) {\n        this.parts.push({ isMatch: true, text: matchText });\n        startIndex += this.searchStr.length;\n      } else if (matchPos > 0) {\n        const matchPart = this.text.slice(startIndex, matchPos);\n        this.parts.push({ isMatch: false, text: matchPart });\n        this.parts.push({ isMatch: true, text: matchText });\n        startIndex += this.searchStr.length + matchPart.length;\n      }\n      matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n    }\n    if (startIndex < this.text.length) {\n       this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n    }\n  }\n}\n","\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n// SideNav\nexport const slideIn: any = trigger('slideIn', [\n  state('inactive', style({ opacity: 0, transform: 'translateX(-300%)' })),\n  state('active', style({ opacity: 1, transform: 'translateX(0)' })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const fadeIn: any = trigger('fadeIn', [\n  state('inactive', style({ opacity: 0 })),\n  state('active', style({ opacity: 1 })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const slideOut: any = trigger('slideOut', [\n  state('inactive', style({ opacity: 0, transform: 'translateX(-300%)' })),\n  state('active', style({ opacity: 1, transform: 'translateX(0)' })),\n  transition('inactive => active', animate('500ms ease')),\n  transition('active => inactive', animate('500ms ease')),\n]);\n\nexport const flipState: any = trigger('flipState', [\n\n  state('active', style({ transform: 'rotateY(179.9deg)' })),\n  state('inactive', style({ transform: 'rotateY(0)' })),\n]);\n\n// Rotating animation animation\nexport const turnState: any = trigger('turnState', [\n  state('active', style({ transform: 'rotateY(179.9deg)' })),\n  state('inactive', style({ transform: 'rotateY(0)' })),\n]);\n\n// Social reveal animation\nexport const iconsState: any = trigger('iconsState', [\n  state('isactive', style({ visibility: 'visible', transform: 'translate(-6%)' })),\n  state('isnotactive', style({ visibility: 'hidden', transform: 'translate(27%)' })),\n  transition('isactive => isnotactive', animate('100ms ease-in')),\n  transition('isnotactive => isactive', animate('200ms ease-out')),\n]);\n\n// Reveal animation animation\nexport const socialsState: any = trigger('socialsState', [\n  state('active', style({ visibility: 'visible', transform: 'translateY(-100%)' })),\n  state('inactive', style({ visibility: 'hidden', transform: 'translateY(0)' })),\n  transition('* => void', animate('200ms ease-in')),\n  transition('void => *', animate('200ms ease-out')),\n]);\n\n// image popup\n// export const zoomState: any = trigger('zoomState', [\n//   state('active', style({ transform: 'scale(1, 1)', cursor: 'zoom-out' })),\n//   state('inactive', style({ transform: 'scale(0.9, 0.9)', cursor: 'zoom-in' })),\n//   transition('active => inactive', animate('300ms ease-in')),\n//   transition('inactive => active', animate('300ms ease-out')),\n// ]);\n\n// export const restartState: any = trigger('restartState', [\n//   state('inactive', style({ transform: 'scale(0.9, 0.9)' })),\n// ]);\n\n// alerts\nexport const flyInOut: any = trigger('flyInOut', [\n  state('inactive', style({ display: 'none', opacity: 0.7 })),\n  state('active', style({ opacity: 0.7 })),\n  state('removed', style({ opacity: 0 })),\n  transition('inactive => active', animate('300ms ease-in')),\n  transition('active => removed', animate('300ms ease-in')),\n]);\n","import {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ToastComponent } from './toast.component';\nimport { TOAST_CONFIG } from './toast.token';\nimport { ToastService } from './toast.service';\nimport { GlobalConfig } from './toast.config';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { Overlay } from '../overlay/overlay';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ToastComponent],\n  declarations: [ToastComponent],\n  entryComponents: [ToastComponent],\n})\nexport class ToastModule {\n  static forRoot(config?: GlobalConfig): ModuleWithProviders {\n    return {\n      ngModule: ToastModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: config },\n        OverlayContainer,\n        Overlay,\n        ToastService,\n      ]\n    };\n  }\n  constructor(@Optional() @SkipSelf() parentModule: ToastModule) {\n    if (parentModule) {\n      throw new Error('ToastModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n}\n","import { Injectable, Injector, ComponentRef, Inject, SecurityContext } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { GlobalConfig, IndividualConfig, ToastPackage, tsConfig } from './toast.config';\nimport { ToastInjector, ToastRef } from './toast.injector';\nimport { ToastContainerDirective } from './toast.directive';\nimport { TOAST_CONFIG } from './toast.token';\nimport { ToastComponent } from './toast.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface ActiveToast {\n  toastId?: number;\n  message?: string;\n  portal?: ComponentRef<any>;\n  toastRef?: ToastRef<any>;\n  onShown?: Observable<any>;\n  onHidden?: Observable<any>;\n  onTap?: Observable<any>;\n  onAction?: Observable<any>;\n}\n\n@Injectable()\nexport class ToastService {\n  index = 0;\n  previousToastMessage = '';\n  currentlyActive = 0;\n  toasts: ActiveToast[] = [];\n  overlayContainer: ToastContainerDirective;\n\n  constructor(\n    // @Inject(TOAST_CONFIG) public toastConfig: GlobalConfig,\n    @Inject(TOAST_CONFIG) public toastConfig: GlobalConfig | any,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n  ) {\n    tsConfig.serviceInstance = this;\n\n\n    function use<T>(source: T, defaultValue: T): T {\n      return toastConfig && source !== undefined ? source : defaultValue;\n    }\n    this.toastConfig = this.applyConfig(toastConfig);\n    // Global\n    this.toastConfig.maxOpened = use(this.toastConfig.maxOpened, 0);\n    this.toastConfig.autoDismiss = use(this.toastConfig.autoDismiss, false);\n    this.toastConfig.newestOnTop = use(this.toastConfig.newestOnTop, true);\n    this.toastConfig.preventDuplicates = use(this.toastConfig.preventDuplicates, false);\n    if (!this.toastConfig.iconClasses) {\n      this.toastConfig.iconClasses = {};\n    }\n    this.toastConfig.iconClasses.error = this.toastConfig.iconClasses.error || 'toast-error';\n    this.toastConfig.iconClasses.info = this.toastConfig.iconClasses.info || 'toast-info';\n    this.toastConfig.iconClasses.success = this.toastConfig.iconClasses.success || 'toast-success';\n    this.toastConfig.iconClasses.warning = this.toastConfig.iconClasses.warning || 'toast-warning';\n\n    // Individual\n    this.toastConfig.timeOut = use(this.toastConfig.timeOut, 5000);\n    this.toastConfig.closeButton = use(this.toastConfig.closeButton, false);\n    this.toastConfig.extendedTimeOut = use(this.toastConfig.extendedTimeOut, 1000);\n    this.toastConfig.progressBar = use(this.toastConfig.progressBar, false);\n    this.toastConfig.enableHtml = use(this.toastConfig.enableHtml, false);\n    this.toastConfig.toastClass = use(this.toastConfig.toastClass, 'toast');\n    this.toastConfig.positionClass = use(this.toastConfig.positionClass, 'toast-top-right');\n    this.toastConfig.titleClass = use(this.toastConfig.titleClass, 'toast-title');\n    this.toastConfig.messageClass = use(this.toastConfig.messageClass, 'toast-message');\n    this.toastConfig.tapToDismiss = use(this.toastConfig.tapToDismiss, true);\n    this.toastConfig.toastComponent = use(this.toastConfig.toastComponent, ToastComponent);\n    this.toastConfig.onActivateTick = use(this.toastConfig.onActivateTick, false);\n    this.toastConfig.actionButton = use(this.toastConfig.actionButton, '');\n  }\n  /** show successful toast */\n  // show(message: string, title?: string, override?: IndividualConfig, type = '') {\n    show(message: string, title?: string | any, override?: IndividualConfig, type = '') {\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  // success(message: string, title?: string, override?: IndividualConfig) {\n    success(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.success;\n    const type: any = this.toastConfig.iconClasses.success;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  // error(message: string, title?: string, override?: IndividualConfig) {\n    error(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.error;\n    const type: any = this.toastConfig.iconClasses.error;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  // info(message: string, title?: string, override?: IndividualConfig) {\n    info(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.info;\n    const type: any = this.toastConfig.iconClasses.info;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  // warning(message: string, title?: string, override?: IndividualConfig) {\n    warning(message: string, title?: string | any, override?: IndividualConfig) {\n  //   const type = this.toastConfig.iconClasses.warning;\n    const type: any = this.toastConfig.iconClasses.warning;\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    let toast: any;\n    for (toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    // const found = this._findToast(toastId);\n    const found: any = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= +this.toastConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      // const p = this.toasts[this.currentlyActive].toastRef;\n      const p: any = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: IndividualConfig = {}): GlobalConfig {\n    function use<T>(source: T, defaultValue: T): T {\n      return override && source !== undefined ? source : defaultValue;\n    }\n    const current: GlobalConfig = { ...this.toastConfig };\n    current.closeButton = use(override.closeButton, current.closeButton);\n    current.extendedTimeOut = use(override.extendedTimeOut, current.extendedTimeOut);\n    current.progressBar = use(override.progressBar, current.progressBar);\n    current.timeOut = use(override.timeOut, current.timeOut);\n    current.enableHtml = use(override.enableHtml, current.enableHtml);\n    current.toastClass = use(override.toastClass, current.toastClass);\n    current.positionClass = use(override.positionClass, current.positionClass);\n    current.titleClass = use(override.titleClass, current.titleClass);\n    current.messageClass = use(override.messageClass, current.messageClass);\n    current.tapToDismiss = use(override.tapToDismiss, current.tapToDismiss);\n    current.toastComponent = use(override.toastComponent, current.toastComponent);\n    current.onActivateTick = use(override.onActivateTick, current.onActivateTick);\n    current.actionButton = use(override.actionButton, current.actionButton);\n    return current;\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string,\n    title: string,\n    config: GlobalConfig,\n  ): ActiveToast | null | any {\n    // max opened and auto dismiss = true\n    if (this.toastConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastConfig.maxOpened && this.currentlyActive >= this.toastConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    // let sanitizedMessage = message;\n    let sanitizedMessage: any = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    // const ins: ActiveToast = {\n      const ins: ActiveToast | any = {\n      toastId: this.index,\n      message,\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n    };\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    ins.portal = overlayRef.attach(component, this.toastConfig.newestOnTop);\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { GlobalConfig } from './toast.config';\n\nexport const TOAST_CONFIG = new InjectionToken<GlobalConfig>('ToastConfig');\n","import { Injector } from '@angular/core';\nimport { Observable ,  Subject } from 'rxjs';\n\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toast.config';\n\n/**\n * Reference to a toast opened via the Toast service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed: Subject<any> = new Subject();\n  private _activate: Subject<any> = new Subject();\n  private _manualClose: Subject<any> = new Subject();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastPackage && this._toastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n","import { NgModule, ModuleWithProviders, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[mdbToastContainer]',\n  exportAs: 'mdb-toast-container',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) {}\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  exports: [ToastContainerDirective],\n  declarations: [ToastContainerDirective],\n})\nexport class ToastContainerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ToastContainerModule,\n      providers: []\n    };\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  ApplicationRef,\n} from '@angular/core';\n\nimport {\n  trigger,\n  state,\n  transition,\n  animate,\n  style\n} from '@angular/animations';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\n\nimport { GlobalConfig, ToastPackage, tsConfig } from './toast.config';\n\n@Component({\n  selector: 'mdb-toast-component',\n  template: \"<button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" class=\\\"toast-close-button\\\"> &times; </button> <div *ngIf=\\\"title\\\" class=\\\"{{options.titleClass}}\\\" [attr.aria-label]=\\\"title\\\"> {{title}} </div> <div *ngIf=\\\"message && options.enableHtml\\\" class=\\\"{{options.messageClass}}\\\" [innerHTML]=\\\"message\\\"> </div> <div *ngIf=\\\"message && !options.enableHtml\\\" class=\\\"{{options.messageClass}}\\\" [attr.aria-label]=\\\"message\\\"> {{message}} </div> <button *ngIf=\\\"options.actionButton\\\" class=\\\"btn btn-block toast-action mt-2\\\" (click)=\\\"onActionClick()\\\">{{ options.actionButton }}</button> <div *ngIf=\\\"options.progressBar\\\"> <div class=\\\"toast-progress\\\" [style.width.%]=\\\"width\\\"></div> </div>\",\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0\n      })),\n      state('active', style({ opacity: .5 })),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active', animate('300ms ease-in')),\n      transition('active => removed', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class ToastComponent implements OnDestroy {\n  message: string | SafeHtml;\n  title: string;\n  options: GlobalConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = 'inactive';\n   timeout: any;\n   intervalId: any;\n   hideTime: number;\n   sub: Subscription;\n   sub1: Subscription;\n\n   protected toastService: any;\n\n  constructor(\n    public toastPackage: ToastPackage,\n    protected appRef: ApplicationRef\n  ) {\n    this.toastService = tsConfig.serviceInstance;\n\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (this.options.timeOut !== 0) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() =>\n      this.toastService.remove(this.toastPackage.toastId),\n      300\n    );\n  }\n\n  onActionClick() {\n    this.toastPackage.triggerAction();\n    this.remove();\n  }\n\n  @HostListener('click')\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (+this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = +this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + this.options.timeOut;\n    this.width = 100;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n","/* tslint:disable:no-inferrable-types */\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subject ,  Observable } from 'rxjs';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast.injector';\n\n/**\n * Configuration for an individual toast.\n */\n export interface IndividualConfig {\n  /**\n  * toast time to live in milliseconds\n  * default: 5000\n  */\n  // timeOut?: number;\n  timeOut?: number | any;\n  /**\n  * toast show close button\n  * default: false\n  */\n  closeButton?: boolean;\n  /** time to close after a user hovers over toast */\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  // extendedTimeOut?: number;\n  extendedTimeOut?: number | any;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar?: boolean;\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml?: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass?: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass?: string | any;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  titleClass?: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  messageClass?: string;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss?: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent?: ComponentType<any> | any;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick?: boolean;\n\n  actionButton?: string;\n}\n\nexport interface ToastIconClasses {\n  error?: string;\n  info?: string;\n  success?: string;\n  warning?: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened?: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss?: boolean;\n  iconClasses?: ToastIconClasses;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop?: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates?: boolean;\n}\n/**\n * Remove warning message from angular-cli\n */\nexport class GlobalConfig {}\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap: Subject<any> = new Subject();\n  private _onAction: Subject<any> = new Subject();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml,\n    public title: string,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) { }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    this._onTap.complete();\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n    this._onAction.complete();\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n\n}\n\n\nexport const tsConfig = {\n  serviceInstance: new Object()\n};\n","import { ComponentFactoryResolver, Injectable, ApplicationRef } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { OverlayContainer } from './overlay-container';\nimport { ToastContainerDirective } from '../toast/toast.directive';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: any = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n      private _hostDomElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import {\n  ViewContainerRef,\n  ComponentRef,\n  Injector\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  // private _attachedHost: BasePortalHost;\n  private _attachedHost: BasePortalHost | any;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    const host = this._attachedHost;\n    this._attachedHost = null;\n    return host.detach();\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  // setAttachedHost(host: BasePortalHost) {\n    setAttachedHost(host: BasePortalHost): any {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  public setToNullValue: any = null;\n  /** The portal currently attached to the host. */\n  // private _attachedPortal: ComponentPortal<any>;\n  private _attachedPortal: ComponentPortal<any> | any;\n\n  /** A function that will permanently dispose this host. */\n  // private _disposeFn: () => void;\n  private _disposeFn: () => void | any;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) { this._attachedPortal.setAttachedHost(null); }\n\n    this._attachedPortal = null;\n    if (this._disposeFn != null) {\n      this._disposeFn();\n      // this._disposeFn = null;\n      this._disposeFn = this.setToNullValue;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {ComponentRef} from '@angular/core';\nimport {BasePortalHost, ComponentPortal} from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(\n      private _portalHost: BasePortalHost) { }\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SqueezeBoxComponent } from './components/squeezebox';\nimport { SBItemComponent } from './components/sb-item';\nimport { SBItemHeadComponent } from './components/sb-item.head';\nimport { SBItemBodyComponent } from './components/sb-item.body';\n\nexport const SQUEEZEBOX_COMPONENTS = [SqueezeBoxComponent, SBItemComponent, SBItemHeadComponent, SBItemBodyComponent];\nexport { SBItemComponent } from './components/sb-item';\nexport { SBItemHeadComponent } from './components/sb-item.head';\nexport { SBItemBodyComponent } from './components/sb-item.body';\nexport { SqueezeBoxComponent } from './components/squeezebox';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SQUEEZEBOX_COMPONENTS],\n  exports: [SQUEEZEBOX_COMPONENTS]\n})\nexport class AccordionModule { }\n","import {Component, Input, ContentChildren, QueryList, forwardRef} from '@angular/core';\nimport {SBItemComponent} from './sb-item';\nimport {sbConfig} from './sb.config';\n\n@Component({\n  exportAs: 'squeezebox',\n  selector: 'mdb-squeezebox, mdb-accordion',\n  template: \"<div class=\\\"accordion md-accordion\\\"> <ng-content></ng-content> </div>\"\n})\nexport class SqueezeBoxComponent {\n\n  @Input() multiple = true;\n\n  @ContentChildren(forwardRef(() => SBItemComponent)) items: QueryList<SBItemComponent>;\n\n  constructor() {\n    sbConfig.serviceInstance = this;\n  }\n\n  didItemToggled(item: SBItemComponent) {\n    // on not multiple, it will collpase the rest of items\n    if (!this.multiple) {\n      this.items.toArray().forEach(function(i) {\n        if (i !== item) {\n          i.applyToggle(true);\n        }\n      });\n    }\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {SBItemComponent} from './sb-item';\n\n@Component({\n  exportAs: 'sbItemHead',\n  selector: 'mdb-item-head, mdb-accordion-item-head',\n  template: \"<div class=\\\"card-header {{ customClass }}\\\" [ngClass]=\\\"{ 'item-disabled': isDisabled }\\\" (click)=\\\"toggleClick($event)\\\"> <a role=\\\"button\\\"> <h5 class=\\\"mb-0\\\"> <ng-content></ng-content> <i *ngIf=\\\"indicator\\\" class=\\\"fa fa-angle-down rotate-icon\\\"></i> </h5> </a> </div>\"\n})\nexport class SBItemHeadComponent {\n  @Input() isDisabled = false;\n  @Input() customClass: string;\n  @Input() indicator = true;\n\n  constructor(private sbItem: SBItemComponent) {}\n\n  toggleClick(event: any) {\n    event.preventDefault();\n    if (!this.isDisabled) {\n      this.sbItem.collapsed = !this.sbItem.collapsed;\n      this.sbItem.toggle(this.sbItem.collapsed);\n    }\n  }\n}\n","import { Component, ContentChild, Input, AfterContentInit, AfterViewInit } from '@angular/core';\nimport { SBItemBodyComponent } from './sb-item.body';\nimport { sbConfig } from './sb.config';\n\n@Component({\n  exportAs: 'sbItem',\n  selector: 'mdb-item, mdb-accordion-item',\n  template: \"<div class=\\\"card {{ customClass }}\\\" [ngClass]=\\\"{'is-collapsed': collapsed, 'active': !collapsed}\\\"> <ng-content></ng-content> </div>\"\n})\nexport class SBItemComponent implements AfterViewInit, AfterContentInit {\n\n  private squeezebox: any;\n\n  @Input() public collapsed = true;\n  @Input() customClass: string;\n\n  @ContentChild(SBItemBodyComponent) body: SBItemBodyComponent;\n\n  constructor() {\n    this.squeezebox = sbConfig.serviceInstance;\n  }\n\n  ngAfterViewInit() {\n    if (this.body !== undefined) {\n      setTimeout(() => {\n        this.collapsed ? this.body.expandAnimationState = 'collapsed' : this.body.expandAnimationState = 'expanded';\n      }, 0);\n      this.body.toggle(this.collapsed);\n    }\n  }\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      if (this.body && this.body.expandAnimationState === 'expanded') {\n        this.collapsed = false;\n      }\n    }, 40);\n  }\n\n  toggle(collapsed: boolean) {\n    this.squeezebox.didItemToggled(this);\n    this.applyToggle(collapsed);\n  }\n\n  applyToggle(collapsed: boolean) {\n    if (this.body !== undefined) {\n      this.collapsed = collapsed;\n      this.body.toggle(collapsed);\n    }\n  }\n}\n","export const sbConfig = {\n    serviceInstance: new Object()\n};\n","import {Component, ElementRef, ViewChild, Input, ContentChildren, AfterContentInit, QueryList } from '@angular/core';\nimport { state, style, trigger, transition, animate } from '@angular/animations';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { window } from '../../../free/utils/facade/browser';\n\n\n@Component({\n  exportAs: 'sbItemBody',\n  selector: 'mdb-item-body, mdb-accordion-item-body',\n  template: \"<div #body class=\\\"sb-item-body\\\" [style.height]=\\\"height\\\" [@expandBody]=\\\"expandAnimationState\\\"> <div class=\\\"card-body {{ customClass }}\\\"> <ng-content></ng-content> </div> </div>\",\n  animations: [\n    trigger('expandBody', [\n      state('collapsed', style({height: '0px', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate('500ms ease')),\n    ])\n  ]\n})\nexport class SBItemBodyComponent implements AfterContentInit {\n  @Input() customClass: string;\n  @ContentChildren(RouterLinkWithHref) routerLinks: QueryList<RouterLinkWithHref>;\n\n  public height = '0';\n  expandAnimationState = 'collapsed';\n\n  @ViewChild('body') bodyEl: ElementRef;\n\n  constructor() {}\n\n  toggle(collapsed: boolean) {\n    setTimeout(() => {\n      collapsed ? this.expandAnimationState = 'collapsed' : this.expandAnimationState = 'expanded';\n    }, 0);\n  }\n\n  openSidenavOnActiveLink(activeUrl: string) {\n    const activeLink = this.routerLinks.find( (link: any) => {\n      return link.href === activeUrl;\n    });\n    if (activeLink) {\n      setTimeout(() => {\n        this.expandAnimationState = 'expanded';\n      }, 40);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.openSidenavOnActiveLink(window.location.pathname);\n  }\n\n}\n","/*tslint:disable */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n */\n var win = typeof window !== 'undefined' && window || <any>{};\n\n export {win as window};\n export var document = win.document;\n export var location = win.location;\n export var gc = win['gc'] ? () => win['gc']() : (): any => null;\n export var performance = win['performance'] ? win['performance'] : null;\n export const Event = win['Event'];\n export const MouseEvent = win['MouseEvent'];\n export const KeyboardEvent = win['KeyboardEvent'];\n export const EventTarget = win['EventTarget'];\n export const History = win['History'];\n export const Location = win['Location'];\n export const EventListener = win['EventListener'];\n"],"names":["MODULES","CommonModule","NgModule","Input","HostBinding","ElementRef","Renderer2","Directive","ChangeDetectorRef","tslib_1.__decorate","Observable","EventEmitter","defineInjectable","Output","ViewContainerRef","ChangeDetectionStrategy","Injectable","ContentChildren","RouterLinkWithHref","Component","HostListener","ViewChild","NO_ERRORS_SCHEMA","document","Attribute","NG_VALIDATORS","forwardRef","Inject","PLATFORM_ID","isPlatformBrowser","ApplicationRef","Injector","NgZone","ComponentFactoryResolver","TemplateRef","state","style","trigger","FormsModule","NG_VALUE_ACCESSOR","ViewEncapsulation","DOCUMENT","Router","Optional","Util","isDevMode","Host","tslib_1.__extends","animate","transition","isPlatformServer","Subject","HttpModule","timer","NgModel","FormControl","catchError","map","SkipSelf","DomSanitizer","SecurityContext","InjectionToken"],"mappings":"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IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,IAAd;IACI,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAG;IACb,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;IACI,QAAQ,EAAE,GAAd;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}